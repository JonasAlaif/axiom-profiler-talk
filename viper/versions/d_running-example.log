[tool-version] Z3 4.8.7
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #3 pi
[mk-app] #4 euler
[mk-var] datatype#0 0
[mk-var] datatype#1 1
[mk-app] datatype#2 insert datatype#0 datatype#1
[mk-app] datatype#3 pattern datatype#2
[mk-app] datatype#4 head datatype#2
[mk-app] datatype#5 = datatype#0 datatype#4
[mk-quant] datatype#6 constructor_accessor_axiom 2 datatype#3 datatype#5
[attach-var-names] datatype#6 (;k!0) (;List)
[mk-app] datatype#7 tail datatype#2
[mk-app] datatype#8 = datatype#1 datatype#7
[mk-quant] datatype#9 constructor_accessor_axiom 2 datatype#3 datatype#8
[attach-var-names] datatype#9 (;k!0) (;List)
[mk-app] #5 bv
[attach-meaning] #5 bv #b1
[mk-app] #6 bv
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[mk-var] #7 0
[mk-var] #8 1
[mk-var] #9 2
[mk-var] #10 3
[mk-var] #11 4
[mk-var] #12 5
[mk-var] #13 6
[mk-var] #14 7
[mk-var] #15 8
[mk-var] #16 9
[mk-var] #17 10
[mk-var] #18 11
[mk-var] #19 12
[mk-var] #20 13
[mk-var] #21 14
[mk-app] #22 + #15 #13
[mk-proof] #23 true-axiom #1
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[mk-var] #23 0
[mk-var] #15 1
[mk-var] #13 2
[mk-var] #22 3
[mk-var] #7 4
[mk-var] #21 5
[mk-var] #20 6
[mk-var] #19 7
[mk-var] #18 8
[mk-var] #17 9
[mk-var] #16 10
[mk-var] #14 11
[mk-var] #12 12
[mk-var] #11 13
[mk-var] #10 14
[mk-app] #9 + #18 #20
[mk-proof] #8 true-axiom #1
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-var] datatype#10 0
[mk-var] datatype#11 1
[mk-app] datatype#12 $Snap.combine datatype#10 datatype#11
[mk-app] datatype#13 pattern datatype#12
[mk-app] datatype#14 $Snap.first datatype#12
[mk-app] datatype#15 = datatype#10 datatype#14
[mk-quant] datatype#16 constructor_accessor_axiom 2 datatype#13 datatype#15
[attach-var-names] datatype#16 (;$Snap) (;$Snap)
[mk-app] datatype#17 $Snap.second datatype#12
[mk-app] datatype#18 = datatype#11 datatype#17
[mk-quant] datatype#19 constructor_accessor_axiom 2 datatype#13 datatype#18
[attach-var-names] datatype#19 (;$Snap) (;$Snap)
[mk-app] #24 Real
[attach-meaning] #24 arith 1
[mk-app] #25 Real
[attach-meaning] #25 arith 0
[mk-app] #26 <= #25 #23
[mk-app] #27 = #23 #25
[mk-app] #28 not #27
[mk-app] #29 and #26 #28
[mk-app] #30 <= #15 #23
[mk-app] #31 if #30 #15 #23
[mk-var] #32 1
[mk-var] #33 0
[mk-app] #34 <= #32 #33
[mk-app] #35 if #34 #32 #33
[mk-app] #36 Int
[attach-meaning] #36 arith 0
[mk-app] #37 < #33 #36
[mk-app] #38 if #37 #36 #33
[mk-app] #39 $SortWrappers.IntTo$Snap #33
[mk-app] #40 $SortWrappers.$SnapToInt #39
[mk-app] #41 = #33 #40
[mk-app] #42 pattern #39
[mk-quant] #43 $Snap.$SnapToIntTo$Snap 1 #42 #41
[attach-var-names] #43 (|x| ; |Int|)
[mk-proof] #44 asserted #43
[mk-app] #45 = #43 #43
[mk-proof] #46 refl #45
[mk-var] #45 0
[mk-app] #46 $SortWrappers.$SnapToInt #45
[mk-app] #47 $SortWrappers.IntTo$Snap #46
[mk-app] #48 = #45 #47
[mk-app] #49 pattern #46
[mk-quant] #50 $Snap.IntTo$SnapToInt 1 #49 #48
[attach-var-names] #50 (|x| ; |$Snap|)
[mk-proof] #51 asserted #50
[mk-app] #52 = #50 #50
[mk-proof] #53 refl #52
[mk-var] #52 0
[mk-app] #53 $SortWrappers.BoolTo$Snap #52
[mk-app] #54 $SortWrappers.$SnapToBool #53
[mk-app] #55 = #52 #54
[mk-app] #56 pattern #53
[mk-quant] #57 $Snap.$SnapToBoolTo$Snap 1 #56 #55
[attach-var-names] #57 (|x| ; |Bool|)
[mk-proof] #58 asserted #57
[mk-app] #59 = #57 #57
[mk-proof] #60 refl #59
[mk-app] #59 $SortWrappers.$SnapToBool #45
[mk-app] #60 $SortWrappers.BoolTo$Snap #59
[mk-app] #61 = #45 #60
[mk-app] #62 pattern #59
[mk-quant] #63 $Snap.BoolTo$SnapToBool 1 #62 #61
[attach-var-names] #63 (|x| ; |$Snap|)
[mk-proof] #64 asserted #63
[mk-app] #65 = #63 #63
[mk-proof] #66 refl #65
[mk-var] #65 0
[mk-app] #66 $SortWrappers.$RefTo$Snap #65
[mk-app] #67 $SortWrappers.$SnapTo$Ref #66
[mk-app] #68 = #65 #67
[mk-app] #69 pattern #66
[mk-quant] #70 $Snap.$SnapTo$RefTo$Snap 1 #69 #68
[attach-var-names] #70 (|x| ; |$Ref|)
[mk-proof] #71 asserted #70
[mk-app] #72 = #70 #70
[mk-proof] #73 refl #72
[mk-app] #72 $SortWrappers.$SnapTo$Ref #45
[mk-app] #73 $SortWrappers.$RefTo$Snap #72
[mk-app] #74 = #45 #73
[mk-app] #75 pattern #72
[mk-quant] #76 $Snap.$RefTo$SnapTo$Ref 1 #75 #74
[attach-var-names] #76 (|x| ; |$Snap|)
[mk-proof] #77 asserted #76
[mk-app] #78 = #76 #76
[mk-proof] #79 refl #78
[mk-app] #78 $SortWrappers.$PermTo$Snap #23
[mk-app] #79 $SortWrappers.$SnapTo$Perm #78
[mk-app] #80 = #23 #79
[mk-app] #81 pattern #78
[mk-quant] #82 $Snap.$SnapTo$PermTo$Snap 1 #81 #80
[attach-var-names] #82 (|x| ; |Real|)
[mk-proof] #83 asserted #82
[mk-app] #84 = #82 #82
[mk-proof] #85 refl #84
[mk-app] #84 $SortWrappers.$SnapTo$Perm #45
[mk-app] #85 $SortWrappers.$PermTo$Snap #84
[mk-app] #86 = #45 #85
[mk-app] #87 pattern #84
[mk-quant] #88 $Snap.$PermTo$SnapTo$Perm 1 #87 #86
[attach-var-names] #88 (|x| ; |$Snap|)
[mk-proof] #89 asserted #88
[mk-app] #90 = #88 #88
[mk-proof] #91 refl #90
[mk-var] #90 0
[mk-app] #91 $SortWrappers.Seq<Int>To$Snap #90
[mk-app] #92 $SortWrappers.$SnapToSeq<Int> #91
[mk-app] #93 = #90 #92
[mk-app] #94 pattern #91
[mk-quant] #95 $Snap.$SnapToSeq<Int>To$Snap 1 #94 #93
[attach-var-names] #95 (|x| ; |Seq<Int>|)
[mk-proof] #96 asserted #95
[mk-app] #97 = #95 #95
[mk-proof] #98 refl #97
[mk-app] #97 $SortWrappers.$SnapToSeq<Int> #45
[mk-app] #98 $SortWrappers.Seq<Int>To$Snap #97
[mk-app] #99 = #45 #98
[mk-app] #100 pattern #97
[mk-quant] #101 $Snap.Seq<Int>To$SnapToSeq<Int> 1 #100 #99
[attach-var-names] #101 (|x| ; |$Snap|)
[mk-proof] #102 asserted #101
[mk-app] #103 = #101 #101
[mk-proof] #104 refl #103
[mk-var] #103 0
[mk-app] #104 $SortWrappers.Ptr32To$Snap #103
[mk-app] #105 $SortWrappers.$SnapToPtr32 #104
[mk-app] #106 = #103 #105
[mk-app] #107 pattern #104
[mk-quant] #108 $Snap.$SnapToPtr32To$Snap 1 #107 #106
[attach-var-names] #108 (|x| ; |Ptr32|)
[mk-proof] #109 asserted #108
[mk-app] #110 = #108 #108
[mk-proof] #111 refl #110
[mk-app] #110 $SortWrappers.$SnapToPtr32 #45
[mk-app] #111 $SortWrappers.Ptr32To$Snap #110
[mk-app] #112 = #45 #111
[mk-app] #113 pattern #110
[mk-quant] #114 $Snap.Ptr32To$SnapToPtr32 1 #113 #112
[attach-var-names] #114 (|x| ; |$Snap|)
[mk-proof] #115 asserted #114
[mk-app] #116 = #114 #114
[mk-proof] #117 refl #116
[mk-app] #116 Seq_length #90
[mk-app] #117 <= #36 #116
[mk-app] #118 pattern #116
[mk-quant] #119 k!133 1 #118 #117
[attach-var-names] #119 (|s| ; |Seq<Int>|)
[mk-proof] #120 asserted #119
[mk-app] #121 Int
[attach-meaning] #121 arith (- 1)
[mk-app] #122 * #121 #116
[mk-app] #123 >= #116 #36
[inst-discovered] theory-solving 0x0 arith# ; #117
[mk-app] #121 = #117 #123
[mk-proof] #122 rewrite #121
[instance] 0x0 #121
[end-of-instance]
[mk-quant] #124 k!133 1 #118 #123
[attach-var-names] #124 (|s| ; |Seq<Int>|)
[mk-lambda] #125 null 1 #122
[mk-proof] #126 proof-bind #125
[mk-app] #127 = #119 #124
[mk-proof] #128 quant-intro #126 #127
[mk-proof] #129 mp #120 #128 #124
[mk-app] #130 Seq_empty
[mk-app] #131 Seq_length #130
[mk-app] #132 = #131 #36
[mk-proof] #133 asserted #132
[mk-app] #134 = #132 #132
[mk-proof] #135 refl #134
[mk-app] #134 = #116 #36
[mk-app] #135 = #90 #130
[mk-app] #136 => #134 #135
[mk-quant] #137 k!138 1 #118 #136
[attach-var-names] #137 (|s| ; |Seq<Int>|)
[mk-proof] #138 asserted #137
[mk-app] #139 not #134
[mk-app] #140 or #139 #135
[inst-discovered] theory-solving 0x0 basic# ; #136
[mk-app] #141 = #136 #140
[mk-proof] #142 rewrite #141
[instance] 0x0 #141
[end-of-instance]
[mk-quant] #143 k!138 1 #118 #140
[attach-var-names] #143 (|s| ; |Seq<Int>|)
[mk-lambda] #144 null 1 #142
[mk-proof] #145 proof-bind #144
[mk-app] #146 = #137 #143
[mk-proof] #147 quant-intro #145 #146
[mk-proof] #148 mp #138 #147 #143
[mk-app] #149 Seq_singleton #33
[mk-app] #150 Seq_length #149
[mk-app] #151 Int
[attach-meaning] #151 arith 1
[mk-app] #152 = #150 #151
[mk-app] #153 pattern #149
[mk-quant] #154 k!142 1 #153 #152
[attach-var-names] #154 (|e| ; |Int|)
[mk-proof] #155 asserted #154
[mk-app] #156 = #154 #154
[mk-proof] #157 refl #156
[mk-var] #156 1
[mk-app] #157 = #156 #130
[mk-app] #158 not #157
[mk-app] #159 not #135
[mk-app] #160 and #158 #159
[mk-app] #161 Seq_append #156 #90
[mk-app] #162 Seq_length #161
[mk-app] #163 Seq_length #156
[mk-app] #164 + #163 #116
[mk-app] #165 = #162 #164
[mk-app] #166 => #160 #165
[mk-app] #167 pattern #162
[mk-quant] #168 k!150 2 #167 #166
[attach-var-names] #168 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-proof] #169 asserted #168
[mk-app] #170 + #116 #163
[inst-discovered] theory-solving 0x0 arith# ; #164
[mk-app] #171 = #164 #170
[mk-proof] #172 rewrite #171
[instance] 0x0 #171
[end-of-instance]
[mk-app] #173 = #162 #170
[mk-app] #174 = #165 #173
[mk-proof] #175 monotonicity #172 #174
[mk-app] #176 Int
[attach-meaning] #176 arith (- 1)
[mk-app] #177 * #176 #116
[attach-meaning] #176 arith (- 1)
[mk-app] #178 * #176 #163
[mk-app] #179 + #177 #162 #178
[attach-meaning] #176 arith (- 1)
[mk-app] #180 * #176 #162
[mk-app] #181 + #116 #180 #163
[mk-app] #177 = #181 #36
[inst-discovered] theory-solving 0x0 arith# ; #173
[mk-app] #178 = #173 #177
[mk-proof] #179 rewrite #178
[instance] 0x0 #178
[end-of-instance]
[mk-app] #182 = #165 #177
[mk-proof] #183 trans #175 #179 #182
[mk-app] #184 => #160 #177
[mk-app] #185 = #166 #184
[mk-proof] #186 monotonicity #183 #185
[mk-app] #187 not #160
[mk-app] #188 or #187 #177
[inst-discovered] theory-solving 0x0 basic# ; #184
[mk-app] #189 = #184 #188
[mk-proof] #190 rewrite #189
[instance] 0x0 #189
[end-of-instance]
[mk-app] #191 = #166 #188
[mk-proof] #192 trans #186 #190 #191
[mk-quant] #193 k!150 2 #167 #188
[attach-var-names] #193 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #194 null 2 #192
[mk-proof] #195 proof-bind #194
[mk-app] #196 = #168 #193
[mk-proof] #197 quant-intro #195 #196
[mk-proof] #198 mp #169 #197 #193
[mk-app] #199 = #161 #90
[mk-app] #200 => #157 #199
[mk-app] #201 = #161 #156
[mk-app] #202 => #135 #201
[mk-app] #203 and #200 #202
[mk-app] #204 pattern #161
[mk-quant] #205 k!156 2 #204 #203
[attach-var-names] #205 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-proof] #206 asserted #205
[mk-app] #207 or #158 #199
[inst-discovered] theory-solving 0x0 basic# ; #200
[mk-app] #208 = #200 #207
[mk-proof] #209 rewrite #208
[instance] 0x0 #208
[end-of-instance]
[mk-app] #210 or #159 #201
[inst-discovered] theory-solving 0x0 basic# ; #202
[mk-app] #211 = #202 #210
[mk-proof] #212 rewrite #211
[instance] 0x0 #211
[end-of-instance]
[mk-app] #213 and #207 #210
[mk-app] #214 = #203 #213
[mk-proof] #215 monotonicity #209 #212 #214
[mk-quant] #216 k!156 2 #204 #213
[attach-var-names] #216 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #217 null 2 #215
[mk-proof] #218 proof-bind #217
[mk-app] #219 = #205 #216
[mk-proof] #220 quant-intro #218 #219
[mk-proof] #221 mp #206 #220 #216
[mk-app] #222 Seq_index #149 #36
[mk-app] #223 = #222 #33
[mk-quant] #224 k!160 1 #153 #223
[attach-var-names] #224 (|e| ; |Int|)
[mk-proof] #225 asserted #224
[mk-app] #226 = #224 #224
[mk-proof] #227 refl #226
[mk-app] #226 Seq_add #32 #33
[mk-app] #227 + #32 #33
[mk-app] #228 = #226 #227
[mk-app] #229 pattern #226
[mk-quant] #230 k!164 2 #229 #228
[attach-var-names] #230 (|j| ; |Int|) (|i| ; |Int|)
[mk-proof] #231 asserted #230
[attach-meaning] #176 arith (- 1)
[mk-app] #232 * #176 #32
[attach-meaning] #176 arith (- 1)
[mk-app] #233 * #176 #33
[mk-app] #234 + #232 #233 #226
[attach-meaning] #176 arith (- 1)
[mk-app] #235 * #176 #226
[mk-app] #236 + #32 #33 #235
[mk-app] #232 = #236 #36
[inst-discovered] theory-solving 0x0 arith# ; #228
[mk-app] #233 = #228 #232
[mk-proof] #234 rewrite #233
[instance] 0x0 #233
[end-of-instance]
[mk-quant] #237 k!164 2 #229 #232
[attach-var-names] #237 (|j| ; |Int|) (|i| ; |Int|)
[mk-lambda] #238 null 2 #234
[mk-proof] #239 proof-bind #238
[mk-app] #240 = #230 #237
[mk-proof] #241 quant-intro #239 #240
[mk-proof] #242 mp #231 #241 #237
[mk-app] #243 Seq_sub #32 #33
[mk-app] #244 - #32 #33
[mk-app] #245 = #243 #244
[mk-app] #246 pattern #243
[mk-quant] #247 k!168 2 #246 #245
[attach-var-names] #247 (|j| ; |Int|) (|i| ; |Int|)
[mk-proof] #248 asserted #247
[attach-meaning] #176 arith (- 1)
[mk-app] #249 * #176 #33
[mk-app] #250 + #32 #249
[inst-discovered] theory-solving 0x0 arith# ; #244
[mk-app] #251 = #244 #250
[mk-proof] #252 rewrite #251
[instance] 0x0 #251
[end-of-instance]
[mk-app] #253 = #243 #250
[mk-app] #254 = #245 #253
[mk-proof] #255 monotonicity #252 #254
[attach-meaning] #176 arith (- 1)
[mk-app] #256 * #176 #32
[mk-app] #257 + #256 #33 #243
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[mk-app] #258 * #176 #243
[mk-app] #259 + #32 #249 #258
[mk-app] #256 = #259 #36
[inst-discovered] theory-solving 0x0 arith# ; #253
[mk-app] #257 = #253 #256
[mk-proof] #260 rewrite #257
[instance] 0x0 #257
[end-of-instance]
[mk-app] #261 = #245 #256
[mk-proof] #262 trans #255 #260 #261
[mk-quant] #263 k!168 2 #246 #256
[attach-var-names] #263 (|j| ; |Int|) (|i| ; |Int|)
[mk-lambda] #264 null 2 #262
[mk-proof] #265 proof-bind #264
[mk-app] #266 = #247 #263
[mk-proof] #267 quant-intro #265 #266
[mk-proof] #268 mp #248 #267 #263
[mk-var] #269 2
[mk-app] #270 = #269 #130
[mk-app] #271 not #270
[mk-app] #272 <= #36 #33
[mk-app] #273 Seq_length #269
[mk-app] #274 < #33 #273
[mk-app] #275 and #272 #274
[mk-app] #276 and #158 #275
[mk-app] #277 and #271 #276
[mk-app] #278 Seq_append #269 #156
[mk-app] #279 Seq_index #278 #33
[mk-app] #280 Seq_index #269 #33
[mk-app] #281 = #279 #280
[mk-app] #282 => #277 #281
[mk-app] #283 pattern #279
[mk-app] #284 pattern #280 #278
[mk-quant] #285 k!179 3 #283 #284 #282
[attach-var-names] #285 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-proof] #286 asserted #285
[attach-meaning] #176 arith (- 1)
[mk-app] #287 >= #33 #36
[inst-discovered] theory-solving 0x0 arith# ; #272
[mk-app] #288 = #272 #287
[mk-proof] #289 rewrite #288
[instance] 0x0 #288
[end-of-instance]
[mk-app] #290 <= #273 #33
[mk-app] #291 not #290
[inst-discovered] theory-solving 0x0 arith# ; #274
[mk-app] #292 = #274 #291
[mk-proof] #293 rewrite #292
[instance] 0x0 #292
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #294 + #249 #273
[attach-meaning] #176 arith (- 1)
[mk-app] #295 * #176 #273
[mk-app] #296 + #33 #295
[mk-app] #294 >= #296 #36
[inst-discovered] theory-solving 0x0 arith# ; #290
[mk-app] #297 = #290 #294
[mk-proof] #298 rewrite #297
[instance] 0x0 #297
[end-of-instance]
[mk-app] #299 not #294
[mk-app] #300 = #291 #299
[mk-proof] #301 monotonicity #298 #300
[mk-app] #302 = #274 #299
[mk-proof] #303 trans #293 #301 #302
[mk-app] #304 and #287 #299
[mk-app] #305 = #275 #304
[mk-proof] #306 monotonicity #289 #303 #305
[mk-app] #307 and #158 #304
[mk-app] #308 = #276 #307
[mk-proof] #309 monotonicity #306 #308
[mk-app] #310 and #158 #287 #299
[inst-discovered] theory-solving 0x0 basic# ; #307
[mk-app] #311 = #307 #310
[mk-proof] #312 rewrite #311
[instance] 0x0 #311
[end-of-instance]
[mk-app] #313 = #276 #310
[mk-proof] #314 trans #309 #312 #313
[mk-app] #315 and #271 #310
[mk-app] #316 = #277 #315
[mk-proof] #317 monotonicity #314 #316
[mk-app] #318 and #271 #158 #287 #299
[inst-discovered] theory-solving 0x0 basic# ; #315
[mk-app] #319 = #315 #318
[mk-proof] #320 rewrite #319
[instance] 0x0 #319
[end-of-instance]
[mk-app] #321 = #277 #318
[mk-proof] #322 trans #317 #320 #321
[mk-app] #323 => #318 #281
[mk-app] #324 = #282 #323
[mk-proof] #325 monotonicity #322 #324
[mk-app] #326 not #318
[mk-app] #327 or #326 #281
[inst-discovered] theory-solving 0x0 basic# ; #323
[mk-app] #328 = #323 #327
[mk-proof] #329 rewrite #328
[instance] 0x0 #328
[end-of-instance]
[mk-app] #330 = #282 #327
[mk-proof] #331 trans #325 #329 #330
[mk-quant] #332 k!179 3 #283 #284 #327
[attach-var-names] #332 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #333 null 3 #331
[mk-proof] #334 proof-bind #333
[mk-app] #335 = #285 #332
[mk-proof] #336 quant-intro #334 #335
[mk-proof] #337 mp #286 #336 #332
[mk-app] #338 Seq_length #278
[mk-app] #339 < #33 #338
[mk-app] #340 and #290 #339
[mk-app] #341 and #158 #340
[mk-app] #342 and #271 #341
[mk-app] #343 Seq_sub #33 #273
[mk-app] #344 Seq_add #343 #273
[mk-app] #345 = #344 #33
[mk-app] #346 Seq_index #156 #343
[mk-app] #347 = #279 #346
[mk-app] #348 and #345 #347
[mk-app] #349 => #342 #348
[mk-quant] #350 k!193 3 #283 #349
[attach-var-names] #350 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-proof] #351 asserted #350
[attach-meaning] #176 arith (- 1)
[mk-app] #352 + #249 #273
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #290
[instance] 0x0 #297
[end-of-instance]
[mk-app] #352 <= #338 #33
[mk-app] #353 not #352
[inst-discovered] theory-solving 0x0 arith# ; #339
[mk-app] #354 = #339 #353
[mk-proof] #355 rewrite #354
[instance] 0x0 #354
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #356 + #249 #338
[attach-meaning] #176 arith (- 1)
[mk-app] #357 * #176 #338
[mk-app] #358 + #33 #357
[mk-app] #356 >= #358 #36
[inst-discovered] theory-solving 0x0 arith# ; #352
[mk-app] #359 = #352 #356
[mk-proof] #360 rewrite #359
[instance] 0x0 #359
[end-of-instance]
[mk-app] #361 not #356
[mk-app] #362 = #353 #361
[mk-proof] #363 monotonicity #360 #362
[mk-app] #364 = #339 #361
[mk-proof] #365 trans #355 #363 #364
[mk-app] #366 and #294 #361
[mk-app] #367 = #340 #366
[mk-proof] #368 monotonicity #298 #365 #367
[mk-app] #369 and #158 #366
[mk-app] #370 = #341 #369
[mk-proof] #371 monotonicity #368 #370
[mk-app] #372 and #158 #294 #361
[inst-discovered] theory-solving 0x0 basic# ; #369
[mk-app] #373 = #369 #372
[mk-proof] #374 rewrite #373
[instance] 0x0 #373
[end-of-instance]
[mk-app] #375 = #341 #372
[mk-proof] #376 trans #371 #374 #375
[mk-app] #377 and #271 #372
[mk-app] #378 = #342 #377
[mk-proof] #379 monotonicity #376 #378
[mk-app] #380 and #271 #158 #294 #361
[inst-discovered] theory-solving 0x0 basic# ; #377
[mk-app] #381 = #377 #380
[mk-proof] #382 rewrite #381
[instance] 0x0 #381
[end-of-instance]
[mk-app] #383 = #342 #380
[mk-proof] #384 trans #379 #382 #383
[mk-app] #385 => #380 #348
[mk-app] #386 = #349 #385
[mk-proof] #387 monotonicity #384 #386
[mk-app] #388 not #380
[mk-app] #389 or #388 #348
[inst-discovered] theory-solving 0x0 basic# ; #385
[mk-app] #390 = #385 #389
[mk-proof] #391 rewrite #390
[instance] 0x0 #390
[end-of-instance]
[mk-app] #392 = #349 #389
[mk-proof] #393 trans #387 #391 #392
[mk-quant] #394 k!193 3 #283 #389
[attach-var-names] #394 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #395 null 3 #393
[mk-proof] #396 proof-bind #395
[mk-app] #397 = #350 #394
[mk-proof] #398 quant-intro #396 #397
[mk-proof] #399 mp #351 #398 #394
[mk-app] #400 < #33 #163
[mk-app] #401 and #272 #400
[mk-app] #402 and #158 #401
[mk-app] #403 and #271 #402
[mk-app] #404 Seq_add #33 #273
[mk-app] #405 Seq_sub #404 #273
[mk-app] #406 = #405 #33
[mk-app] #407 Seq_index #278 #404
[mk-app] #408 Seq_index #156 #33
[mk-app] #409 = #407 #408
[mk-app] #410 and #406 #409
[mk-app] #411 => #403 #410
[mk-app] #412 pattern #408 #278
[mk-quant] #413 k!207 3 #412 #411
[attach-var-names] #413 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-proof] #414 asserted #413
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #272
[instance] 0x0 #288
[end-of-instance]
[mk-app] #415 <= #163 #33
[mk-app] #416 not #415
[inst-discovered] theory-solving 0x0 arith# ; #400
[mk-app] #417 = #400 #416
[mk-proof] #418 rewrite #417
[instance] 0x0 #417
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #419 + #249 #163
[attach-meaning] #176 arith (- 1)
[mk-app] #420 * #176 #163
[mk-app] #421 + #33 #420
[mk-app] #419 >= #421 #36
[inst-discovered] theory-solving 0x0 arith# ; #415
[mk-app] #422 = #415 #419
[mk-proof] #423 rewrite #422
[instance] 0x0 #422
[end-of-instance]
[mk-app] #424 not #419
[mk-app] #425 = #416 #424
[mk-proof] #426 monotonicity #423 #425
[mk-app] #427 = #400 #424
[mk-proof] #428 trans #418 #426 #427
[mk-app] #429 and #287 #424
[mk-app] #430 = #401 #429
[mk-proof] #431 monotonicity #289 #428 #430
[mk-app] #432 and #158 #429
[mk-app] #433 = #402 #432
[mk-proof] #434 monotonicity #431 #433
[mk-app] #435 and #158 #287 #424
[inst-discovered] theory-solving 0x0 basic# ; #432
[mk-app] #436 = #432 #435
[mk-proof] #437 rewrite #436
[instance] 0x0 #436
[end-of-instance]
[mk-app] #438 = #402 #435
[mk-proof] #439 trans #434 #437 #438
[mk-app] #440 and #271 #435
[mk-app] #441 = #403 #440
[mk-proof] #442 monotonicity #439 #441
[mk-app] #443 and #271 #158 #287 #424
[inst-discovered] theory-solving 0x0 basic# ; #440
[mk-app] #444 = #440 #443
[mk-proof] #445 rewrite #444
[instance] 0x0 #444
[end-of-instance]
[mk-app] #446 = #403 #443
[mk-proof] #447 trans #442 #445 #446
[mk-app] #448 => #443 #410
[mk-app] #449 = #411 #448
[mk-proof] #450 monotonicity #447 #449
[mk-app] #451 not #443
[mk-app] #452 or #451 #410
[inst-discovered] theory-solving 0x0 basic# ; #448
[mk-app] #453 = #448 #452
[mk-proof] #454 rewrite #453
[instance] 0x0 #453
[end-of-instance]
[mk-app] #455 = #411 #452
[mk-proof] #456 trans #450 #454 #455
[mk-quant] #457 k!207 3 #412 #452
[attach-var-names] #457 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #458 null 3 #456
[mk-proof] #459 proof-bind #458
[mk-app] #460 = #413 #457
[mk-proof] #461 quant-intro #459 #460
[mk-proof] #462 mp #414 #461 #457
[mk-app] #463 <= #36 #32
[mk-app] #464 < #32 #273
[mk-app] #465 and #463 #464
[mk-app] #466 Seq_update #269 #32 #33
[mk-app] #467 Seq_length #466
[mk-app] #468 = #467 #273
[mk-app] #469 => #465 #468
[mk-app] #470 pattern #467
[mk-app] #471 pattern #273 #466
[mk-quant] #472 k!214 3 #470 #471 #469
[attach-var-names] #472 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #473 asserted #472
[attach-meaning] #176 arith (- 1)
[mk-app] #474 * #176 #32
[mk-app] #475 >= #32 #36
[inst-discovered] theory-solving 0x0 arith# ; #463
[mk-app] #474 = #463 #475
[mk-proof] #476 rewrite #474
[instance] 0x0 #474
[end-of-instance]
[mk-app] #477 <= #273 #32
[mk-app] #478 not #477
[inst-discovered] theory-solving 0x0 arith# ; #464
[mk-app] #479 = #464 #478
[mk-proof] #480 rewrite #479
[instance] 0x0 #479
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #481 * #176 #32
[mk-app] #482 + #481 #273
[attach-meaning] #176 arith (- 1)
[mk-app] #483 + #32 #295
[mk-app] #481 >= #483 #36
[inst-discovered] theory-solving 0x0 arith# ; #477
[mk-app] #482 = #477 #481
[mk-proof] #484 rewrite #482
[instance] 0x0 #482
[end-of-instance]
[mk-app] #485 not #481
[mk-app] #486 = #478 #485
[mk-proof] #487 monotonicity #484 #486
[mk-app] #488 = #464 #485
[mk-proof] #489 trans #480 #487 #488
[mk-app] #490 and #475 #485
[mk-app] #491 = #465 #490
[mk-proof] #492 monotonicity #476 #489 #491
[mk-app] #493 => #490 #468
[mk-app] #494 = #469 #493
[mk-proof] #495 monotonicity #492 #494
[mk-app] #496 not #490
[mk-app] #497 or #496 #468
[inst-discovered] theory-solving 0x0 basic# ; #493
[mk-app] #498 = #493 #497
[mk-proof] #499 rewrite #498
[instance] 0x0 #498
[end-of-instance]
[mk-app] #500 = #469 #497
[mk-proof] #501 trans #495 #499 #500
[mk-quant] #502 k!214 3 #470 #471 #497
[attach-var-names] #502 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #503 null 3 #501
[mk-proof] #504 proof-bind #503
[mk-app] #505 = #472 #502
[mk-proof] #506 quant-intro #504 #505
[mk-proof] #507 mp #473 #506 #502
[mk-var] #508 3
[mk-var] #509 2
[mk-app] #510 Seq_length #508
[mk-app] #511 < #33 #510
[mk-app] #512 and #272 #511
[mk-app] #513 = #509 #33
[mk-app] #514 Seq_update #508 #509 #32
[mk-app] #515 Seq_index #514 #33
[mk-app] #516 = #515 #32
[mk-app] #517 => #513 #516
[mk-app] #518 not #513
[mk-app] #519 Seq_index #508 #33
[mk-app] #520 = #515 #519
[mk-app] #521 => #518 #520
[mk-app] #522 and #517 #521
[mk-app] #523 => #512 #522
[mk-app] #524 pattern #515
[mk-app] #525 pattern #519 #514
[mk-quant] #526 k!223 4 #524 #525 #523
[attach-var-names] #526 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #527 asserted #526
[mk-app] #528 <= #510 #33
[mk-app] #529 not #528
[inst-discovered] theory-solving 0x0 arith# ; #511
[mk-app] #530 = #511 #529
[mk-proof] #531 rewrite #530
[instance] 0x0 #530
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #532 + #249 #510
[attach-meaning] #176 arith (- 1)
[mk-app] #533 * #176 #510
[mk-app] #534 + #33 #533
[mk-app] #532 >= #534 #36
[inst-discovered] theory-solving 0x0 arith# ; #528
[mk-app] #535 = #528 #532
[mk-proof] #536 rewrite #535
[instance] 0x0 #535
[end-of-instance]
[mk-app] #537 not #532
[mk-app] #538 = #529 #537
[mk-proof] #539 monotonicity #536 #538
[mk-app] #540 = #511 #537
[mk-proof] #541 trans #531 #539 #540
[mk-app] #542 and #287 #537
[mk-app] #543 = #512 #542
[mk-proof] #544 monotonicity #289 #541 #543
[mk-app] #545 or #518 #516
[inst-discovered] theory-solving 0x0 basic# ; #517
[mk-app] #546 = #517 #545
[mk-proof] #547 rewrite #546
[instance] 0x0 #546
[end-of-instance]
[mk-app] #548 or #513 #520
[inst-discovered] theory-solving 0x0 basic# ; #521
[mk-app] #549 = #521 #548
[mk-proof] #550 rewrite #549
[instance] 0x0 #549
[end-of-instance]
[mk-app] #551 and #545 #548
[mk-app] #552 = #522 #551
[mk-proof] #553 monotonicity #547 #550 #552
[mk-app] #554 => #542 #551
[mk-app] #555 = #523 #554
[mk-proof] #556 monotonicity #544 #553 #555
[mk-app] #557 not #542
[mk-app] #558 or #557 #551
[inst-discovered] theory-solving 0x0 basic# ; #554
[mk-app] #559 = #554 #558
[mk-proof] #560 rewrite #559
[instance] 0x0 #559
[end-of-instance]
[mk-app] #561 = #523 #558
[mk-proof] #562 trans #556 #560 #561
[mk-quant] #563 k!223 4 #524 #525 #558
[attach-var-names] #563 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #564 null 4 #562
[mk-proof] #565 proof-bind #564
[mk-app] #566 = #526 #563
[mk-proof] #567 quant-intro #565 #566
[mk-proof] #568 mp #527 #567 #563
[mk-app] #569 <= #33 #163
[mk-app] #570 Seq_take #156 #33
[mk-app] #571 Seq_length #570
[mk-app] #572 = #571 #33
[mk-app] #573 => #569 #572
[mk-app] #574 < #163 #33
[mk-app] #575 = #571 #163
[mk-app] #576 => #574 #575
[mk-app] #577 and #573 #576
[mk-app] #578 => #272 #577
[mk-app] #579 = #571 #36
[mk-app] #580 => #37 #579
[mk-app] #581 and #578 #580
[mk-app] #582 pattern #571
[mk-app] #583 pattern #570 #163
[mk-quant] #584 k!234 2 #582 #583 #581
[attach-var-names] #584 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #585 asserted #584
[attach-meaning] #176 arith (- 1)
[mk-app] #586 <= #421 #36
[inst-discovered] theory-solving 0x0 arith# ; #569
[mk-app] #587 = #569 #586
[mk-proof] #588 rewrite #587
[instance] 0x0 #587
[end-of-instance]
[mk-app] #589 => #586 #572
[mk-app] #590 = #573 #589
[mk-proof] #591 monotonicity #588 #590
[mk-app] #592 not #586
[mk-app] #593 or #592 #572
[inst-discovered] theory-solving 0x0 basic# ; #589
[mk-app] #594 = #589 #593
[mk-proof] #595 rewrite #594
[instance] 0x0 #594
[end-of-instance]
[mk-app] #596 = #573 #593
[mk-proof] #597 trans #591 #595 #596
[mk-app] #598 not #569
[inst-discovered] theory-solving 0x0 arith# ; #574
[mk-app] #599 = #574 #598
[mk-proof] #600 rewrite #599
[instance] 0x0 #599
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #569
[instance] 0x0 #587
[end-of-instance]
[mk-app] #601 = #598 #592
[mk-proof] #602 monotonicity #588 #601
[mk-app] #603 = #574 #592
[mk-proof] #604 trans #600 #602 #603
[mk-app] #605 => #592 #575
[mk-app] #606 = #576 #605
[mk-proof] #607 monotonicity #604 #606
[mk-app] #608 or #575 #586
[inst-discovered] theory-solving 0x0 basic# ; #605
[mk-app] #609 = #605 #608
[mk-proof] #610 rewrite #609
[instance] 0x0 #609
[end-of-instance]
[mk-app] #611 = #576 #608
[mk-proof] #612 trans #607 #610 #611
[mk-app] #613 and #593 #608
[mk-app] #614 = #577 #613
[mk-proof] #615 monotonicity #597 #612 #614
[mk-app] #616 => #287 #613
[mk-app] #617 = #578 #616
[mk-proof] #618 monotonicity #289 #615 #617
[mk-app] #619 not #287
[mk-app] #620 or #619 #613
[inst-discovered] theory-solving 0x0 basic# ; #616
[mk-app] #621 = #616 #620
[mk-proof] #622 rewrite #621
[instance] 0x0 #621
[end-of-instance]
[mk-app] #623 = #578 #620
[mk-proof] #624 trans #618 #622 #623
[mk-app] #625 not #272
[inst-discovered] theory-solving 0x0 arith# ; #37
[mk-app] #626 = #37 #625
[mk-proof] #627 rewrite #626
[instance] 0x0 #626
[end-of-instance]
[mk-app] #628 = #625 #619
[mk-proof] #629 monotonicity #289 #628
[mk-app] #630 = #37 #619
[mk-proof] #631 trans #627 #629 #630
[mk-app] #632 => #619 #579
[mk-app] #633 = #580 #632
[mk-proof] #634 monotonicity #631 #633
[mk-app] #635 or #287 #579
[inst-discovered] theory-solving 0x0 basic# ; #632
[mk-app] #636 = #632 #635
[mk-proof] #637 rewrite #636
[instance] 0x0 #636
[end-of-instance]
[mk-app] #638 = #580 #635
[mk-proof] #639 trans #634 #637 #638
[mk-app] #640 and #620 #635
[mk-app] #641 = #581 #640
[mk-proof] #642 monotonicity #624 #639 #641
[mk-quant] #643 k!234 2 #582 #583 #640
[attach-var-names] #643 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #644 null 2 #642
[mk-proof] #645 proof-bind #644
[mk-app] #646 = #584 #643
[mk-proof] #647 quant-intro #645 #646
[mk-proof] #648 mp #585 #647 #643
[mk-app] #649 < #33 #32
[mk-app] #650 and #649 #274
[mk-app] #651 and #272 #650
[mk-app] #652 Seq_take #269 #32
[mk-app] #653 Seq_index #652 #33
[mk-app] #654 = #653 #280
[mk-app] #655 => #651 #654
[mk-app] #656 pattern #653
[mk-app] #657 pattern #280 #652
[mk-quant] #658 k!241 3 #656 #657 #655
[attach-var-names] #658 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #659 asserted #658
[mk-app] #660 not #34
[inst-discovered] theory-solving 0x0 arith# ; #649
[mk-app] #661 = #649 #660
[mk-proof] #662 rewrite #661
[instance] 0x0 #661
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #663 <= #250 #36
[inst-discovered] theory-solving 0x0 arith# ; #34
[mk-app] #664 = #34 #663
[mk-proof] #665 rewrite #664
[instance] 0x0 #664
[end-of-instance]
[mk-app] #666 not #663
[mk-app] #667 = #660 #666
[mk-proof] #668 monotonicity #665 #667
[mk-app] #669 = #649 #666
[mk-proof] #670 trans #662 #668 #669
[inst-discovered] theory-solving 0x0 arith# ; #274
[instance] 0x0 #292
[end-of-instance]
[mk-app] #671 and #666 #299
[mk-app] #672 = #650 #671
[mk-proof] #673 monotonicity #670 #303 #672
[mk-app] #674 and #287 #671
[mk-app] #675 = #651 #674
[mk-proof] #676 monotonicity #289 #673 #675
[mk-app] #677 and #287 #666 #299
[inst-discovered] theory-solving 0x0 basic# ; #674
[mk-app] #678 = #674 #677
[mk-proof] #679 rewrite #678
[instance] 0x0 #678
[end-of-instance]
[mk-app] #680 = #651 #677
[mk-proof] #681 trans #676 #679 #680
[mk-app] #682 => #677 #654
[mk-app] #683 = #655 #682
[mk-proof] #684 monotonicity #681 #683
[mk-app] #685 not #677
[mk-app] #686 or #685 #654
[inst-discovered] theory-solving 0x0 basic# ; #682
[mk-app] #687 = #682 #686
[mk-proof] #688 rewrite #687
[instance] 0x0 #687
[end-of-instance]
[mk-app] #689 = #655 #686
[mk-proof] #690 trans #684 #688 #689
[mk-quant] #691 k!241 3 #656 #657 #686
[attach-var-names] #691 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #692 null 3 #690
[mk-proof] #693 proof-bind #692
[mk-app] #694 = #658 #691
[mk-proof] #695 quant-intro #693 #694
[mk-proof] #696 mp #659 #695 #691
[mk-app] #697 Seq_drop #156 #33
[mk-app] #698 Seq_length #697
[mk-app] #699 - #163 #33
[mk-app] #700 = #698 #699
[mk-app] #701 => #569 #700
[mk-app] #702 = #698 #36
[mk-app] #703 => #574 #702
[mk-app] #704 and #701 #703
[mk-app] #705 => #272 #704
[mk-app] #706 = #698 #163
[mk-app] #707 => #37 #706
[mk-app] #708 and #705 #707
[mk-app] #709 pattern #698
[mk-app] #710 pattern #163 #697
[mk-quant] #711 k!254 2 #709 #710 #708
[attach-var-names] #711 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #712 asserted #711
[attach-meaning] #176 arith (- 1)
[mk-app] #713 + #163 #249
[inst-discovered] theory-solving 0x0 arith# ; #699
[mk-app] #714 = #699 #713
[mk-proof] #715 rewrite #714
[instance] 0x0 #714
[end-of-instance]
[mk-app] #716 + #249 #163
[inst-discovered] theory-solving 0x0 arith# ; #713
[mk-app] #717 = #713 #716
[mk-proof] #718 rewrite #717
[instance] 0x0 #717
[end-of-instance]
[mk-app] #719 = #699 #716
[mk-proof] #720 trans #715 #718 #719
[mk-app] #721 = #698 #716
[mk-app] #722 = #700 #721
[mk-proof] #723 monotonicity #720 #722
[attach-meaning] #176 arith (- 1)
[mk-app] #724 + #33 #420 #698
[mk-app] #725 = #724 #36
[inst-discovered] theory-solving 0x0 arith# ; #721
[mk-app] #726 = #721 #725
[mk-proof] #727 rewrite #726
[instance] 0x0 #726
[end-of-instance]
[mk-app] #728 = #700 #725
[mk-proof] #729 trans #723 #727 #728
[mk-app] #730 => #586 #725
[mk-app] #731 = #701 #730
[mk-proof] #732 monotonicity #588 #729 #731
[mk-app] #733 or #592 #725
[inst-discovered] theory-solving 0x0 basic# ; #730
[mk-app] #734 = #730 #733
[mk-proof] #735 rewrite #734
[instance] 0x0 #734
[end-of-instance]
[mk-app] #736 = #701 #733
[mk-proof] #737 trans #732 #735 #736
[inst-discovered] theory-solving 0x0 arith# ; #574
[instance] 0x0 #599
[end-of-instance]
[mk-app] #738 => #592 #702
[mk-app] #739 = #703 #738
[mk-proof] #740 monotonicity #604 #739
[mk-app] #741 or #586 #702
[inst-discovered] theory-solving 0x0 basic# ; #738
[mk-app] #742 = #738 #741
[mk-proof] #743 rewrite #742
[instance] 0x0 #742
[end-of-instance]
[mk-app] #744 = #703 #741
[mk-proof] #745 trans #740 #743 #744
[mk-app] #746 and #733 #741
[mk-app] #747 = #704 #746
[mk-proof] #748 monotonicity #737 #745 #747
[mk-app] #749 => #287 #746
[mk-app] #750 = #705 #749
[mk-proof] #751 monotonicity #289 #748 #750
[mk-app] #752 or #619 #746
[inst-discovered] theory-solving 0x0 basic# ; #749
[mk-app] #753 = #749 #752
[mk-proof] #754 rewrite #753
[instance] 0x0 #753
[end-of-instance]
[mk-app] #755 = #705 #752
[mk-proof] #756 trans #751 #754 #755
[mk-app] #757 => #619 #706
[mk-app] #758 = #707 #757
[mk-proof] #759 monotonicity #631 #758
[mk-app] #760 or #287 #706
[inst-discovered] theory-solving 0x0 basic# ; #757
[mk-app] #761 = #757 #760
[mk-proof] #762 rewrite #761
[instance] 0x0 #761
[end-of-instance]
[mk-app] #763 = #707 #760
[mk-proof] #764 trans #759 #762 #763
[mk-app] #765 and #752 #760
[mk-app] #766 = #708 #765
[mk-proof] #767 monotonicity #756 #764 #766
[mk-quant] #768 k!254 2 #709 #710 #765
[attach-var-names] #768 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #769 null 2 #767
[mk-proof] #770 proof-bind #769
[mk-app] #771 = #711 #768
[mk-proof] #772 quant-intro #770 #771
[mk-proof] #773 mp #712 #772 #768
[mk-app] #774 < #36 #32
[mk-app] #775 - #273 #32
[mk-app] #776 < #33 #775
[mk-app] #777 and #272 #776
[mk-app] #778 and #774 #777
[mk-app] #779 Seq_add #33 #32
[mk-app] #780 Seq_sub #779 #32
[mk-app] #781 = #780 #33
[mk-app] #782 Seq_drop #269 #32
[mk-app] #783 Seq_index #782 #33
[mk-app] #784 Seq_index #269 #779
[mk-app] #785 = #783 #784
[mk-app] #786 and #781 #785
[mk-app] #787 => #778 #786
[mk-app] #788 pattern #783
[mk-quant] #789 k!262 3 #788 #787
[attach-var-names] #789 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #790 asserted #789
[mk-app] #791 <= #32 #36
[mk-app] #792 not #791
[inst-discovered] theory-solving 0x0 arith# ; #774
[mk-app] #793 = #774 #792
[mk-proof] #794 rewrite #793
[instance] 0x0 #793
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #795 * #176 #32
[mk-app] #796 + #273 #795
[inst-discovered] theory-solving 0x0 arith# ; #775
[mk-app] #797 = #775 #796
[mk-proof] #798 rewrite #797
[instance] 0x0 #797
[end-of-instance]
[mk-app] #799 + #795 #273
[inst-discovered] theory-solving 0x0 arith# ; #796
[mk-app] #800 = #796 #799
[mk-proof] #801 rewrite #800
[instance] 0x0 #800
[end-of-instance]
[mk-app] #802 = #775 #799
[mk-proof] #803 trans #798 #801 #802
[mk-app] #804 < #33 #799
[mk-app] #805 = #776 #804
[mk-proof] #806 monotonicity #803 #805
[mk-app] #807 <= #799 #33
[mk-app] #808 not #807
[inst-discovered] theory-solving 0x0 arith# ; #804
[mk-app] #809 = #804 #808
[mk-proof] #810 rewrite #809
[instance] 0x0 #809
[end-of-instance]
[mk-app] #811 = #776 #808
[mk-proof] #812 trans #806 #810 #811
[attach-meaning] #176 arith (- 1)
[mk-app] #813 + #795 #249 #273
[attach-meaning] #176 arith (- 1)
[mk-app] #814 + #32 #33 #295
[mk-app] #813 >= #814 #36
[inst-discovered] theory-solving 0x0 arith# ; #807
[mk-app] #815 = #807 #813
[mk-proof] #816 rewrite #815
[instance] 0x0 #815
[end-of-instance]
[mk-app] #817 not #813
[mk-app] #818 = #808 #817
[mk-proof] #819 monotonicity #816 #818
[mk-app] #820 = #776 #817
[mk-proof] #821 trans #812 #819 #820
[mk-app] #822 and #287 #817
[mk-app] #823 = #777 #822
[mk-proof] #824 monotonicity #289 #821 #823
[mk-app] #825 and #792 #822
[mk-app] #826 = #778 #825
[mk-proof] #827 monotonicity #794 #824 #826
[mk-app] #828 and #792 #287 #817
[inst-discovered] theory-solving 0x0 basic# ; #825
[mk-app] #829 = #825 #828
[mk-proof] #830 rewrite #829
[instance] 0x0 #829
[end-of-instance]
[mk-app] #831 = #778 #828
[mk-proof] #832 trans #827 #830 #831
[mk-app] #833 => #828 #786
[mk-app] #834 = #787 #833
[mk-proof] #835 monotonicity #832 #834
[mk-app] #836 not #828
[mk-app] #837 or #836 #786
[inst-discovered] theory-solving 0x0 basic# ; #833
[mk-app] #838 = #833 #837
[mk-proof] #839 rewrite #838
[instance] 0x0 #838
[end-of-instance]
[mk-app] #840 = #787 #837
[mk-proof] #841 trans #835 #839 #840
[mk-quant] #842 k!262 3 #788 #837
[attach-var-names] #842 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #843 null 3 #841
[mk-proof] #844 proof-bind #843
[mk-app] #845 = #789 #842
[mk-proof] #846 quant-intro #844 #845
[mk-proof] #847 mp #790 #846 #842
[mk-app] #848 and #34 #274
[mk-app] #849 and #774 #848
[mk-app] #850 Seq_sub #33 #32
[mk-app] #851 Seq_add #850 #32
[mk-app] #852 = #851 #33
[mk-app] #853 Seq_index #782 #850
[mk-app] #854 = #853 #280
[mk-app] #855 and #852 #854
[mk-app] #856 => #849 #855
[mk-app] #857 pattern #782 #280
[mk-quant] #858 k!270 3 #857 #856
[attach-var-names] #858 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #859 asserted #858
[inst-discovered] theory-solving 0x0 arith# ; #774
[instance] 0x0 #793
[end-of-instance]
[mk-app] #860 and #663 #299
[mk-app] #861 = #848 #860
[mk-proof] #862 monotonicity #665 #303 #861
[mk-app] #863 and #792 #860
[mk-app] #864 = #849 #863
[mk-proof] #865 monotonicity #794 #862 #864
[mk-app] #866 and #792 #663 #299
[inst-discovered] theory-solving 0x0 basic# ; #863
[mk-app] #867 = #863 #866
[mk-proof] #868 rewrite #867
[instance] 0x0 #867
[end-of-instance]
[mk-app] #869 = #849 #866
[mk-proof] #870 trans #865 #868 #869
[mk-app] #871 => #866 #855
[mk-app] #872 = #856 #871
[mk-proof] #873 monotonicity #870 #872
[mk-app] #874 not #866
[mk-app] #875 or #874 #855
[inst-discovered] theory-solving 0x0 basic# ; #871
[mk-app] #876 = #871 #875
[mk-proof] #877 rewrite #876
[instance] 0x0 #876
[end-of-instance]
[mk-app] #878 = #856 #875
[mk-proof] #879 trans #873 #877 #878
[mk-quant] #880 k!270 3 #857 #875
[attach-var-names] #880 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #881 null 3 #879
[mk-proof] #882 proof-bind #881
[mk-app] #883 = #858 #880
[mk-proof] #884 quant-intro #882 #883
[mk-proof] #885 mp #859 #884 #880
[mk-app] #886 < #36 #33
[mk-app] #887 <= #33 #273
[mk-app] #888 and #886 #887
[mk-app] #889 Seq_take #278 #33
[mk-app] #890 Seq_take #269 #33
[mk-app] #891 = #889 #890
[mk-app] #892 => #888 #891
[mk-app] #893 pattern #889
[mk-quant] #894 k!276 3 #893 #892
[attach-var-names] #894 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-proof] #895 asserted #894
[mk-app] #896 <= #33 #36
[mk-app] #897 not #896
[inst-discovered] theory-solving 0x0 arith# ; #886
[mk-app] #898 = #886 #897
[mk-proof] #899 rewrite #898
[instance] 0x0 #898
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #900 <= #296 #36
[inst-discovered] theory-solving 0x0 arith# ; #887
[mk-app] #901 = #887 #900
[mk-proof] #902 rewrite #901
[instance] 0x0 #901
[end-of-instance]
[mk-app] #903 and #897 #900
[mk-app] #904 = #888 #903
[mk-proof] #905 monotonicity #899 #902 #904
[mk-app] #906 => #903 #891
[mk-app] #907 = #892 #906
[mk-proof] #908 monotonicity #905 #907
[mk-app] #909 not #903
[mk-app] #910 or #909 #891
[inst-discovered] theory-solving 0x0 basic# ; #906
[mk-app] #911 = #906 #910
[mk-proof] #912 rewrite #911
[instance] 0x0 #911
[end-of-instance]
[mk-app] #913 = #892 #910
[mk-proof] #914 trans #908 #912 #913
[mk-quant] #915 k!276 3 #893 #910
[attach-var-names] #915 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #916 null 3 #914
[mk-proof] #917 proof-bind #916
[mk-app] #918 = #894 #915
[mk-proof] #919 quant-intro #917 #918
[mk-proof] #920 mp #895 #919 #915
[mk-app] #921 > #33 #36
[mk-app] #922 > #33 #273
[mk-app] #923 and #922 #339
[mk-app] #924 and #921 #923
[mk-app] #925 Seq_take #156 #343
[mk-app] #926 Seq_append #269 #925
[mk-app] #927 = #889 #926
[mk-app] #928 and #345 #927
[mk-app] #929 => #924 #928
[mk-quant] #930 k!286 3 #893 #929
[attach-var-names] #930 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-proof] #931 asserted #930
[inst-discovered] theory-solving 0x0 arith# ; #921
[mk-app] #932 = #921 #897
[mk-proof] #933 rewrite #932
[instance] 0x0 #932
[end-of-instance]
[mk-app] #934 not #887
[inst-discovered] theory-solving 0x0 arith# ; #922
[mk-app] #935 = #922 #934
[mk-proof] #936 rewrite #935
[instance] 0x0 #935
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #887
[instance] 0x0 #901
[end-of-instance]
[mk-app] #937 not #900
[mk-app] #938 = #934 #937
[mk-proof] #939 monotonicity #902 #938
[mk-app] #940 = #922 #937
[mk-proof] #941 trans #936 #939 #940
[inst-discovered] theory-solving 0x0 arith# ; #339
[instance] 0x0 #354
[end-of-instance]
[mk-app] #942 and #937 #361
[mk-app] #943 = #923 #942
[mk-proof] #944 monotonicity #941 #365 #943
[mk-app] #945 and #897 #942
[mk-app] #946 = #924 #945
[mk-proof] #947 monotonicity #933 #944 #946
[mk-app] #948 and #897 #937 #361
[inst-discovered] theory-solving 0x0 basic# ; #945
[mk-app] #949 = #945 #948
[mk-proof] #950 rewrite #949
[instance] 0x0 #949
[end-of-instance]
[mk-app] #951 = #924 #948
[mk-proof] #952 trans #947 #950 #951
[mk-app] #953 => #948 #928
[mk-app] #954 = #929 #953
[mk-proof] #955 monotonicity #952 #954
[mk-app] #956 not #948
[mk-app] #957 or #956 #928
[inst-discovered] theory-solving 0x0 basic# ; #953
[mk-app] #958 = #953 #957
[mk-proof] #959 rewrite #958
[instance] 0x0 #958
[end-of-instance]
[mk-app] #960 = #929 #957
[mk-proof] #961 trans #955 #959 #960
[mk-quant] #962 k!286 3 #893 #957
[attach-var-names] #962 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #963 null 3 #961
[mk-proof] #964 proof-bind #963
[mk-app] #965 = #930 #962
[mk-proof] #966 quant-intro #964 #965
[mk-proof] #967 mp #931 #966 #962
[mk-app] #968 Seq_drop #278 #33
[mk-app] #969 Seq_drop #269 #33
[mk-app] #970 Seq_append #969 #156
[mk-app] #971 = #968 #970
[mk-app] #972 => #888 #971
[mk-app] #973 pattern #968
[mk-quant] #974 k!292 3 #973 #972
[attach-var-names] #974 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-proof] #975 asserted #974
[inst-discovered] theory-solving 0x0 arith# ; #886
[instance] 0x0 #898
[end-of-instance]
[mk-app] #976 => #903 #971
[mk-app] #977 = #972 #976
[mk-proof] #978 monotonicity #905 #977
[mk-app] #979 or #909 #971
[inst-discovered] theory-solving 0x0 basic# ; #976
[mk-app] #980 = #976 #979
[mk-proof] #981 rewrite #980
[instance] 0x0 #980
[end-of-instance]
[mk-app] #982 = #972 #979
[mk-proof] #983 trans #978 #981 #982
[mk-quant] #984 k!292 3 #973 #979
[attach-var-names] #984 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #985 null 3 #983
[mk-proof] #986 proof-bind #985
[mk-app] #987 = #974 #984
[mk-proof] #988 quant-intro #986 #987
[mk-proof] #989 mp #975 #988 #984
[mk-app] #990 and #921 #922
[mk-app] #991 Seq_drop #156 #343
[mk-app] #992 = #968 #991
[mk-app] #993 and #345 #992
[mk-app] #994 => #990 #993
[mk-quant] #995 k!300 3 #973 #994
[attach-var-names] #995 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-proof] #996 asserted #995
[inst-discovered] theory-solving 0x0 arith# ; #921
[instance] 0x0 #932
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #922
[instance] 0x0 #935
[end-of-instance]
[mk-app] #997 and #897 #937
[mk-app] #998 = #990 #997
[mk-proof] #999 monotonicity #933 #941 #998
[mk-app] #1000 => #997 #993
[mk-app] #1001 = #994 #1000
[mk-proof] #1002 monotonicity #999 #1001
[mk-app] #1003 not #997
[mk-app] #1004 or #1003 #993
[inst-discovered] theory-solving 0x0 basic# ; #1000
[mk-app] #1005 = #1000 #1004
[mk-proof] #1006 rewrite #1005
[instance] 0x0 #1005
[end-of-instance]
[mk-app] #1007 = #994 #1004
[mk-proof] #1008 trans #1002 #1006 #1007
[mk-quant] #1009 k!300 3 #973 #1004
[attach-var-names] #1009 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1010 null 3 #1008
[mk-proof] #1011 proof-bind #1010
[mk-app] #1012 = #995 #1009
[mk-proof] #1013 quant-intro #1011 #1012
[mk-proof] #1014 mp #996 #1013 #1009
[mk-app] #1015 = #570 #130
[mk-app] #1016 => #896 #1015
[mk-app] #1017 pattern #570
[mk-quant] #1018 k!304 2 #1017 #1016
[attach-var-names] #1018 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1019 asserted #1018
[mk-app] #1020 or #897 #1015
[inst-discovered] theory-solving 0x0 basic# ; #1016
[mk-app] #1021 = #1016 #1020
[mk-proof] #1022 rewrite #1021
[instance] 0x0 #1021
[end-of-instance]
[mk-quant] #1023 k!304 2 #1017 #1020
[attach-var-names] #1023 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1024 null 2 #1022
[mk-proof] #1025 proof-bind #1024
[mk-app] #1026 = #1018 #1023
[mk-proof] #1027 quant-intro #1025 #1026
[mk-proof] #1028 mp #1019 #1027 #1023
[mk-app] #1029 = #697 #156
[mk-app] #1030 => #896 #1029
[mk-app] #1031 pattern #697
[mk-quant] #1032 k!308 2 #1031 #1030
[attach-var-names] #1032 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1033 asserted #1032
[mk-app] #1034 or #897 #1029
[inst-discovered] theory-solving 0x0 basic# ; #1030
[mk-app] #1035 = #1030 #1034
[mk-proof] #1036 rewrite #1035
[instance] 0x0 #1035
[end-of-instance]
[mk-quant] #1037 k!308 2 #1031 #1034
[attach-var-names] #1037 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1038 null 2 #1036
[mk-proof] #1039 proof-bind #1038
[mk-app] #1040 = #1032 #1037
[mk-proof] #1041 quant-intro #1039 #1040
[mk-proof] #1042 mp #1033 #1041 #1037
[mk-app] #1043 >= #33 #163
[mk-app] #1044 = #570 #156
[mk-app] #1045 => #1043 #1044
[mk-quant] #1046 k!312 2 #1017 #1045
[attach-var-names] #1046 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1047 asserted #1046
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1043
[mk-app] #1048 = #1043 #419
[mk-proof] #1049 rewrite #1048
[instance] 0x0 #1048
[end-of-instance]
[mk-app] #1050 => #419 #1044
[mk-app] #1051 = #1045 #1050
[mk-proof] #1052 monotonicity #1049 #1051
[mk-app] #1053 or #424 #1044
[inst-discovered] theory-solving 0x0 basic# ; #1050
[mk-app] #1054 = #1050 #1053
[mk-proof] #1055 rewrite #1054
[instance] 0x0 #1054
[end-of-instance]
[mk-app] #1056 = #1045 #1053
[mk-proof] #1057 trans #1052 #1055 #1056
[mk-quant] #1058 k!312 2 #1017 #1053
[attach-var-names] #1058 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1059 null 2 #1057
[mk-proof] #1060 proof-bind #1059
[mk-app] #1061 = #1046 #1058
[mk-proof] #1062 quant-intro #1060 #1061
[mk-proof] #1063 mp #1047 #1062 #1058
[mk-app] #1064 = #697 #130
[mk-app] #1065 => #1043 #1064
[mk-quant] #1066 k!316 2 #1031 #1065
[attach-var-names] #1066 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1067 asserted #1066
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1043
[instance] 0x0 #1048
[end-of-instance]
[mk-app] #1068 => #419 #1064
[mk-app] #1069 = #1065 #1068
[mk-proof] #1070 monotonicity #1049 #1069
[mk-app] #1071 or #424 #1064
[inst-discovered] theory-solving 0x0 basic# ; #1068
[mk-app] #1072 = #1068 #1071
[mk-proof] #1073 rewrite #1072
[instance] 0x0 #1072
[end-of-instance]
[mk-app] #1074 = #1065 #1071
[mk-proof] #1075 trans #1070 #1073 #1074
[mk-quant] #1076 k!316 2 #1031 #1071
[attach-var-names] #1076 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1077 null 2 #1075
[mk-proof] #1078 proof-bind #1077
[mk-app] #1079 = #1066 #1076
[mk-proof] #1080 quant-intro #1078 #1079
[mk-proof] #1081 mp #1067 #1080 #1076
[mk-app] #1082 Seq_contains #156 #33
[mk-app] #1083 Seq_skolem #156 #33
[mk-app] #1084 <= #36 #1083
[mk-app] #1085 < #1083 #163
[mk-app] #1086 Seq_index #156 #1083
[mk-app] #1087 = #1086 #33
[mk-app] #1088 and #1085 #1087
[mk-app] #1089 and #1084 #1088
[mk-app] #1090 => #1082 #1089
[mk-app] #1091 pattern #1082
[mk-quant] #1092 k!326 2 #1091 #1090
[attach-var-names] #1092 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1093 asserted #1092
[attach-meaning] #176 arith (- 1)
[mk-app] #1094 * #176 #1083
[mk-app] #1095 >= #1083 #36
[inst-discovered] theory-solving 0x0 arith# ; #1084
[mk-app] #1094 = #1084 #1095
[mk-proof] #1096 rewrite #1094
[instance] 0x0 #1094
[end-of-instance]
[mk-app] #1097 <= #163 #1083
[mk-app] #1098 not #1097
[inst-discovered] theory-solving 0x0 arith# ; #1085
[mk-app] #1099 = #1085 #1098
[mk-proof] #1100 rewrite #1099
[instance] 0x0 #1099
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #1101 * #176 #1083
[mk-app] #1102 + #163 #1101
[mk-app] #1103 <= #1102 #36
[inst-discovered] theory-solving 0x0 arith# ; #1097
[mk-app] #1104 = #1097 #1103
[mk-proof] #1105 rewrite #1104
[instance] 0x0 #1104
[end-of-instance]
[mk-app] #1106 not #1103
[mk-app] #1107 = #1098 #1106
[mk-proof] #1108 monotonicity #1105 #1107
[mk-app] #1109 = #1085 #1106
[mk-proof] #1110 trans #1100 #1108 #1109
[mk-app] #1111 and #1106 #1087
[mk-app] #1112 = #1088 #1111
[mk-proof] #1113 monotonicity #1110 #1112
[mk-app] #1114 and #1095 #1111
[mk-app] #1115 = #1089 #1114
[mk-proof] #1116 monotonicity #1096 #1113 #1115
[mk-app] #1117 and #1095 #1106 #1087
[inst-discovered] theory-solving 0x0 basic# ; #1114
[mk-app] #1118 = #1114 #1117
[mk-proof] #1119 rewrite #1118
[instance] 0x0 #1118
[end-of-instance]
[mk-app] #1120 = #1089 #1117
[mk-proof] #1121 trans #1116 #1119 #1120
[mk-app] #1122 => #1082 #1117
[mk-app] #1123 = #1090 #1122
[mk-proof] #1124 monotonicity #1121 #1123
[mk-app] #1125 not #1082
[mk-app] #1126 or #1125 #1117
[inst-discovered] theory-solving 0x0 basic# ; #1122
[mk-app] #1127 = #1122 #1126
[mk-proof] #1128 rewrite #1127
[instance] 0x0 #1127
[end-of-instance]
[mk-app] #1129 = #1090 #1126
[mk-proof] #1130 trans #1124 #1128 #1129
[mk-quant] #1131 k!326 2 #1091 #1126
[attach-var-names] #1131 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1132 null 2 #1130
[mk-proof] #1133 proof-bind #1132
[mk-app] #1134 = #1092 #1131
[mk-proof] #1135 quant-intro #1133 #1134
[mk-proof] #1136 mp #1093 #1135 #1131
[mk-app] #1137 = #280 #32
[mk-app] #1138 and #274 #1137
[mk-app] #1139 and #272 #1138
[mk-app] #1140 Seq_contains #269 #32
[mk-app] #1141 => #1139 #1140
[mk-app] #1142 pattern #1140 #280
[mk-quant] #1143 k!332 3 #1142 #1141
[attach-var-names] #1143 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1144 asserted #1143
[mk-app] #1145 and #299 #1137
[mk-app] #1146 = #1138 #1145
[mk-proof] #1147 monotonicity #303 #1146
[mk-app] #1148 and #287 #1145
[mk-app] #1149 = #1139 #1148
[mk-proof] #1150 monotonicity #289 #1147 #1149
[mk-app] #1151 and #287 #299 #1137
[inst-discovered] theory-solving 0x0 basic# ; #1148
[mk-app] #1152 = #1148 #1151
[mk-proof] #1153 rewrite #1152
[instance] 0x0 #1152
[end-of-instance]
[mk-app] #1154 = #1139 #1151
[mk-proof] #1155 trans #1150 #1153 #1154
[mk-app] #1156 => #1151 #1140
[mk-app] #1157 = #1141 #1156
[mk-proof] #1158 monotonicity #1155 #1157
[mk-app] #1159 not #1151
[mk-app] #1160 or #1159 #1140
[inst-discovered] theory-solving 0x0 basic# ; #1156
[mk-app] #1161 = #1156 #1160
[mk-proof] #1162 rewrite #1161
[instance] 0x0 #1161
[end-of-instance]
[mk-app] #1163 = #1141 #1160
[mk-proof] #1164 trans #1158 #1162 #1163
[mk-quant] #1165 k!332 3 #1142 #1160
[attach-var-names] #1165 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1166 null 3 #1164
[mk-proof] #1167 proof-bind #1166
[mk-app] #1168 = #1143 #1165
[mk-proof] #1169 quant-intro #1167 #1168
[mk-proof] #1170 mp #1144 #1169 #1165
[mk-app] #1171 Seq_contains_trigger #156 #408
[mk-app] #1172 => #401 #1171
[mk-app] #1173 pattern #408
[mk-quant] #1174 k!338 2 #1173 #1172
[attach-var-names] #1174 (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-proof] #1175 asserted #1174
[inst-discovered] theory-solving 0x0 arith# ; #400
[instance] 0x0 #417
[end-of-instance]
[mk-app] #1176 => #429 #1171
[mk-app] #1177 = #1172 #1176
[mk-proof] #1178 monotonicity #431 #1177
[mk-app] #1179 not #429
[mk-app] #1180 or #1179 #1171
[inst-discovered] theory-solving 0x0 basic# ; #1176
[mk-app] #1181 = #1176 #1180
[mk-proof] #1182 rewrite #1181
[instance] 0x0 #1181
[end-of-instance]
[mk-app] #1183 = #1172 #1180
[mk-proof] #1184 trans #1178 #1182 #1183
[mk-quant] #1185 k!338 2 #1173 #1180
[attach-var-names] #1185 (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1186 null 2 #1184
[mk-proof] #1187 proof-bind #1186
[mk-app] #1188 = #1174 #1185
[mk-proof] #1189 quant-intro #1187 #1188
[mk-proof] #1190 mp #1175 #1189 #1185
[mk-app] #1191 = #156 #90
[mk-app] #1192 Seq_equal #156 #90
[mk-app] #1193 and #1191 #1192
[mk-app] #1194 not #1191
[mk-app] #1195 not #1192
[mk-app] #1196 = #163 #116
[mk-app] #1197 not #1196
[mk-app] #1198 and #1195 #1197
[mk-app] #1199 and #1194 #1198
[mk-app] #1200 Seq_skolem_diff #156 #90
[mk-app] #1201 Seq_skolem_diff #90 #156
[mk-app] #1202 = #1200 #1201
[mk-app] #1203 <= #36 #1200
[mk-app] #1204 < #1200 #163
[mk-app] #1205 Seq_index #156 #1200
[mk-app] #1206 Seq_index #90 #1200
[mk-app] #1207 = #1205 #1206
[mk-app] #1208 not #1207
[mk-app] #1209 and #1204 #1208
[mk-app] #1210 and #1203 #1209
[mk-app] #1211 and #1202 #1210
[mk-app] #1212 and #1196 #1211
[mk-app] #1213 and #1195 #1212
[mk-app] #1214 and #1194 #1213
[mk-app] #1215 or #1199 #1214
[mk-app] #1216 or #1193 #1215
[mk-app] #1217 pattern #1192
[mk-quant] #1218 k!363 2 #1217 #1216
[attach-var-names] #1218 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-proof] #1219 asserted #1218
[mk-app] #1220 and #1194 #1195 #1197
[inst-discovered] theory-solving 0x0 basic# ; #1199
[mk-app] #1221 = #1199 #1220
[mk-proof] #1222 rewrite #1221
[instance] 0x0 #1221
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #1223 * #176 #1200
[mk-app] #1224 >= #1200 #36
[inst-discovered] theory-solving 0x0 arith# ; #1203
[mk-app] #1223 = #1203 #1224
[mk-proof] #1225 rewrite #1223
[instance] 0x0 #1223
[end-of-instance]
[mk-app] #1226 <= #163 #1200
[mk-app] #1227 not #1226
[inst-discovered] theory-solving 0x0 arith# ; #1204
[mk-app] #1228 = #1204 #1227
[mk-proof] #1229 rewrite #1228
[instance] 0x0 #1228
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #1230 * #176 #1200
[mk-app] #1231 + #163 #1230
[mk-app] #1232 <= #1231 #36
[inst-discovered] theory-solving 0x0 arith# ; #1226
[mk-app] #1233 = #1226 #1232
[mk-proof] #1234 rewrite #1233
[instance] 0x0 #1233
[end-of-instance]
[mk-app] #1235 not #1232
[mk-app] #1236 = #1227 #1235
[mk-proof] #1237 monotonicity #1234 #1236
[mk-app] #1238 = #1204 #1235
[mk-proof] #1239 trans #1229 #1237 #1238
[mk-app] #1240 and #1235 #1208
[mk-app] #1241 = #1209 #1240
[mk-proof] #1242 monotonicity #1239 #1241
[mk-app] #1243 and #1224 #1240
[mk-app] #1244 = #1210 #1243
[mk-proof] #1245 monotonicity #1225 #1242 #1244
[mk-app] #1246 and #1224 #1235 #1208
[inst-discovered] theory-solving 0x0 basic# ; #1243
[mk-app] #1247 = #1243 #1246
[mk-proof] #1248 rewrite #1247
[instance] 0x0 #1247
[end-of-instance]
[mk-app] #1249 = #1210 #1246
[mk-proof] #1250 trans #1245 #1248 #1249
[mk-app] #1251 and #1202 #1246
[mk-app] #1252 = #1211 #1251
[mk-proof] #1253 monotonicity #1250 #1252
[mk-app] #1254 and #1202 #1224 #1235 #1208
[inst-discovered] theory-solving 0x0 basic# ; #1251
[mk-app] #1255 = #1251 #1254
[mk-proof] #1256 rewrite #1255
[instance] 0x0 #1255
[end-of-instance]
[mk-app] #1257 = #1211 #1254
[mk-proof] #1258 trans #1253 #1256 #1257
[mk-app] #1259 and #1196 #1254
[mk-app] #1260 = #1212 #1259
[mk-proof] #1261 monotonicity #1258 #1260
[mk-app] #1262 and #1196 #1202 #1224 #1235 #1208
[inst-discovered] theory-solving 0x0 basic# ; #1259
[mk-app] #1263 = #1259 #1262
[mk-proof] #1264 rewrite #1263
[instance] 0x0 #1263
[end-of-instance]
[mk-app] #1265 = #1212 #1262
[mk-proof] #1266 trans #1261 #1264 #1265
[mk-app] #1267 and #1195 #1262
[mk-app] #1268 = #1213 #1267
[mk-proof] #1269 monotonicity #1266 #1268
[mk-app] #1270 and #1195 #1196 #1202 #1224 #1235 #1208
[inst-discovered] theory-solving 0x0 basic# ; #1267
[mk-app] #1271 = #1267 #1270
[mk-proof] #1272 rewrite #1271
[instance] 0x0 #1271
[end-of-instance]
[mk-app] #1273 = #1213 #1270
[mk-proof] #1274 trans #1269 #1272 #1273
[mk-app] #1275 and #1194 #1270
[mk-app] #1276 = #1214 #1275
[mk-proof] #1277 monotonicity #1274 #1276
[mk-app] #1278 and #1194 #1195 #1196 #1202 #1224 #1235 #1208
[inst-discovered] theory-solving 0x0 basic# ; #1275
[mk-app] #1279 = #1275 #1278
[mk-proof] #1280 rewrite #1279
[instance] 0x0 #1279
[end-of-instance]
[mk-app] #1281 = #1214 #1278
[mk-proof] #1282 trans #1277 #1280 #1281
[mk-app] #1283 or #1220 #1278
[mk-app] #1284 = #1215 #1283
[mk-proof] #1285 monotonicity #1222 #1282 #1284
[mk-app] #1286 or #1193 #1283
[mk-app] #1287 = #1216 #1286
[mk-proof] #1288 monotonicity #1285 #1287
[mk-app] #1289 or #1193 #1220 #1278
[inst-discovered] theory-solving 0x0 basic# ; #1286
[mk-app] #1290 = #1286 #1289
[mk-proof] #1291 rewrite #1290
[instance] 0x0 #1290
[end-of-instance]
[mk-app] #1292 = #1216 #1289
[mk-proof] #1293 trans #1288 #1291 #1292
[mk-quant] #1294 k!363 2 #1217 #1289
[attach-var-names] #1294 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1295 null 2 #1293
[mk-proof] #1296 proof-bind #1295
[mk-app] #1297 = #1218 #1294
[mk-proof] #1298 quant-intro #1296 #1297
[mk-proof] #1299 mp #1219 #1298 #1294
[mk-app] #1300 => #1192 #1191
[mk-quant] #1301 k!367 2 #1217 #1300
[attach-var-names] #1301 (|b| ; |Seq<Int>|) (|a| ; |Seq<Int>|)
[mk-proof] #1302 asserted #1301
[mk-app] #1303 or #1195 #1191
[inst-discovered] theory-solving 0x0 basic# ; #1300
[mk-app] #1304 = #1300 #1303
[mk-proof] #1305 rewrite #1304
[instance] 0x0 #1304
[end-of-instance]
[mk-quant] #1306 k!367 2 #1217 #1303
[attach-var-names] #1306 (|b| ; |Seq<Int>|) (|a| ; |Seq<Int>|)
[mk-lambda] #1307 null 2 #1305
[mk-proof] #1308 proof-bind #1307
[mk-app] #1309 = #1301 #1306
[mk-proof] #1310 quant-intro #1308 #1309
[mk-proof] #1311 mp #1302 #1310 #1306
[mk-app] #1312 Seq_singleton #32
[mk-app] #1313 Seq_contains #1312 #33
[mk-app] #1314 = #32 #33
[mk-app] #1315 = #1313 #1314
[mk-app] #1316 pattern #1313
[mk-quant] #1317 k!371 2 #1316 #1315
[attach-var-names] #1317 (|y| ; |Int|) (|x| ; |Int|)
[mk-proof] #1318 asserted #1317
[mk-app] #1319 = #1317 #1317
[mk-proof] #1320 refl #1319
[mk-app] #1319 < #32 #33
[mk-app] #1320 Seq_range #32 #33
[mk-app] #1321 Seq_length #1320
[mk-app] #1322 - #33 #32
[mk-app] #1323 = #1321 #1322
[mk-app] #1324 => #1319 #1323
[mk-app] #1325 <= #33 #32
[mk-app] #1326 = #1321 #36
[mk-app] #1327 => #1325 #1326
[mk-app] #1328 and #1324 #1327
[mk-app] #1329 pattern #1321
[mk-quant] #1330 $Seq[Int]_prog.ranged_seq_length 2 #1329 #1328
[attach-var-names] #1330 (|max| ; |Int|) (|min_| ; |Int|)
[mk-proof] #1331 asserted #1330
[mk-app] #1332 not #1325
[inst-discovered] theory-solving 0x0 arith# ; #1319
[mk-app] #1333 = #1319 #1332
[mk-proof] #1334 rewrite #1333
[instance] 0x0 #1333
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #1335 + #795 #33
[attach-meaning] #176 arith (- 1)
[mk-app] #1335 >= #250 #36
[inst-discovered] theory-solving 0x0 arith# ; #1325
[mk-app] #1336 = #1325 #1335
[mk-proof] #1337 rewrite #1336
[instance] 0x0 #1336
[end-of-instance]
[mk-app] #1338 not #1335
[mk-app] #1339 = #1332 #1338
[mk-proof] #1340 monotonicity #1337 #1339
[mk-app] #1341 = #1319 #1338
[mk-proof] #1342 trans #1334 #1340 #1341
[attach-meaning] #176 arith (- 1)
[mk-app] #1343 + #33 #795
[inst-discovered] theory-solving 0x0 arith# ; #1322
[mk-app] #1344 = #1322 #1343
[mk-proof] #1345 rewrite #1344
[instance] 0x0 #1344
[end-of-instance]
[mk-app] #1346 + #795 #33
[inst-discovered] theory-solving 0x0 arith# ; #1343
[mk-app] #1347 = #1343 #1346
[mk-proof] #1348 rewrite #1347
[instance] 0x0 #1347
[end-of-instance]
[mk-app] #1349 = #1322 #1346
[mk-proof] #1350 trans #1345 #1348 #1349
[mk-app] #1351 = #1321 #1346
[mk-app] #1352 = #1323 #1351
[mk-proof] #1353 monotonicity #1350 #1352
[attach-meaning] #176 arith (- 1)
[mk-app] #1354 + #32 #249 #1321
[mk-app] #1355 = #1354 #36
[inst-discovered] theory-solving 0x0 arith# ; #1351
[mk-app] #1356 = #1351 #1355
[mk-proof] #1357 rewrite #1356
[instance] 0x0 #1356
[end-of-instance]
[mk-app] #1358 = #1323 #1355
[mk-proof] #1359 trans #1353 #1357 #1358
[mk-app] #1360 => #1338 #1355
[mk-app] #1361 = #1324 #1360
[mk-proof] #1362 monotonicity #1342 #1359 #1361
[mk-app] #1363 or #1335 #1355
[inst-discovered] theory-solving 0x0 basic# ; #1360
[mk-app] #1364 = #1360 #1363
[mk-proof] #1365 rewrite #1364
[instance] 0x0 #1364
[end-of-instance]
[mk-app] #1366 = #1324 #1363
[mk-proof] #1367 trans #1362 #1365 #1366
[mk-app] #1368 => #1335 #1326
[mk-app] #1369 = #1327 #1368
[mk-proof] #1370 monotonicity #1337 #1369
[mk-app] #1371 or #1338 #1326
[inst-discovered] theory-solving 0x0 basic# ; #1368
[mk-app] #1372 = #1368 #1371
[mk-proof] #1373 rewrite #1372
[instance] 0x0 #1372
[end-of-instance]
[mk-app] #1374 = #1327 #1371
[mk-proof] #1375 trans #1370 #1373 #1374
[mk-app] #1376 and #1363 #1371
[mk-app] #1377 = #1328 #1376
[mk-proof] #1378 monotonicity #1367 #1375 #1377
[mk-quant] #1379 $Seq[Int]_prog.ranged_seq_length 2 #1329 #1376
[attach-var-names] #1379 (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #1380 null 2 #1378
[mk-proof] #1381 proof-bind #1380
[mk-app] #1382 = #1330 #1379
[mk-proof] #1383 quant-intro #1381 #1382
[mk-proof] #1384 mp #1331 #1383 #1379
[mk-app] #1385 - #32 #509
[mk-app] #1386 < #33 #1385
[mk-app] #1387 and #272 #1386
[mk-app] #1388 Seq_range #509 #32
[mk-app] #1389 Seq_index #1388 #33
[mk-app] #1390 + #509 #33
[mk-app] #1391 = #1389 #1390
[mk-app] #1392 => #1387 #1391
[mk-app] #1393 pattern #1389
[mk-quant] #1394 $Seq[Int]_prog.ranged_seq_index 3 #1393 #1392
[attach-var-names] #1394 (|j| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-proof] #1395 asserted #1394
[attach-meaning] #176 arith (- 1)
[mk-app] #1396 * #176 #509
[mk-app] #1397 + #32 #1396
[inst-discovered] theory-solving 0x0 arith# ; #1385
[mk-app] #1398 = #1385 #1397
[mk-proof] #1399 rewrite #1398
[instance] 0x0 #1398
[end-of-instance]
[mk-app] #1400 < #33 #1397
[mk-app] #1401 = #1386 #1400
[mk-proof] #1402 monotonicity #1399 #1401
[mk-app] #1403 <= #1397 #33
[mk-app] #1404 not #1403
[inst-discovered] theory-solving 0x0 arith# ; #1400
[mk-app] #1405 = #1400 #1404
[mk-proof] #1406 rewrite #1405
[instance] 0x0 #1405
[end-of-instance]
[mk-app] #1407 = #1386 #1404
[mk-proof] #1408 trans #1402 #1406 #1407
[attach-meaning] #176 arith (- 1)
[mk-app] #1409 + #32 #249 #1396
[mk-app] #1410 <= #1409 #36
[inst-discovered] theory-solving 0x0 arith# ; #1403
[mk-app] #1411 = #1403 #1410
[mk-proof] #1412 rewrite #1411
[instance] 0x0 #1411
[end-of-instance]
[mk-app] #1413 not #1410
[mk-app] #1414 = #1404 #1413
[mk-proof] #1415 monotonicity #1412 #1414
[mk-app] #1416 = #1386 #1413
[mk-proof] #1417 trans #1408 #1415 #1416
[mk-app] #1418 and #287 #1413
[mk-app] #1419 = #1387 #1418
[mk-proof] #1420 monotonicity #289 #1417 #1419
[mk-app] #1421 + #33 #509
[inst-discovered] theory-solving 0x0 arith# ; #1390
[mk-app] #1422 = #1390 #1421
[mk-proof] #1423 rewrite #1422
[instance] 0x0 #1422
[end-of-instance]
[mk-app] #1424 = #1389 #1421
[mk-app] #1425 = #1391 #1424
[mk-proof] #1426 monotonicity #1423 #1425
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[mk-app] #1427 + #249 #1396 #1389
[attach-meaning] #176 arith (- 1)
[mk-app] #1428 * #176 #1389
[mk-app] #1429 + #33 #509 #1428
[mk-app] #1427 = #1429 #36
[inst-discovered] theory-solving 0x0 arith# ; #1424
[mk-app] #1430 = #1424 #1427
[mk-proof] #1431 rewrite #1430
[instance] 0x0 #1430
[end-of-instance]
[mk-app] #1432 = #1391 #1427
[mk-proof] #1433 trans #1426 #1431 #1432
[mk-app] #1434 => #1418 #1427
[mk-app] #1435 = #1392 #1434
[mk-proof] #1436 monotonicity #1420 #1433 #1435
[mk-app] #1437 not #1418
[mk-app] #1438 or #1437 #1427
[inst-discovered] theory-solving 0x0 basic# ; #1434
[mk-app] #1439 = #1434 #1438
[mk-proof] #1440 rewrite #1439
[instance] 0x0 #1439
[end-of-instance]
[mk-app] #1441 = #1392 #1438
[mk-proof] #1442 trans #1436 #1440 #1441
[mk-quant] #1443 $Seq[Int]_prog.ranged_seq_index 3 #1393 #1438
[attach-var-names] #1443 (|j| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #1444 null 3 #1442
[mk-proof] #1445 proof-bind #1444
[mk-app] #1446 = #1394 #1443
[mk-proof] #1447 quant-intro #1445 #1446
[mk-proof] #1448 mp #1395 #1447 #1443
[mk-app] #1449 Seq_contains #1388 #33
[mk-app] #1450 <= #509 #33
[mk-app] #1451 and #1450 #649
[mk-app] #1452 = #1449 #1451
[mk-app] #1453 pattern #1449
[mk-quant] #1454 $Seq[Int]_prog.ranged_seq_contains 3 #1453 #1452
[attach-var-names] #1454 (|v| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-proof] #1455 asserted #1454
[attach-meaning] #176 arith (- 1)
[mk-app] #1456 + #249 #509
[attach-meaning] #176 arith (- 1)
[mk-app] #1457 + #33 #1396
[mk-app] #1456 >= #1457 #36
[inst-discovered] theory-solving 0x0 arith# ; #1450
[mk-app] #1458 = #1450 #1456
[mk-proof] #1459 rewrite #1458
[instance] 0x0 #1458
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #649
[instance] 0x0 #661
[end-of-instance]
[mk-app] #1460 and #1456 #666
[mk-app] #1461 = #1451 #1460
[mk-proof] #1462 monotonicity #1459 #670 #1461
[mk-app] #1463 = #1449 #1460
[mk-app] #1464 = #1452 #1463
[mk-proof] #1465 monotonicity #1462 #1464
[mk-quant] #1466 $Seq[Int]_prog.ranged_seq_contains 3 #1453 #1463
[attach-var-names] #1466 (|v| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #1467 null 3 #1465
[mk-proof] #1468 proof-bind #1467
[mk-app] #1469 = #1454 #1466
[mk-proof] #1470 quant-intro #1468 #1469
[mk-proof] #1471 mp #1455 #1470 #1466
[mk-var] #1472 1
[mk-app] #1473 offset<Ptr32> #1472 #33
[mk-app] #1474 offset_inj<Int> #1473 #1472
[mk-app] #1475 = #1474 #33
[mk-app] #1476 pattern #1473
[mk-quant] #1477 prog.inj 2 #1476 #1475
[attach-var-names] #1477 (|i| ; |Int|) (|a| ; |$Ref|)
[mk-proof] #1478 asserted #1477
[mk-app] #1479 = #1477 #1477
[mk-proof] #1480 refl #1479
[mk-app] #1479 next<Ptr32> #1473
[mk-app] #1480 + #33 #151
[mk-app] #1481 offset<Ptr32> #1472 #1480
[mk-app] #1482 = #1479 #1481
[mk-app] #1483 pattern #1479
[mk-quant] #1484 prog.next_offset 2 #1483 #1482
[attach-var-names] #1484 (|i| ; |Int|) (|a| ; |$Ref|)
[mk-proof] #1485 asserted #1484
[mk-app] #1486 + #151 #33
[inst-discovered] theory-solving 0x0 arith# ; #1480
[mk-app] #1487 = #1480 #1486
[mk-proof] #1488 rewrite #1487
[instance] 0x0 #1487
[end-of-instance]
[mk-app] #1489 offset<Ptr32> #1472 #1486
[mk-app] #1490 = #1481 #1489
[mk-proof] #1491 monotonicity #1488 #1490
[mk-app] #1492 = #1479 #1489
[mk-app] #1493 = #1482 #1492
[mk-proof] #1494 monotonicity #1491 #1493
[mk-quant] #1495 prog.next_offset 2 #1483 #1492
[attach-var-names] #1495 (|i| ; |Int|) (|a| ; |$Ref|)
[mk-lambda] #1496 null 2 #1494
[mk-proof] #1497 proof-bind #1496
[mk-app] #1498 = #1484 #1495
[mk-proof] #1499 quant-intro #1497 #1498
[mk-proof] #1500 mp #1485 #1499 #1495
[mk-var] #1501 2
[mk-app] #1502 offset<Ptr32> #1501 #32
[mk-app] #1503 address<Int> #1502
[mk-app] #1504 offset<Ptr32> #1501 #33
[mk-app] #1505 address<Int> #1504
[mk-app] #1506 - #1503 #1505
[mk-app] #1507 Int
[attach-meaning] #1507 arith 4
[mk-app] #1508 * #1507 #244
[mk-app] #1509 = #1506 #1508
[mk-app] #1510 pattern #1503 #1505
[mk-quant] #1511 prog.addr 3 #1510 #1509
[attach-var-names] #1511 (|j| ; |Int|) (|i| ; |Int|) (|a| ; |$Ref|)
[mk-proof] #1512 asserted #1511
[attach-meaning] #176 arith (- 1)
[mk-app] #1513 * #176 #1505
[mk-app] #1514 + #1503 #1513
[inst-discovered] theory-solving 0x0 arith# ; #1506
[mk-app] #1515 = #1506 #1514
[mk-proof] #1516 rewrite #1515
[instance] 0x0 #1515
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #244
[instance] 0x0 #251
[end-of-instance]
[mk-app] #1517 * #1507 #250
[mk-app] #1518 = #1508 #1517
[mk-proof] #1519 monotonicity #252 #1518
[mk-app] #1520 * #1507 #32
[mk-app] #1521 * #1507 #249
[mk-app] #1522 + #1520 #1521
[inst-discovered] theory-solving 0x0 arith# ; #1517
[mk-app] #1523 = #1517 #1522
[mk-proof] #1524 rewrite #1523
[instance] 0x0 #1523
[end-of-instance]
[mk-app] #1525 = #1508 #1522
[mk-proof] #1526 trans #1519 #1524 #1525
[mk-app] #1527 Int
[attach-meaning] #1527 arith (- 4)
[mk-app] #1528 * #1527 #33
[inst-discovered] theory-solving 0x0 arith# ; #1521
[mk-app] #1529 = #1521 #1528
[mk-proof] #1530 rewrite #1529
[instance] 0x0 #1529
[end-of-instance]
[mk-app] #1531 + #1520 #1528
[mk-app] #1532 = #1522 #1531
[mk-proof] #1533 monotonicity #1530 #1532
[mk-app] #1534 = #1508 #1531
[mk-proof] #1535 trans #1526 #1533 #1534
[mk-app] #1536 = #1514 #1531
[mk-app] #1537 = #1509 #1536
[mk-proof] #1538 monotonicity #1516 #1535 #1537
[attach-meaning] #1527 arith (- 4)
[mk-app] #1539 * #1527 #32
[mk-app] #1540 * #1507 #33
[mk-app] #1541 + #1539 #1540 #1503 #1513
[attach-meaning] #1527 arith (- 4)
[attach-meaning] #176 arith (- 1)
[mk-app] #1542 * #176 #1503
[mk-app] #1543 + #1520 #1528 #1542 #1505
[mk-app] #1539 = #1543 #36
[inst-discovered] theory-solving 0x0 arith# ; #1536
[mk-app] #1540 = #1536 #1539
[mk-proof] #1541 rewrite #1540
[instance] 0x0 #1540
[end-of-instance]
[mk-app] #1544 = #1509 #1539
[mk-proof] #1545 trans #1538 #1541 #1544
[mk-quant] #1546 prog.addr 3 #1510 #1539
[attach-var-names] #1546 (|j| ; |Int|) (|i| ; |Int|) (|a| ; |$Ref|)
[mk-lambda] #1547 null 3 #1545
[mk-proof] #1548 proof-bind #1547
[mk-app] #1549 = #1511 #1546
[mk-proof] #1550 quant-intro #1548 #1549
[mk-proof] #1551 mp #1512 #1550 #1546
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-app] #1552 = #43 #43
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #50 #50
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #57 #57
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #63 #63
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #70 #70
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #76 #76
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #82 #82
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #88 #88
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #95 #95
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #101 #101
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #108 #108
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #114 #114
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #119 #119
[mk-proof] #1553 refl #1552
[mk-app] #1552 = #132 #132
[mk-proof] #1553 refl #1552
[inst-discovered] theory-solving 0x0 basic# ; #136
[instance] 0x0 #141
[end-of-instance]
[mk-app] #1552 = #154 #154
[mk-proof] #1553 refl #1552
[mk-app] #1552 or #187 #165
[inst-discovered] theory-solving 0x0 basic# ; #166
[mk-app] #1553 = #166 #1552
[mk-proof] #1554 rewrite #1553
[instance] 0x0 #1553
[end-of-instance]
[mk-quant] #1555 k!150 2 #167 #1552
[attach-var-names] #1555 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1556 null 2 #1554
[mk-proof] #1557 proof-bind #1556
[mk-app] #1558 = #168 #1555
[mk-proof] #1559 quant-intro #1557 #1558
[mk-proof] #1560 mp #169 #1559 #1555
[inst-discovered] theory-solving 0x0 basic# ; #200
[instance] 0x0 #208
[end-of-instance]
[inst-discovered] theory-solving 0x0 basic# ; #202
[instance] 0x0 #211
[end-of-instance]
[mk-app] #1561 = #224 #224
[mk-proof] #1562 refl #1561
[mk-app] #1561 = #230 #230
[mk-proof] #1562 refl #1561
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #244
[instance] 0x0 #251
[end-of-instance]
[mk-quant] #1561 k!168 2 #246 #253
[attach-var-names] #1561 (|j| ; |Int|) (|i| ; |Int|)
[mk-lambda] #1562 null 2 #255
[mk-proof] #1563 proof-bind #1562
[mk-app] #1564 = #247 #1561
[mk-proof] #1565 quant-intro #1563 #1564
[mk-proof] #1566 mp #248 #1565 #1561
[inst-discovered] theory-solving 0x0 arith# ; #274
[instance] 0x0 #292
[end-of-instance]
[mk-app] #1567 and #272 #291
[mk-app] #1568 = #275 #1567
[mk-proof] #1569 monotonicity #293 #1568
[mk-app] #1570 and #158 #1567
[mk-app] #1571 = #276 #1570
[mk-proof] #1572 monotonicity #1569 #1571
[mk-app] #1573 and #158 #272 #291
[inst-discovered] theory-solving 0x0 basic# ; #1570
[mk-app] #1574 = #1570 #1573
[mk-proof] #1575 rewrite #1574
[instance] 0x0 #1574
[end-of-instance]
[mk-app] #1576 = #276 #1573
[mk-proof] #1577 trans #1572 #1575 #1576
[mk-app] #1578 and #271 #1573
[mk-app] #1579 = #277 #1578
[mk-proof] #1580 monotonicity #1577 #1579
[mk-app] #1581 and #271 #158 #272 #291
[inst-discovered] theory-solving 0x0 basic# ; #1578
[mk-app] #1582 = #1578 #1581
[mk-proof] #1583 rewrite #1582
[instance] 0x0 #1582
[end-of-instance]
[mk-app] #1584 = #277 #1581
[mk-proof] #1585 trans #1580 #1583 #1584
[mk-app] #1586 => #1581 #281
[mk-app] #1587 = #282 #1586
[mk-proof] #1588 monotonicity #1585 #1587
[mk-app] #1589 not #1581
[mk-app] #1590 or #1589 #281
[inst-discovered] theory-solving 0x0 basic# ; #1586
[mk-app] #1591 = #1586 #1590
[mk-proof] #1592 rewrite #1591
[instance] 0x0 #1591
[end-of-instance]
[mk-app] #1593 = #282 #1590
[mk-proof] #1594 trans #1588 #1592 #1593
[mk-quant] #1595 k!179 3 #283 #284 #1590
[attach-var-names] #1595 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1596 null 3 #1594
[mk-proof] #1597 proof-bind #1596
[mk-app] #1598 = #285 #1595
[mk-proof] #1599 quant-intro #1597 #1598
[mk-proof] #1600 mp #286 #1599 #1595
[inst-discovered] theory-solving 0x0 arith# ; #339
[instance] 0x0 #354
[end-of-instance]
[mk-app] #1601 and #290 #353
[mk-app] #1602 = #340 #1601
[mk-proof] #1603 monotonicity #355 #1602
[mk-app] #1604 and #158 #1601
[mk-app] #1605 = #341 #1604
[mk-proof] #1606 monotonicity #1603 #1605
[mk-app] #1607 and #158 #290 #353
[inst-discovered] theory-solving 0x0 basic# ; #1604
[mk-app] #1608 = #1604 #1607
[mk-proof] #1609 rewrite #1608
[instance] 0x0 #1608
[end-of-instance]
[mk-app] #1610 = #341 #1607
[mk-proof] #1611 trans #1606 #1609 #1610
[mk-app] #1612 and #271 #1607
[mk-app] #1613 = #342 #1612
[mk-proof] #1614 monotonicity #1611 #1613
[mk-app] #1615 and #271 #158 #290 #353
[inst-discovered] theory-solving 0x0 basic# ; #1612
[mk-app] #1616 = #1612 #1615
[mk-proof] #1617 rewrite #1616
[instance] 0x0 #1616
[end-of-instance]
[mk-app] #1618 = #342 #1615
[mk-proof] #1619 trans #1614 #1617 #1618
[mk-app] #1620 => #1615 #348
[mk-app] #1621 = #349 #1620
[mk-proof] #1622 monotonicity #1619 #1621
[mk-app] #1623 not #1615
[mk-app] #1624 or #1623 #348
[inst-discovered] theory-solving 0x0 basic# ; #1620
[mk-app] #1625 = #1620 #1624
[mk-proof] #1626 rewrite #1625
[instance] 0x0 #1625
[end-of-instance]
[mk-app] #1627 = #349 #1624
[mk-proof] #1628 trans #1622 #1626 #1627
[mk-quant] #1629 k!193 3 #283 #1624
[attach-var-names] #1629 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1630 null 3 #1628
[mk-proof] #1631 proof-bind #1630
[mk-app] #1632 = #350 #1629
[mk-proof] #1633 quant-intro #1631 #1632
[mk-proof] #1634 mp #351 #1633 #1629
[inst-discovered] theory-solving 0x0 arith# ; #400
[instance] 0x0 #417
[end-of-instance]
[mk-app] #1635 and #272 #416
[mk-app] #1636 = #401 #1635
[mk-proof] #1637 monotonicity #418 #1636
[mk-app] #1638 and #158 #1635
[mk-app] #1639 = #402 #1638
[mk-proof] #1640 monotonicity #1637 #1639
[mk-app] #1641 and #158 #272 #416
[inst-discovered] theory-solving 0x0 basic# ; #1638
[mk-app] #1642 = #1638 #1641
[mk-proof] #1643 rewrite #1642
[instance] 0x0 #1642
[end-of-instance]
[mk-app] #1644 = #402 #1641
[mk-proof] #1645 trans #1640 #1643 #1644
[mk-app] #1646 and #271 #1641
[mk-app] #1647 = #403 #1646
[mk-proof] #1648 monotonicity #1645 #1647
[mk-app] #1649 and #271 #158 #272 #416
[inst-discovered] theory-solving 0x0 basic# ; #1646
[mk-app] #1650 = #1646 #1649
[mk-proof] #1651 rewrite #1650
[instance] 0x0 #1650
[end-of-instance]
[mk-app] #1652 = #403 #1649
[mk-proof] #1653 trans #1648 #1651 #1652
[mk-app] #1654 => #1649 #410
[mk-app] #1655 = #411 #1654
[mk-proof] #1656 monotonicity #1653 #1655
[mk-app] #1657 not #1649
[mk-app] #1658 or #1657 #410
[inst-discovered] theory-solving 0x0 basic# ; #1654
[mk-app] #1659 = #1654 #1658
[mk-proof] #1660 rewrite #1659
[instance] 0x0 #1659
[end-of-instance]
[mk-app] #1661 = #411 #1658
[mk-proof] #1662 trans #1656 #1660 #1661
[mk-quant] #1663 k!207 3 #412 #1658
[attach-var-names] #1663 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1664 null 3 #1662
[mk-proof] #1665 proof-bind #1664
[mk-app] #1666 = #413 #1663
[mk-proof] #1667 quant-intro #1665 #1666
[mk-proof] #1668 mp #414 #1667 #1663
[inst-discovered] theory-solving 0x0 arith# ; #464
[instance] 0x0 #479
[end-of-instance]
[mk-app] #1669 and #463 #478
[mk-app] #1670 = #465 #1669
[mk-proof] #1671 monotonicity #480 #1670
[mk-app] #1672 => #1669 #468
[mk-app] #1673 = #469 #1672
[mk-proof] #1674 monotonicity #1671 #1673
[mk-app] #1675 not #1669
[mk-app] #1676 or #1675 #468
[inst-discovered] theory-solving 0x0 basic# ; #1672
[mk-app] #1677 = #1672 #1676
[mk-proof] #1678 rewrite #1677
[instance] 0x0 #1677
[end-of-instance]
[mk-app] #1679 = #469 #1676
[mk-proof] #1680 trans #1674 #1678 #1679
[mk-quant] #1681 k!214 3 #470 #471 #1676
[attach-var-names] #1681 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1682 null 3 #1680
[mk-proof] #1683 proof-bind #1682
[mk-app] #1684 = #472 #1681
[mk-proof] #1685 quant-intro #1683 #1684
[mk-proof] #1686 mp #473 #1685 #1681
[inst-discovered] theory-solving 0x0 arith# ; #511
[instance] 0x0 #530
[end-of-instance]
[mk-app] #1687 and #272 #529
[mk-app] #1688 = #512 #1687
[mk-proof] #1689 monotonicity #531 #1688
[inst-discovered] theory-solving 0x0 basic# ; #517
[instance] 0x0 #546
[end-of-instance]
[inst-discovered] theory-solving 0x0 basic# ; #521
[instance] 0x0 #549
[end-of-instance]
[mk-app] #1690 => #1687 #551
[mk-app] #1691 = #523 #1690
[mk-proof] #1692 monotonicity #1689 #553 #1691
[mk-app] #1693 not #1687
[mk-app] #1694 or #1693 #551
[inst-discovered] theory-solving 0x0 basic# ; #1690
[mk-app] #1695 = #1690 #1694
[mk-proof] #1696 rewrite #1695
[instance] 0x0 #1695
[end-of-instance]
[mk-app] #1697 = #523 #1694
[mk-proof] #1698 trans #1692 #1696 #1697
[mk-quant] #1699 k!223 4 #524 #525 #1694
[attach-var-names] #1699 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1700 null 4 #1698
[mk-proof] #1701 proof-bind #1700
[mk-app] #1702 = #526 #1699
[mk-proof] #1703 quant-intro #1701 #1702
[mk-proof] #1704 mp #527 #1703 #1699
[mk-app] #1705 or #598 #572
[inst-discovered] theory-solving 0x0 basic# ; #573
[mk-app] #1706 = #573 #1705
[mk-proof] #1707 rewrite #1706
[instance] 0x0 #1706
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #574
[instance] 0x0 #599
[end-of-instance]
[mk-app] #1708 => #598 #575
[mk-app] #1709 = #576 #1708
[mk-proof] #1710 monotonicity #600 #1709
[mk-app] #1711 or #569 #575
[inst-discovered] theory-solving 0x0 basic# ; #1708
[mk-app] #1712 = #1708 #1711
[mk-proof] #1713 rewrite #1712
[instance] 0x0 #1712
[end-of-instance]
[mk-app] #1714 = #576 #1711
[mk-proof] #1715 trans #1710 #1713 #1714
[mk-app] #1716 and #1705 #1711
[mk-app] #1717 = #577 #1716
[mk-proof] #1718 monotonicity #1707 #1715 #1717
[mk-app] #1719 => #272 #1716
[mk-app] #1720 = #578 #1719
[mk-proof] #1721 monotonicity #1718 #1720
[mk-app] #1722 or #625 #1716
[inst-discovered] theory-solving 0x0 basic# ; #1719
[mk-app] #1723 = #1719 #1722
[mk-proof] #1724 rewrite #1723
[instance] 0x0 #1723
[end-of-instance]
[mk-app] #1725 = #578 #1722
[mk-proof] #1726 trans #1721 #1724 #1725
[inst-discovered] theory-solving 0x0 arith# ; #37
[instance] 0x0 #626
[end-of-instance]
[mk-app] #1727 => #625 #579
[mk-app] #1728 = #580 #1727
[mk-proof] #1729 monotonicity #627 #1728
[mk-app] #1730 or #272 #579
[inst-discovered] theory-solving 0x0 basic# ; #1727
[mk-app] #1731 = #1727 #1730
[mk-proof] #1732 rewrite #1731
[instance] 0x0 #1731
[end-of-instance]
[mk-app] #1733 = #580 #1730
[mk-proof] #1734 trans #1729 #1732 #1733
[mk-app] #1735 and #1722 #1730
[mk-app] #1736 = #581 #1735
[mk-proof] #1737 monotonicity #1726 #1734 #1736
[mk-quant] #1738 k!234 2 #582 #583 #1735
[attach-var-names] #1738 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1739 null 2 #1737
[mk-proof] #1740 proof-bind #1739
[mk-app] #1741 = #584 #1738
[mk-proof] #1742 quant-intro #1740 #1741
[mk-proof] #1743 mp #585 #1742 #1738
[inst-discovered] theory-solving 0x0 arith# ; #649
[instance] 0x0 #661
[end-of-instance]
[mk-app] #1744 and #660 #291
[mk-app] #1745 = #650 #1744
[mk-proof] #1746 monotonicity #662 #293 #1745
[mk-app] #1747 and #272 #1744
[mk-app] #1748 = #651 #1747
[mk-proof] #1749 monotonicity #1746 #1748
[mk-app] #1750 and #272 #660 #291
[inst-discovered] theory-solving 0x0 basic# ; #1747
[mk-app] #1751 = #1747 #1750
[mk-proof] #1752 rewrite #1751
[instance] 0x0 #1751
[end-of-instance]
[mk-app] #1753 = #651 #1750
[mk-proof] #1754 trans #1749 #1752 #1753
[mk-app] #1755 => #1750 #654
[mk-app] #1756 = #655 #1755
[mk-proof] #1757 monotonicity #1754 #1756
[mk-app] #1758 not #1750
[mk-app] #1759 or #1758 #654
[inst-discovered] theory-solving 0x0 basic# ; #1755
[mk-app] #1760 = #1755 #1759
[mk-proof] #1761 rewrite #1760
[instance] 0x0 #1760
[end-of-instance]
[mk-app] #1762 = #655 #1759
[mk-proof] #1763 trans #1757 #1761 #1762
[mk-quant] #1764 k!241 3 #656 #657 #1759
[attach-var-names] #1764 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1765 null 3 #1763
[mk-proof] #1766 proof-bind #1765
[mk-app] #1767 = #658 #1764
[mk-proof] #1768 quant-intro #1766 #1767
[mk-proof] #1769 mp #659 #1768 #1764
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #699
[instance] 0x0 #714
[end-of-instance]
[mk-app] #1770 = #698 #713
[mk-app] #1771 = #700 #1770
[mk-proof] #1772 monotonicity #715 #1771
[mk-app] #1773 => #569 #1770
[mk-app] #1774 = #701 #1773
[mk-proof] #1775 monotonicity #1772 #1774
[mk-app] #1776 or #598 #1770
[inst-discovered] theory-solving 0x0 basic# ; #1773
[mk-app] #1777 = #1773 #1776
[mk-proof] #1778 rewrite #1777
[instance] 0x0 #1777
[end-of-instance]
[mk-app] #1779 = #701 #1776
[mk-proof] #1780 trans #1775 #1778 #1779
[mk-app] #1781 => #598 #702
[mk-app] #1782 = #703 #1781
[mk-proof] #1783 monotonicity #600 #1782
[mk-app] #1784 or #569 #702
[inst-discovered] theory-solving 0x0 basic# ; #1781
[mk-app] #1785 = #1781 #1784
[mk-proof] #1786 rewrite #1785
[instance] 0x0 #1785
[end-of-instance]
[mk-app] #1787 = #703 #1784
[mk-proof] #1788 trans #1783 #1786 #1787
[mk-app] #1789 and #1776 #1784
[mk-app] #1790 = #704 #1789
[mk-proof] #1791 monotonicity #1780 #1788 #1790
[mk-app] #1792 => #272 #1789
[mk-app] #1793 = #705 #1792
[mk-proof] #1794 monotonicity #1791 #1793
[mk-app] #1795 or #625 #1789
[inst-discovered] theory-solving 0x0 basic# ; #1792
[mk-app] #1796 = #1792 #1795
[mk-proof] #1797 rewrite #1796
[instance] 0x0 #1796
[end-of-instance]
[mk-app] #1798 = #705 #1795
[mk-proof] #1799 trans #1794 #1797 #1798
[mk-app] #1800 => #625 #706
[mk-app] #1801 = #707 #1800
[mk-proof] #1802 monotonicity #627 #1801
[mk-app] #1803 or #272 #706
[inst-discovered] theory-solving 0x0 basic# ; #1800
[mk-app] #1804 = #1800 #1803
[mk-proof] #1805 rewrite #1804
[instance] 0x0 #1804
[end-of-instance]
[mk-app] #1806 = #707 #1803
[mk-proof] #1807 trans #1802 #1805 #1806
[mk-app] #1808 and #1795 #1803
[mk-app] #1809 = #708 #1808
[mk-proof] #1810 monotonicity #1799 #1807 #1809
[mk-quant] #1811 k!254 2 #709 #710 #1808
[attach-var-names] #1811 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1812 null 2 #1810
[mk-proof] #1813 proof-bind #1812
[mk-app] #1814 = #711 #1811
[mk-proof] #1815 quant-intro #1813 #1814
[mk-proof] #1816 mp #712 #1815 #1811
[inst-discovered] theory-solving 0x0 arith# ; #774
[instance] 0x0 #793
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #775
[instance] 0x0 #797
[end-of-instance]
[mk-app] #1817 < #33 #796
[mk-app] #1818 = #776 #1817
[mk-proof] #1819 monotonicity #798 #1818
[mk-app] #1820 <= #796 #33
[mk-app] #1821 not #1820
[inst-discovered] theory-solving 0x0 arith# ; #1817
[mk-app] #1822 = #1817 #1821
[mk-proof] #1823 rewrite #1822
[instance] 0x0 #1822
[end-of-instance]
[mk-app] #1824 = #776 #1821
[mk-proof] #1825 trans #1819 #1823 #1824
[mk-app] #1826 and #272 #1821
[mk-app] #1827 = #777 #1826
[mk-proof] #1828 monotonicity #1825 #1827
[mk-app] #1829 and #792 #1826
[mk-app] #1830 = #778 #1829
[mk-proof] #1831 monotonicity #794 #1828 #1830
[mk-app] #1832 and #792 #272 #1821
[inst-discovered] theory-solving 0x0 basic# ; #1829
[mk-app] #1833 = #1829 #1832
[mk-proof] #1834 rewrite #1833
[instance] 0x0 #1833
[end-of-instance]
[mk-app] #1835 = #778 #1832
[mk-proof] #1836 trans #1831 #1834 #1835
[mk-app] #1837 => #1832 #786
[mk-app] #1838 = #787 #1837
[mk-proof] #1839 monotonicity #1836 #1838
[mk-app] #1840 not #1832
[mk-app] #1841 or #1840 #786
[inst-discovered] theory-solving 0x0 basic# ; #1837
[mk-app] #1842 = #1837 #1841
[mk-proof] #1843 rewrite #1842
[instance] 0x0 #1842
[end-of-instance]
[mk-app] #1844 = #787 #1841
[mk-proof] #1845 trans #1839 #1843 #1844
[mk-quant] #1846 k!262 3 #788 #1841
[attach-var-names] #1846 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1847 null 3 #1845
[mk-proof] #1848 proof-bind #1847
[mk-app] #1849 = #789 #1846
[mk-proof] #1850 quant-intro #1848 #1849
[mk-proof] #1851 mp #790 #1850 #1846
[mk-app] #1852 and #34 #291
[mk-app] #1853 = #848 #1852
[mk-proof] #1854 monotonicity #293 #1853
[mk-app] #1855 and #792 #1852
[mk-app] #1856 = #849 #1855
[mk-proof] #1857 monotonicity #794 #1854 #1856
[mk-app] #1858 and #792 #34 #291
[inst-discovered] theory-solving 0x0 basic# ; #1855
[mk-app] #1859 = #1855 #1858
[mk-proof] #1860 rewrite #1859
[instance] 0x0 #1859
[end-of-instance]
[mk-app] #1861 = #849 #1858
[mk-proof] #1862 trans #1857 #1860 #1861
[mk-app] #1863 => #1858 #855
[mk-app] #1864 = #856 #1863
[mk-proof] #1865 monotonicity #1862 #1864
[mk-app] #1866 not #1858
[mk-app] #1867 or #1866 #855
[inst-discovered] theory-solving 0x0 basic# ; #1863
[mk-app] #1868 = #1863 #1867
[mk-proof] #1869 rewrite #1868
[instance] 0x0 #1868
[end-of-instance]
[mk-app] #1870 = #856 #1867
[mk-proof] #1871 trans #1865 #1869 #1870
[mk-quant] #1872 k!270 3 #857 #1867
[attach-var-names] #1872 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1873 null 3 #1871
[mk-proof] #1874 proof-bind #1873
[mk-app] #1875 = #858 #1872
[mk-proof] #1876 quant-intro #1874 #1875
[mk-proof] #1877 mp #859 #1876 #1872
[inst-discovered] theory-solving 0x0 arith# ; #886
[instance] 0x0 #898
[end-of-instance]
[mk-app] #1878 and #897 #887
[mk-app] #1879 = #888 #1878
[mk-proof] #1880 monotonicity #899 #1879
[mk-app] #1881 => #1878 #891
[mk-app] #1882 = #892 #1881
[mk-proof] #1883 monotonicity #1880 #1882
[mk-app] #1884 not #1878
[mk-app] #1885 or #1884 #891
[inst-discovered] theory-solving 0x0 basic# ; #1881
[mk-app] #1886 = #1881 #1885
[mk-proof] #1887 rewrite #1886
[instance] 0x0 #1886
[end-of-instance]
[mk-app] #1888 = #892 #1885
[mk-proof] #1889 trans #1883 #1887 #1888
[mk-quant] #1890 k!276 3 #893 #1885
[attach-var-names] #1890 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1891 null 3 #1889
[mk-proof] #1892 proof-bind #1891
[mk-app] #1893 = #894 #1890
[mk-proof] #1894 quant-intro #1892 #1893
[mk-proof] #1895 mp #895 #1894 #1890
[inst-discovered] theory-solving 0x0 arith# ; #921
[instance] 0x0 #932
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #922
[instance] 0x0 #935
[end-of-instance]
[mk-app] #1896 and #934 #353
[mk-app] #1897 = #923 #1896
[mk-proof] #1898 monotonicity #936 #355 #1897
[mk-app] #1899 and #897 #1896
[mk-app] #1900 = #924 #1899
[mk-proof] #1901 monotonicity #933 #1898 #1900
[mk-app] #1902 and #897 #934 #353
[inst-discovered] theory-solving 0x0 basic# ; #1899
[mk-app] #1903 = #1899 #1902
[mk-proof] #1904 rewrite #1903
[instance] 0x0 #1903
[end-of-instance]
[mk-app] #1905 = #924 #1902
[mk-proof] #1906 trans #1901 #1904 #1905
[mk-app] #1907 => #1902 #928
[mk-app] #1908 = #929 #1907
[mk-proof] #1909 monotonicity #1906 #1908
[mk-app] #1910 not #1902
[mk-app] #1911 or #1910 #928
[inst-discovered] theory-solving 0x0 basic# ; #1907
[mk-app] #1912 = #1907 #1911
[mk-proof] #1913 rewrite #1912
[instance] 0x0 #1912
[end-of-instance]
[mk-app] #1914 = #929 #1911
[mk-proof] #1915 trans #1909 #1913 #1914
[mk-quant] #1916 k!286 3 #893 #1911
[attach-var-names] #1916 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1917 null 3 #1915
[mk-proof] #1918 proof-bind #1917
[mk-app] #1919 = #930 #1916
[mk-proof] #1920 quant-intro #1918 #1919
[mk-proof] #1921 mp #931 #1920 #1916
[mk-app] #1922 => #1878 #971
[mk-app] #1923 = #972 #1922
[mk-proof] #1924 monotonicity #1880 #1923
[mk-app] #1925 or #1884 #971
[inst-discovered] theory-solving 0x0 basic# ; #1922
[mk-app] #1926 = #1922 #1925
[mk-proof] #1927 rewrite #1926
[instance] 0x0 #1926
[end-of-instance]
[mk-app] #1928 = #972 #1925
[mk-proof] #1929 trans #1924 #1927 #1928
[mk-quant] #1930 k!292 3 #973 #1925
[attach-var-names] #1930 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1931 null 3 #1929
[mk-proof] #1932 proof-bind #1931
[mk-app] #1933 = #974 #1930
[mk-proof] #1934 quant-intro #1932 #1933
[mk-proof] #1935 mp #975 #1934 #1930
[mk-app] #1936 and #897 #934
[mk-app] #1937 = #990 #1936
[mk-proof] #1938 monotonicity #933 #936 #1937
[mk-app] #1939 => #1936 #993
[mk-app] #1940 = #994 #1939
[mk-proof] #1941 monotonicity #1938 #1940
[mk-app] #1942 not #1936
[mk-app] #1943 or #1942 #993
[inst-discovered] theory-solving 0x0 basic# ; #1939
[mk-app] #1944 = #1939 #1943
[mk-proof] #1945 rewrite #1944
[instance] 0x0 #1944
[end-of-instance]
[mk-app] #1946 = #994 #1943
[mk-proof] #1947 trans #1941 #1945 #1946
[mk-quant] #1948 k!300 3 #973 #1943
[attach-var-names] #1948 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1949 null 3 #1947
[mk-proof] #1950 proof-bind #1949
[mk-app] #1951 = #995 #1948
[mk-proof] #1952 quant-intro #1950 #1951
[mk-proof] #1953 mp #996 #1952 #1948
[inst-discovered] theory-solving 0x0 basic# ; #1016
[instance] 0x0 #1021
[end-of-instance]
[inst-discovered] theory-solving 0x0 basic# ; #1030
[instance] 0x0 #1035
[end-of-instance]
[mk-app] #1954 not #1043
[mk-app] #1955 or #1954 #1044
[inst-discovered] theory-solving 0x0 basic# ; #1045
[mk-app] #1956 = #1045 #1955
[mk-proof] #1957 rewrite #1956
[instance] 0x0 #1956
[end-of-instance]
[mk-quant] #1958 k!312 2 #1017 #1955
[attach-var-names] #1958 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1959 null 2 #1957
[mk-proof] #1960 proof-bind #1959
[mk-app] #1961 = #1046 #1958
[mk-proof] #1962 quant-intro #1960 #1961
[mk-proof] #1963 mp #1047 #1962 #1958
[mk-app] #1964 or #1954 #1064
[inst-discovered] theory-solving 0x0 basic# ; #1065
[mk-app] #1965 = #1065 #1964
[mk-proof] #1966 rewrite #1965
[instance] 0x0 #1965
[end-of-instance]
[mk-quant] #1967 k!316 2 #1031 #1964
[attach-var-names] #1967 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1968 null 2 #1966
[mk-proof] #1969 proof-bind #1968
[mk-app] #1970 = #1066 #1967
[mk-proof] #1971 quant-intro #1969 #1970
[mk-proof] #1972 mp #1067 #1971 #1967
[inst-discovered] theory-solving 0x0 arith# ; #1085
[instance] 0x0 #1099
[end-of-instance]
[mk-app] #1973 and #1098 #1087
[mk-app] #1974 = #1088 #1973
[mk-proof] #1975 monotonicity #1100 #1974
[mk-app] #1976 and #1084 #1973
[mk-app] #1977 = #1089 #1976
[mk-proof] #1978 monotonicity #1975 #1977
[mk-app] #1979 and #1084 #1098 #1087
[inst-discovered] theory-solving 0x0 basic# ; #1976
[mk-app] #1980 = #1976 #1979
[mk-proof] #1981 rewrite #1980
[instance] 0x0 #1980
[end-of-instance]
[mk-app] #1982 = #1089 #1979
[mk-proof] #1983 trans #1978 #1981 #1982
[mk-app] #1984 => #1082 #1979
[mk-app] #1985 = #1090 #1984
[mk-proof] #1986 monotonicity #1983 #1985
[mk-app] #1987 or #1125 #1979
[inst-discovered] theory-solving 0x0 basic# ; #1984
[mk-app] #1988 = #1984 #1987
[mk-proof] #1989 rewrite #1988
[instance] 0x0 #1988
[end-of-instance]
[mk-app] #1990 = #1090 #1987
[mk-proof] #1991 trans #1986 #1989 #1990
[mk-quant] #1992 k!326 2 #1091 #1987
[attach-var-names] #1992 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1993 null 2 #1991
[mk-proof] #1994 proof-bind #1993
[mk-app] #1995 = #1092 #1992
[mk-proof] #1996 quant-intro #1994 #1995
[mk-proof] #1997 mp #1093 #1996 #1992
[mk-app] #1998 and #291 #1137
[mk-app] #1999 = #1138 #1998
[mk-proof] #2000 monotonicity #293 #1999
[mk-app] #2001 and #272 #1998
[mk-app] #2002 = #1139 #2001
[mk-proof] #2003 monotonicity #2000 #2002
[mk-app] #2004 and #272 #291 #1137
[inst-discovered] theory-solving 0x0 basic# ; #2001
[mk-app] #2005 = #2001 #2004
[mk-proof] #2006 rewrite #2005
[instance] 0x0 #2005
[end-of-instance]
[mk-app] #2007 = #1139 #2004
[mk-proof] #2008 trans #2003 #2006 #2007
[mk-app] #2009 => #2004 #1140
[mk-app] #2010 = #1141 #2009
[mk-proof] #2011 monotonicity #2008 #2010
[mk-app] #2012 not #2004
[mk-app] #2013 or #2012 #1140
[inst-discovered] theory-solving 0x0 basic# ; #2009
[mk-app] #2014 = #2009 #2013
[mk-proof] #2015 rewrite #2014
[instance] 0x0 #2014
[end-of-instance]
[mk-app] #2016 = #1141 #2013
[mk-proof] #2017 trans #2011 #2015 #2016
[mk-quant] #2018 k!332 3 #1142 #2013
[attach-var-names] #2018 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2019 null 3 #2017
[mk-proof] #2020 proof-bind #2019
[mk-app] #2021 = #1143 #2018
[mk-proof] #2022 quant-intro #2020 #2021
[mk-proof] #2023 mp #1144 #2022 #2018
[mk-app] #2024 => #1635 #1171
[mk-app] #2025 = #1172 #2024
[mk-proof] #2026 monotonicity #1637 #2025
[mk-app] #2027 not #1635
[mk-app] #2028 or #2027 #1171
[inst-discovered] theory-solving 0x0 basic# ; #2024
[mk-app] #2029 = #2024 #2028
[mk-proof] #2030 rewrite #2029
[instance] 0x0 #2029
[end-of-instance]
[mk-app] #2031 = #1172 #2028
[mk-proof] #2032 trans #2026 #2030 #2031
[mk-quant] #2033 k!338 2 #1173 #2028
[attach-var-names] #2033 (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2034 null 2 #2032
[mk-proof] #2035 proof-bind #2034
[mk-app] #2036 = #1174 #2033
[mk-proof] #2037 quant-intro #2035 #2036
[mk-proof] #2038 mp #1175 #2037 #2033
[inst-discovered] theory-solving 0x0 basic# ; #1199
[instance] 0x0 #1221
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #1204
[instance] 0x0 #1228
[end-of-instance]
[mk-app] #2039 and #1227 #1208
[mk-app] #2040 = #1209 #2039
[mk-proof] #2041 monotonicity #1229 #2040
[mk-app] #2042 and #1203 #2039
[mk-app] #2043 = #1210 #2042
[mk-proof] #2044 monotonicity #2041 #2043
[mk-app] #2045 and #1203 #1227 #1208
[inst-discovered] theory-solving 0x0 basic# ; #2042
[mk-app] #2046 = #2042 #2045
[mk-proof] #2047 rewrite #2046
[instance] 0x0 #2046
[end-of-instance]
[mk-app] #2048 = #1210 #2045
[mk-proof] #2049 trans #2044 #2047 #2048
[mk-app] #2050 and #1202 #2045
[mk-app] #2051 = #1211 #2050
[mk-proof] #2052 monotonicity #2049 #2051
[mk-app] #2053 and #1202 #1203 #1227 #1208
[inst-discovered] theory-solving 0x0 basic# ; #2050
[mk-app] #2054 = #2050 #2053
[mk-proof] #2055 rewrite #2054
[instance] 0x0 #2054
[end-of-instance]
[mk-app] #2056 = #1211 #2053
[mk-proof] #2057 trans #2052 #2055 #2056
[mk-app] #2058 and #1196 #2053
[mk-app] #2059 = #1212 #2058
[mk-proof] #2060 monotonicity #2057 #2059
[mk-app] #2061 and #1196 #1202 #1203 #1227 #1208
[inst-discovered] theory-solving 0x0 basic# ; #2058
[mk-app] #2062 = #2058 #2061
[mk-proof] #2063 rewrite #2062
[instance] 0x0 #2062
[end-of-instance]
[mk-app] #2064 = #1212 #2061
[mk-proof] #2065 trans #2060 #2063 #2064
[mk-app] #2066 and #1195 #2061
[mk-app] #2067 = #1213 #2066
[mk-proof] #2068 monotonicity #2065 #2067
[mk-app] #2069 and #1195 #1196 #1202 #1203 #1227 #1208
[inst-discovered] theory-solving 0x0 basic# ; #2066
[mk-app] #2070 = #2066 #2069
[mk-proof] #2071 rewrite #2070
[instance] 0x0 #2070
[end-of-instance]
[mk-app] #2072 = #1213 #2069
[mk-proof] #2073 trans #2068 #2071 #2072
[mk-app] #2074 and #1194 #2069
[mk-app] #2075 = #1214 #2074
[mk-proof] #2076 monotonicity #2073 #2075
[mk-app] #2077 and #1194 #1195 #1196 #1202 #1203 #1227 #1208
[inst-discovered] theory-solving 0x0 basic# ; #2074
[mk-app] #2078 = #2074 #2077
[mk-proof] #2079 rewrite #2078
[instance] 0x0 #2078
[end-of-instance]
[mk-app] #2080 = #1214 #2077
[mk-proof] #2081 trans #2076 #2079 #2080
[mk-app] #2082 or #1220 #2077
[mk-app] #2083 = #1215 #2082
[mk-proof] #2084 monotonicity #1222 #2081 #2083
[mk-app] #2085 or #1193 #2082
[mk-app] #2086 = #1216 #2085
[mk-proof] #2087 monotonicity #2084 #2086
[mk-app] #2088 or #1193 #1220 #2077
[inst-discovered] theory-solving 0x0 basic# ; #2085
[mk-app] #2089 = #2085 #2088
[mk-proof] #2090 rewrite #2089
[instance] 0x0 #2089
[end-of-instance]
[mk-app] #2091 = #1216 #2088
[mk-proof] #2092 trans #2087 #2090 #2091
[mk-quant] #2093 k!363 2 #1217 #2088
[attach-var-names] #2093 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2094 null 2 #2092
[mk-proof] #2095 proof-bind #2094
[mk-app] #2096 = #1218 #2093
[mk-proof] #2097 quant-intro #2095 #2096
[mk-proof] #2098 mp #1219 #2097 #2093
[inst-discovered] theory-solving 0x0 basic# ; #1300
[instance] 0x0 #1304
[end-of-instance]
[mk-app] #2099 = #1317 #1317
[mk-proof] #2100 refl #2099
[inst-discovered] theory-solving 0x0 arith# ; #1319
[instance] 0x0 #1333
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1322
[instance] 0x0 #1344
[end-of-instance]
[mk-app] #2099 = #1321 #1343
[mk-app] #2100 = #1323 #2099
[mk-proof] #2101 monotonicity #1345 #2100
[mk-app] #2102 => #1332 #2099
[mk-app] #2103 = #1324 #2102
[mk-proof] #2104 monotonicity #1334 #2101 #2103
[mk-app] #2105 or #1325 #2099
[inst-discovered] theory-solving 0x0 basic# ; #2102
[mk-app] #2106 = #2102 #2105
[mk-proof] #2107 rewrite #2106
[instance] 0x0 #2106
[end-of-instance]
[mk-app] #2108 = #1324 #2105
[mk-proof] #2109 trans #2104 #2107 #2108
[mk-app] #2110 or #1332 #1326
[inst-discovered] theory-solving 0x0 basic# ; #1327
[mk-app] #2111 = #1327 #2110
[mk-proof] #2112 rewrite #2111
[instance] 0x0 #2111
[end-of-instance]
[mk-app] #2113 and #2105 #2110
[mk-app] #2114 = #1328 #2113
[mk-proof] #2115 monotonicity #2109 #2112 #2114
[mk-quant] #2116 $Seq[Int]_prog.ranged_seq_length 2 #1329 #2113
[attach-var-names] #2116 (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2117 null 2 #2115
[mk-proof] #2118 proof-bind #2117
[mk-app] #2119 = #1330 #2116
[mk-proof] #2120 quant-intro #2118 #2119
[mk-proof] #2121 mp #1331 #2120 #2116
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1385
[instance] 0x0 #1398
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #1400
[instance] 0x0 #1405
[end-of-instance]
[mk-app] #2122 and #272 #1404
[mk-app] #2123 = #1387 #2122
[mk-proof] #2124 monotonicity #1408 #2123
[mk-app] #2125 => #2122 #1391
[mk-app] #2126 = #1392 #2125
[mk-proof] #2127 monotonicity #2124 #2126
[mk-app] #2128 not #2122
[mk-app] #2129 or #2128 #1391
[inst-discovered] theory-solving 0x0 basic# ; #2125
[mk-app] #2130 = #2125 #2129
[mk-proof] #2131 rewrite #2130
[instance] 0x0 #2130
[end-of-instance]
[mk-app] #2132 = #1392 #2129
[mk-proof] #2133 trans #2127 #2131 #2132
[mk-quant] #2134 $Seq[Int]_prog.ranged_seq_index 3 #1393 #2129
[attach-var-names] #2134 (|j| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2135 null 3 #2133
[mk-proof] #2136 proof-bind #2135
[mk-app] #2137 = #1394 #2134
[mk-proof] #2138 quant-intro #2136 #2137
[mk-proof] #2139 mp #1395 #2138 #2134
[mk-app] #2140 and #1450 #660
[mk-app] #2141 = #1451 #2140
[mk-proof] #2142 monotonicity #662 #2141
[mk-app] #2143 = #1449 #2140
[mk-app] #2144 = #1452 #2143
[mk-proof] #2145 monotonicity #2142 #2144
[mk-quant] #2146 $Seq[Int]_prog.ranged_seq_contains 3 #1453 #2143
[attach-var-names] #2146 (|v| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2147 null 3 #2145
[mk-proof] #2148 proof-bind #2147
[mk-app] #2149 = #1454 #2146
[mk-proof] #2150 quant-intro #2148 #2149
[mk-proof] #2151 mp #1455 #2150 #2146
[mk-app] #2152 = #1477 #1477
[mk-proof] #2153 refl #2152
[inst-discovered] theory-solving 0x0 arith# ; #1480
[instance] 0x0 #1487
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1506
[instance] 0x0 #1515
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #1517
[instance] 0x0 #1523
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #1521
[instance] 0x0 #1529
[end-of-instance]
[mk-quant] #2152 prog.addr 3 #1510 #1536
[attach-var-names] #2152 (|j| ; |Int|) (|i| ; |Int|) (|a| ; |$Ref|)
[mk-lambda] #2153 null 3 #1538
[mk-proof] #2154 proof-bind #2153
[mk-app] #2155 = #1511 #2152
[mk-proof] #2156 quant-intro #2154 #2155
[mk-proof] #2157 mp #1512 #2156 #2152
[mk-app] #2158 = #43 #43
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #50 #50
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #57 #57
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #63 #63
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #70 #70
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #76 #76
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #82 #82
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #88 #88
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #95 #95
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #101 #101
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #108 #108
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #114 #114
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #119 #119
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #132 #132
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #143 #143
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #154 #154
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1555 #1555
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #216 #216
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #224 #224
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #230 #230
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1561 #1561
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1595 #1595
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1629 #1629
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1663 #1663
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1681 #1681
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1699 #1699
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1738 #1738
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1764 #1764
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1811 #1811
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1846 #1846
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1872 #1872
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1890 #1890
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1916 #1916
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1930 #1930
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1948 #1948
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1023 #1023
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1037 #1037
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1958 #1958
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1967 #1967
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1992 #1992
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2018 #2018
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2033 #2033
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2093 #2093
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1306 #1306
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1317 #1317
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2116 #2116
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2134 #2134
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2146 #2146
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1477 #1477
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1495 #1495
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2152 #2152
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #43 #43
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #50 #50
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #57 #57
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #63 #63
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #70 #70
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #76 #76
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #82 #82
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #88 #88
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #95 #95
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #101 #101
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #108 #108
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #114 #114
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #119 #119
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #132 #132
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #143 #143
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #154 #154
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1555 #1555
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #216 #216
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #224 #224
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #230 #230
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1561 #1561
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1595 #1595
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1629 #1629
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1663 #1663
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1681 #1681
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1699 #1699
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1738 #1738
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1764 #1764
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1811 #1811
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1846 #1846
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1872 #1872
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1890 #1890
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1916 #1916
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1930 #1930
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1948 #1948
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1023 #1023
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1037 #1037
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1958 #1958
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1967 #1967
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1992 #1992
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2018 #2018
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2033 #2033
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2093 #2093
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1306 #1306
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1317 #1317
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2116 #2116
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2134 #2134
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2146 #2146
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1477 #1477
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #1495 #1495
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #2152 #2152
[mk-proof] #2159 refl #2158
[mk-app] #2158 = #43 #43
[mk-proof] #2159 rewrite #2158
[mk-proof] #2160 mp #44 #2159 #43
[mk-app] #2161 = #50 #50
[mk-proof] #2162 rewrite #2161
[mk-proof] #2163 mp #51 #2162 #50
[mk-app] #2164 = #57 #57
[mk-proof] #2165 rewrite #2164
[mk-proof] #2166 mp #58 #2165 #57
[mk-app] #2167 = #63 #63
[mk-proof] #2168 rewrite #2167
[mk-proof] #2169 mp #64 #2168 #63
[mk-app] #2170 = #70 #70
[mk-proof] #2171 rewrite #2170
[mk-proof] #2172 mp #71 #2171 #70
[mk-app] #2173 = #76 #76
[mk-proof] #2174 rewrite #2173
[mk-proof] #2175 mp #77 #2174 #76
[mk-app] #2176 = #82 #82
[mk-proof] #2177 rewrite #2176
[mk-proof] #2178 mp #83 #2177 #82
[mk-app] #2179 = #88 #88
[mk-proof] #2180 rewrite #2179
[mk-proof] #2181 mp #89 #2180 #88
[mk-app] #2182 = #95 #95
[mk-proof] #2183 rewrite #2182
[mk-proof] #2184 mp #96 #2183 #95
[mk-app] #2185 = #101 #101
[mk-proof] #2186 rewrite #2185
[mk-proof] #2187 mp #102 #2186 #101
[mk-app] #2188 = #108 #108
[mk-proof] #2189 rewrite #2188
[mk-proof] #2190 mp #109 #2189 #108
[mk-app] #2191 = #114 #114
[mk-proof] #2192 rewrite #2191
[mk-proof] #2193 mp #115 #2192 #114
[mk-app] #2194 = #119 #119
[mk-proof] #2195 rewrite #2194
[mk-proof] #2196 mp #120 #2195 #119
[mk-app] #2197 = #132 #132
[mk-proof] #2198 rewrite #2197
[mk-proof] #2199 mp #133 #2198 #132
[mk-app] #2200 = #143 #143
[mk-proof] #2201 rewrite #2200
[mk-proof] #2202 mp #148 #2201 #143
[mk-app] #2203 = #154 #154
[mk-proof] #2204 rewrite #2203
[mk-proof] #2205 mp #155 #2204 #154
[mk-app] #2206 = #1555 #1555
[mk-proof] #2207 rewrite #2206
[mk-proof] #2208 mp #1560 #2207 #1555
[mk-app] #2209 = #216 #216
[mk-proof] #2210 rewrite #2209
[mk-proof] #2211 mp #221 #2210 #216
[mk-app] #2212 = #224 #224
[mk-proof] #2213 rewrite #2212
[mk-proof] #2214 mp #225 #2213 #224
[mk-app] #2215 = #230 #230
[mk-proof] #2216 rewrite #2215
[mk-proof] #2217 mp #231 #2216 #230
[mk-app] #2218 = #1561 #1561
[mk-proof] #2219 rewrite #2218
[mk-proof] #2220 mp #1566 #2219 #1561
[mk-app] #2221 = #1595 #1595
[mk-proof] #2222 rewrite #2221
[mk-proof] #2223 mp #1600 #2222 #1595
[mk-app] #2224 = #1629 #1629
[mk-proof] #2225 rewrite #2224
[mk-proof] #2226 mp #1634 #2225 #1629
[mk-app] #2227 = #1663 #1663
[mk-proof] #2228 rewrite #2227
[mk-proof] #2229 mp #1668 #2228 #1663
[mk-app] #2230 = #1681 #1681
[mk-proof] #2231 rewrite #2230
[mk-proof] #2232 mp #1686 #2231 #1681
[mk-app] #2233 = #1699 #1699
[mk-proof] #2234 rewrite #2233
[mk-proof] #2235 mp #1704 #2234 #1699
[mk-app] #2236 = #1738 #1738
[mk-proof] #2237 rewrite #2236
[mk-proof] #2238 mp #1743 #2237 #1738
[mk-app] #2239 = #1764 #1764
[mk-proof] #2240 rewrite #2239
[mk-proof] #2241 mp #1769 #2240 #1764
[mk-app] #2242 = #1811 #1811
[mk-proof] #2243 rewrite #2242
[mk-proof] #2244 mp #1816 #2243 #1811
[mk-app] #2245 = #1846 #1846
[mk-proof] #2246 rewrite #2245
[mk-proof] #2247 mp #1851 #2246 #1846
[mk-app] #2248 = #1872 #1872
[mk-proof] #2249 rewrite #2248
[mk-proof] #2250 mp #1877 #2249 #1872
[mk-app] #2251 = #1890 #1890
[mk-proof] #2252 rewrite #2251
[mk-proof] #2253 mp #1895 #2252 #1890
[mk-app] #2254 = #1916 #1916
[mk-proof] #2255 rewrite #2254
[mk-proof] #2256 mp #1921 #2255 #1916
[mk-app] #2257 = #1930 #1930
[mk-proof] #2258 rewrite #2257
[mk-proof] #2259 mp #1935 #2258 #1930
[mk-app] #2260 = #1948 #1948
[mk-proof] #2261 rewrite #2260
[mk-proof] #2262 mp #1953 #2261 #1948
[mk-app] #2263 = #1023 #1023
[mk-proof] #2264 rewrite #2263
[mk-proof] #2265 mp #1028 #2264 #1023
[mk-app] #2266 = #1037 #1037
[mk-proof] #2267 rewrite #2266
[mk-proof] #2268 mp #1042 #2267 #1037
[mk-app] #2269 = #1958 #1958
[mk-proof] #2270 rewrite #2269
[mk-proof] #2271 mp #1963 #2270 #1958
[mk-app] #2272 = #1967 #1967
[mk-proof] #2273 rewrite #2272
[mk-proof] #2274 mp #1972 #2273 #1967
[mk-app] #2275 = #1992 #1992
[mk-proof] #2276 rewrite #2275
[mk-proof] #2277 mp #1997 #2276 #1992
[mk-app] #2278 = #2018 #2018
[mk-proof] #2279 rewrite #2278
[mk-proof] #2280 mp #2023 #2279 #2018
[mk-app] #2281 = #2033 #2033
[mk-proof] #2282 rewrite #2281
[mk-proof] #2283 mp #2038 #2282 #2033
[mk-app] #2284 = #2093 #2093
[mk-proof] #2285 rewrite #2284
[mk-proof] #2286 mp #2098 #2285 #2093
[mk-app] #2287 = #1306 #1306
[mk-proof] #2288 rewrite #2287
[mk-proof] #2289 mp #1311 #2288 #1306
[mk-app] #2290 = #1317 #1317
[mk-proof] #2291 rewrite #2290
[mk-proof] #2292 mp #1318 #2291 #1317
[mk-app] #2293 = #2116 #2116
[mk-proof] #2294 rewrite #2293
[mk-proof] #2295 mp #2121 #2294 #2116
[mk-app] #2296 = #2134 #2134
[mk-proof] #2297 rewrite #2296
[mk-proof] #2298 mp #2139 #2297 #2134
[mk-app] #2299 = #2146 #2146
[mk-proof] #2300 rewrite #2299
[mk-proof] #2301 mp #2151 #2300 #2146
[mk-app] #2302 = #1477 #1477
[mk-proof] #2303 rewrite #2302
[mk-proof] #2304 mp #1478 #2303 #1477
[mk-app] #2305 = #1495 #1495
[mk-proof] #2306 rewrite #2305
[mk-proof] #2307 mp #1500 #2306 #1495
[mk-app] #2308 = #2152 #2152
[mk-proof] #2309 rewrite #2308
[mk-proof] #2310 mp #2157 #2309 #2152
[mk-proof] #2311 refl #2158
[mk-proof] #2311 refl #2161
[mk-proof] #2311 refl #2164
[mk-proof] #2311 refl #2167
[mk-proof] #2311 refl #2170
[mk-proof] #2311 refl #2173
[mk-proof] #2311 refl #2176
[mk-proof] #2311 refl #2179
[mk-proof] #2311 refl #2182
[mk-proof] #2311 refl #2185
[mk-proof] #2311 refl #2188
[mk-proof] #2311 refl #2191
[mk-proof] #2311 refl #2194
[mk-proof] #2311 refl #2197
[mk-proof] #2311 refl #2200
[mk-proof] #2311 refl #2203
[inst-discovered] theory-solving 0x0 arith# ; #164
[mk-app] #2311 = #164 #164
[mk-proof] #2312 rewrite #2311
[instance] 0x0 #2311
[end-of-instance]
[mk-app] #2313 = #165 #165
[mk-proof] #2314 monotonicity #2312 #2313
[mk-app] #2315 = #1552 #1552
[mk-proof] #2316 monotonicity #2314 #2315
[mk-proof] #2317 refl #2206
[mk-proof] #2317 refl #2209
[mk-proof] #2317 refl #2212
[inst-discovered] theory-solving 0x0 arith# ; #227
[mk-app] #2317 = #227 #227
[mk-proof] #2318 rewrite #2317
[instance] 0x0 #2317
[end-of-instance]
[mk-app] #2319 = #228 #228
[mk-proof] #2320 monotonicity #2318 #2319
[mk-proof] #2321 refl #2215
[inst-discovered] theory-solving 0x0 arith# ; #250
[mk-app] #2321 = #250 #250
[mk-proof] #2322 rewrite #2321
[instance] 0x0 #2321
[end-of-instance]
[mk-app] #2323 = #253 #253
[mk-proof] #2324 monotonicity #2322 #2323
[mk-proof] #2325 refl #2218
[mk-proof] #2325 refl #2221
[mk-proof] #2325 refl #2224
[mk-proof] #2325 refl #2227
[mk-proof] #2325 refl #2230
[mk-proof] #2325 refl #2233
[mk-proof] #2325 refl #2236
[mk-proof] #2325 refl #2239
[inst-discovered] theory-solving 0x0 arith# ; #713
[mk-app] #2325 = #713 #713
[mk-proof] #2326 rewrite #2325
[instance] 0x0 #2325
[end-of-instance]
[mk-app] #2327 = #1770 #1770
[mk-proof] #2328 monotonicity #2326 #2327
[mk-app] #2329 = #1776 #1776
[mk-proof] #2330 monotonicity #2328 #2329
[mk-app] #2331 = #1789 #1789
[mk-proof] #2332 monotonicity #2330 #2331
[mk-app] #2333 = #1795 #1795
[mk-proof] #2334 monotonicity #2332 #2333
[mk-app] #2335 = #1808 #1808
[mk-proof] #2336 monotonicity #2334 #2335
[mk-proof] #2337 refl #2242
[inst-discovered] theory-solving 0x0 arith# ; #796
[mk-app] #2337 = #796 #796
[mk-proof] #2338 rewrite #2337
[instance] 0x0 #2337
[end-of-instance]
[mk-app] #2339 = #1820 #1820
[mk-proof] #2340 monotonicity #2338 #2339
[mk-app] #2341 = #1821 #1821
[mk-proof] #2342 monotonicity #2340 #2341
[mk-app] #2343 = #1832 #1832
[mk-proof] #2344 monotonicity #2342 #2343
[mk-app] #2345 = #1840 #1840
[mk-proof] #2346 monotonicity #2344 #2345
[mk-app] #2347 = #1841 #1841
[mk-proof] #2348 monotonicity #2346 #2347
[mk-proof] #2349 refl #2245
[mk-proof] #2349 refl #2248
[mk-proof] #2349 refl #2251
[mk-proof] #2349 refl #2254
[mk-proof] #2349 refl #2257
[mk-proof] #2349 refl #2260
[mk-proof] #2349 refl #2263
[mk-proof] #2349 refl #2266
[mk-proof] #2349 refl #2269
[mk-proof] #2349 refl #2272
[mk-proof] #2349 refl #2275
[mk-proof] #2349 refl #2278
[mk-proof] #2349 refl #2281
[mk-proof] #2349 refl #2284
[mk-proof] #2349 refl #2287
[mk-proof] #2349 refl #2290
[inst-discovered] theory-solving 0x0 arith# ; #1343
[mk-app] #2349 = #1343 #1343
[mk-proof] #2350 rewrite #2349
[instance] 0x0 #2349
[end-of-instance]
[mk-app] #2351 = #2099 #2099
[mk-proof] #2352 monotonicity #2350 #2351
[mk-app] #2353 = #2105 #2105
[mk-proof] #2354 monotonicity #2352 #2353
[mk-app] #2355 = #2113 #2113
[mk-proof] #2356 monotonicity #2354 #2355
[mk-proof] #2357 refl #2293
[inst-discovered] theory-solving 0x0 arith# ; #1397
[mk-app] #2357 = #1397 #1397
[mk-proof] #2358 rewrite #2357
[instance] 0x0 #2357
[end-of-instance]
[mk-app] #2359 = #1403 #1403
[mk-proof] #2360 monotonicity #2358 #2359
[mk-app] #2361 = #1404 #1404
[mk-proof] #2362 monotonicity #2360 #2361
[mk-app] #2363 = #2122 #2122
[mk-proof] #2364 monotonicity #2362 #2363
[mk-app] #2365 = #2128 #2128
[mk-proof] #2366 monotonicity #2364 #2365
[inst-discovered] theory-solving 0x0 arith# ; #1390
[mk-app] #2367 = #1390 #1390
[mk-proof] #2368 rewrite #2367
[instance] 0x0 #2367
[end-of-instance]
[mk-app] #2369 = #1391 #1391
[mk-proof] #2370 monotonicity #2368 #2369
[mk-app] #2371 = #2129 #2129
[mk-proof] #2372 monotonicity #2366 #2370 #2371
[mk-proof] #2373 refl #2296
[mk-proof] #2373 refl #2299
[mk-proof] #2373 refl #2302
[inst-discovered] theory-solving 0x0 arith# ; #1486
[mk-app] #2373 = #1486 #1486
[mk-proof] #2374 rewrite #2373
[instance] 0x0 #2373
[end-of-instance]
[mk-app] #2375 = #1489 #1489
[mk-proof] #2376 monotonicity #2374 #2375
[mk-app] #2377 = #1492 #1492
[mk-proof] #2378 monotonicity #2376 #2377
[mk-proof] #2379 refl #2305
[inst-discovered] theory-solving 0x0 arith# ; #1514
[mk-app] #2379 = #1514 #1514
[mk-proof] #2380 rewrite #2379
[instance] 0x0 #2379
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #1531
[mk-app] #2381 = #1531 #1531
[mk-proof] #2382 rewrite #2381
[instance] 0x0 #2381
[end-of-instance]
[mk-app] #2383 = #1536 #1536
[mk-proof] #2384 monotonicity #2380 #2382 #2383
[mk-proof] #2385 refl #2308
[mk-proof] #2373 refl #2158
[mk-proof] #2373 refl #2161
[mk-proof] #2373 refl #2164
[mk-proof] #2373 refl #2167
[mk-proof] #2373 refl #2170
[mk-proof] #2373 refl #2173
[mk-proof] #2373 refl #2176
[mk-proof] #2373 refl #2179
[mk-proof] #2373 refl #2182
[mk-proof] #2373 refl #2185
[mk-proof] #2373 refl #2188
[mk-proof] #2373 refl #2191
[mk-proof] #2373 refl #2194
[mk-proof] #2373 refl #2197
[mk-proof] #2373 refl #2200
[mk-proof] #2373 refl #2203
[mk-proof] #2373 refl #2206
[mk-proof] #2373 refl #2209
[mk-proof] #2373 refl #2212
[mk-proof] #2373 refl #2215
[mk-proof] #2373 refl #2218
[mk-proof] #2373 refl #2221
[mk-proof] #2373 refl #2224
[mk-proof] #2373 refl #2227
[mk-proof] #2373 refl #2230
[mk-proof] #2373 refl #2233
[mk-proof] #2373 refl #2236
[mk-proof] #2373 refl #2239
[mk-proof] #2373 refl #2242
[mk-proof] #2373 refl #2245
[mk-proof] #2373 refl #2248
[mk-proof] #2373 refl #2251
[mk-proof] #2373 refl #2254
[mk-proof] #2373 refl #2257
[mk-proof] #2373 refl #2260
[mk-proof] #2373 refl #2263
[mk-proof] #2373 refl #2266
[mk-proof] #2373 refl #2269
[mk-proof] #2373 refl #2272
[mk-proof] #2373 refl #2275
[mk-proof] #2373 refl #2278
[mk-proof] #2373 refl #2281
[mk-proof] #2373 refl #2284
[mk-proof] #2373 refl #2287
[mk-proof] #2373 refl #2290
[mk-proof] #2373 refl #2293
[mk-proof] #2373 refl #2296
[mk-proof] #2373 refl #2299
[mk-proof] #2373 refl #2302
[mk-proof] #2373 refl #2305
[mk-proof] #2373 refl #2308
[attach-meaning] #176 arith (- 1)
[mk-app] #2373 * #176 #40
[mk-app] #2374 + #33 #2373
[mk-app] #2375 = #2374 #36
[inst-discovered] theory-solving 0x0 arith# ; #41
[mk-app] #2376 = #41 #2375
[mk-proof] #2349 rewrite #2376
[instance] 0x0 #2376
[end-of-instance]
[mk-quant] #2350 $Snap.$SnapToIntTo$Snap 1 #42 #2375
[attach-var-names] #2350 (|x| ; |Int|)
[mk-lambda] #2351 null 1 #2349
[mk-proof] #2352 proof-bind #2351
[mk-app] #2353 = #43 #2350
[mk-proof] #2354 quant-intro #2352 #2353
[mk-proof] #2355 mp #2160 #2354 #2350
[mk-proof] #2356 refl #2161
[mk-proof] #2356 refl #2164
[mk-proof] #2356 refl #2167
[mk-proof] #2356 refl #2170
[mk-proof] #2356 refl #2173
[mk-app] #2356 Real
[attach-meaning] #2356 arith (- 1)
[mk-app] #2325 * #2356 #79
[mk-app] #2326 + #23 #2325
[mk-app] #2337 = #2326 #25
[inst-discovered] theory-solving 0x0 arith# ; #80
[mk-app] #2338 = #80 #2337
[mk-proof] #2357 rewrite #2338
[instance] 0x0 #2338
[end-of-instance]
[mk-quant] #2358 $Snap.$SnapTo$PermTo$Snap 1 #81 #2337
[attach-var-names] #2358 (|x| ; |Real|)
[mk-lambda] #2359 null 1 #2357
[mk-proof] #2360 proof-bind #2359
[mk-app] #2361 = #82 #2358
[mk-proof] #2362 quant-intro #2360 #2361
[mk-proof] #2317 mp #2178 #2362 #2358
[mk-proof] #2318 refl #2179
[mk-proof] #2318 refl #2182
[mk-proof] #2318 refl #2185
[mk-proof] #2318 refl #2188
[mk-proof] #2318 refl #2191
[attach-meaning] #176 arith (- 1)
[mk-app] #2318 * #176 #116
[inst-discovered] theory-solving 0x0 arith# ; #117
[instance] 0x0 #121
[end-of-instance]
[mk-proof] #2318 mp #2196 #128 #124
[mk-proof] #2319 refl #2197
[mk-proof] #2319 refl #2200
[mk-proof] #2319 refl #2203
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[mk-app] #2319 * #176 #116
[mk-app] #2320 + #162 #420 #2319
[mk-app] #2379 = #2320 #36
[inst-discovered] theory-solving 0x0 arith# ; #165
[mk-app] #2380 = #165 #2379
[mk-proof] #2321 rewrite #2380
[instance] 0x0 #2380
[end-of-instance]
[mk-app] #2322 or #187 #2379
[mk-app] #2377 = #1552 #2322
[mk-proof] #2378 monotonicity #2321 #2377
[mk-quant] #2327 k!150 2 #167 #2322
[attach-var-names] #2327 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2328 null 2 #2378
[mk-proof] #2329 proof-bind #2328
[mk-app] #2330 = #1555 #2327
[mk-proof] #2331 quant-intro #2329 #2330
[mk-proof] #2332 mp #2208 #2331 #2327
[mk-proof] #2333 refl #2209
[attach-meaning] #176 arith (- 1)
[mk-app] #2333 + #222 #249
[mk-app] #2334 = #2333 #36
[inst-discovered] theory-solving 0x0 arith# ; #223
[mk-app] #2335 = #223 #2334
[mk-proof] #2336 rewrite #2335
[instance] 0x0 #2335
[end-of-instance]
[mk-quant] #2367 k!160 1 #153 #2334
[attach-var-names] #2367 (|e| ; |Int|)
[mk-lambda] #2368 null 1 #2336
[mk-proof] #2363 proof-bind #2368
[mk-app] #2364 = #224 #2367
[mk-proof] #2365 quant-intro #2363 #2364
[mk-proof] #2366 mp #2214 #2365 #2367
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[mk-app] #2369 + #226 #795 #249
[mk-app] #2370 = #2369 #36
[inst-discovered] theory-solving 0x0 arith# ; #228
[mk-app] #2371 = #228 #2370
[mk-proof] #2372 rewrite #2371
[instance] 0x0 #2371
[end-of-instance]
[mk-quant] #2311 k!164 2 #229 #2370
[attach-var-names] #2311 (|j| ; |Int|) (|i| ; |Int|)
[mk-lambda] #2312 null 2 #2372
[mk-proof] #2339 proof-bind #2312
[mk-app] #2340 = #230 #2311
[mk-proof] #2341 quant-intro #2339 #2340
[mk-proof] #2342 mp #2217 #2341 #2311
[attach-meaning] #176 arith (- 1)
[mk-app] #2343 + #243 #795 #33
[mk-app] #2344 = #2343 #36
[inst-discovered] theory-solving 0x0 arith# ; #253
[mk-app] #2381 = #253 #2344
[mk-proof] #2382 rewrite #2381
[instance] 0x0 #2381
[end-of-instance]
[mk-quant] #2313 k!168 2 #246 #2344
[attach-var-names] #2313 (|j| ; |Int|) (|i| ; |Int|)
[mk-lambda] #2314 null 2 #2382
[mk-proof] #2323 proof-bind #2314
[mk-app] #2324 = #1561 #2313
[mk-proof] #2315 quant-intro #2323 #2324
[mk-proof] #2316 mp #2220 #2315 #2313
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #272
[instance] 0x0 #288
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2345 + #273 #249
[mk-app] #2346 <= #2345 #36
[inst-discovered] theory-solving 0x0 arith# ; #290
[mk-app] #2347 = #290 #2346
[mk-proof] #2348 rewrite #2347
[instance] 0x0 #2347
[end-of-instance]
[mk-app] #2383 not #2346
[mk-app] #2384 = #291 #2383
[mk-proof] #2385 monotonicity #2348 #2384
[mk-app] #2386 and #271 #158 #287 #2383
[mk-app] #2387 = #1581 #2386
[mk-proof] #2388 monotonicity #289 #2385 #2387
[mk-app] #2389 not #2386
[mk-app] #2390 = #1589 #2389
[mk-proof] #2391 monotonicity #2388 #2390
[attach-meaning] #176 arith (- 1)
[mk-app] #2392 * #176 #280
[mk-app] #2393 + #279 #2392
[mk-app] #2394 = #2393 #36
[inst-discovered] theory-solving 0x0 arith# ; #281
[mk-app] #2395 = #281 #2394
[mk-proof] #2396 rewrite #2395
[instance] 0x0 #2395
[end-of-instance]
[mk-app] #2397 or #2389 #2394
[mk-app] #2398 = #1590 #2397
[mk-proof] #2399 monotonicity #2391 #2396 #2398
[mk-quant] #2400 k!179 3 #283 #284 #2397
[attach-var-names] #2400 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2401 null 3 #2399
[mk-proof] #2402 proof-bind #2401
[mk-app] #2403 = #1595 #2400
[mk-proof] #2404 quant-intro #2402 #2403
[mk-proof] #2405 mp #2223 #2404 #2400
[attach-meaning] #176 arith (- 1)
[mk-app] #2406 + #338 #249
[mk-app] #2407 <= #2406 #36
[inst-discovered] theory-solving 0x0 arith# ; #352
[mk-app] #2408 = #352 #2407
[mk-proof] #2409 rewrite #2408
[instance] 0x0 #2408
[end-of-instance]
[mk-app] #2410 not #2407
[mk-app] #2411 = #353 #2410
[mk-proof] #2412 monotonicity #2409 #2411
[mk-app] #2413 and #271 #158 #2346 #2410
[mk-app] #2414 = #1615 #2413
[mk-proof] #2415 monotonicity #2348 #2412 #2414
[mk-app] #2416 not #2413
[mk-app] #2417 = #1623 #2416
[mk-proof] #2418 monotonicity #2415 #2417
[attach-meaning] #176 arith (- 1)
[mk-app] #2419 + #344 #249
[mk-app] #2420 = #2419 #36
[inst-discovered] theory-solving 0x0 arith# ; #345
[mk-app] #2421 = #345 #2420
[mk-proof] #2422 rewrite #2421
[instance] 0x0 #2421
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2423 * #176 #346
[mk-app] #2424 + #279 #2423
[mk-app] #2425 = #2424 #36
[inst-discovered] theory-solving 0x0 arith# ; #347
[mk-app] #2426 = #347 #2425
[mk-proof] #2427 rewrite #2426
[instance] 0x0 #2426
[end-of-instance]
[mk-app] #2428 and #2420 #2425
[mk-app] #2429 = #348 #2428
[mk-proof] #2430 monotonicity #2422 #2427 #2429
[mk-app] #2431 or #2416 #2428
[mk-app] #2432 = #1624 #2431
[mk-proof] #2433 monotonicity #2418 #2430 #2432
[mk-quant] #2434 k!193 3 #283 #2431
[attach-var-names] #2434 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2435 null 3 #2433
[mk-proof] #2436 proof-bind #2435
[mk-app] #2437 = #1629 #2434
[mk-proof] #2438 quant-intro #2436 #2437
[mk-proof] #2439 mp #2226 #2438 #2434
[attach-meaning] #176 arith (- 1)
[mk-app] #2440 <= #713 #36
[inst-discovered] theory-solving 0x0 arith# ; #415
[mk-app] #2441 = #415 #2440
[mk-proof] #2442 rewrite #2441
[instance] 0x0 #2441
[end-of-instance]
[mk-app] #2443 not #2440
[mk-app] #2444 = #416 #2443
[mk-proof] #2445 monotonicity #2442 #2444
[mk-app] #2446 and #271 #158 #287 #2443
[mk-app] #2447 = #1649 #2446
[mk-proof] #2448 monotonicity #289 #2445 #2447
[mk-app] #2449 not #2446
[mk-app] #2450 = #1657 #2449
[mk-proof] #2451 monotonicity #2448 #2450
[attach-meaning] #176 arith (- 1)
[mk-app] #2452 + #405 #249
[mk-app] #2453 = #2452 #36
[inst-discovered] theory-solving 0x0 arith# ; #406
[mk-app] #2454 = #406 #2453
[mk-proof] #2455 rewrite #2454
[instance] 0x0 #2454
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2456 * #176 #408
[mk-app] #2457 + #407 #2456
[mk-app] #2458 = #2457 #36
[inst-discovered] theory-solving 0x0 arith# ; #409
[mk-app] #2459 = #409 #2458
[mk-proof] #2460 rewrite #2459
[instance] 0x0 #2459
[end-of-instance]
[mk-app] #2461 and #2453 #2458
[mk-app] #2462 = #410 #2461
[mk-proof] #2463 monotonicity #2455 #2460 #2462
[mk-app] #2464 or #2449 #2461
[mk-app] #2465 = #1658 #2464
[mk-proof] #2466 monotonicity #2451 #2463 #2465
[mk-quant] #2467 k!207 3 #412 #2464
[attach-var-names] #2467 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2468 null 3 #2466
[mk-proof] #2469 proof-bind #2468
[mk-app] #2470 = #1663 #2467
[mk-proof] #2471 quant-intro #2469 #2470
[mk-proof] #2472 mp #2229 #2471 #2467
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #463
[instance] 0x0 #474
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2473 <= #796 #36
[inst-discovered] theory-solving 0x0 arith# ; #477
[mk-app] #2474 = #477 #2473
[mk-proof] #2475 rewrite #2474
[instance] 0x0 #2474
[end-of-instance]
[mk-app] #2476 not #2473
[mk-app] #2477 = #478 #2476
[mk-proof] #2478 monotonicity #2475 #2477
[mk-app] #2479 and #475 #2476
[mk-app] #2480 = #1669 #2479
[mk-proof] #2481 monotonicity #476 #2478 #2480
[mk-app] #2482 not #2479
[mk-app] #2483 = #1675 #2482
[mk-proof] #2484 monotonicity #2481 #2483
[attach-meaning] #176 arith (- 1)
[mk-app] #2485 + #467 #295
[mk-app] #2486 = #2485 #36
[inst-discovered] theory-solving 0x0 arith# ; #468
[mk-app] #2487 = #468 #2486
[mk-proof] #2488 rewrite #2487
[instance] 0x0 #2487
[end-of-instance]
[mk-app] #2489 or #2482 #2486
[mk-app] #2490 = #1676 #2489
[mk-proof] #2491 monotonicity #2484 #2488 #2490
[mk-quant] #2492 k!214 3 #470 #471 #2489
[attach-var-names] #2492 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2493 null 3 #2491
[mk-proof] #2494 proof-bind #2493
[mk-app] #2495 = #1681 #2492
[mk-proof] #2496 quant-intro #2494 #2495
[mk-proof] #2497 mp #2232 #2496 #2492
[attach-meaning] #176 arith (- 1)
[mk-app] #2498 + #510 #249
[mk-app] #2499 <= #2498 #36
[inst-discovered] theory-solving 0x0 arith# ; #528
[mk-app] #2500 = #528 #2499
[mk-proof] #2501 rewrite #2500
[instance] 0x0 #2500
[end-of-instance]
[mk-app] #2502 not #2499
[mk-app] #2503 = #529 #2502
[mk-proof] #2504 monotonicity #2501 #2503
[mk-app] #2505 and #287 #2502
[mk-app] #2506 = #1687 #2505
[mk-proof] #2507 monotonicity #289 #2504 #2506
[mk-app] #2508 not #2505
[mk-app] #2509 = #1693 #2508
[mk-proof] #2510 monotonicity #2507 #2509
[attach-meaning] #176 arith (- 1)
[mk-app] #2511 + #509 #249
[mk-app] #2512 = #2511 #36
[inst-discovered] theory-solving 0x0 arith# ; #513
[mk-app] #2513 = #513 #2512
[mk-proof] #2514 rewrite #2513
[instance] 0x0 #2513
[end-of-instance]
[mk-app] #2515 not #2512
[mk-app] #2516 = #518 #2515
[mk-proof] #2517 monotonicity #2514 #2516
[attach-meaning] #176 arith (- 1)
[mk-app] #2518 + #515 #795
[mk-app] #2519 = #2518 #36
[inst-discovered] theory-solving 0x0 arith# ; #516
[mk-app] #2520 = #516 #2519
[mk-proof] #2521 rewrite #2520
[instance] 0x0 #2520
[end-of-instance]
[mk-app] #2522 or #2515 #2519
[mk-app] #2523 = #545 #2522
[mk-proof] #2524 monotonicity #2517 #2521 #2523
[attach-meaning] #176 arith (- 1)
[mk-app] #2525 * #176 #519
[mk-app] #2526 + #515 #2525
[mk-app] #2527 = #2526 #36
[inst-discovered] theory-solving 0x0 arith# ; #520
[mk-app] #2528 = #520 #2527
[mk-proof] #2529 rewrite #2528
[instance] 0x0 #2528
[end-of-instance]
[mk-app] #2530 or #2512 #2527
[mk-app] #2531 = #548 #2530
[mk-proof] #2532 monotonicity #2514 #2529 #2531
[mk-app] #2533 and #2522 #2530
[mk-app] #2534 = #551 #2533
[mk-proof] #2535 monotonicity #2524 #2532 #2534
[mk-app] #2536 or #2508 #2533
[mk-app] #2537 = #1694 #2536
[mk-proof] #2538 monotonicity #2510 #2535 #2537
[mk-quant] #2539 k!223 4 #524 #525 #2536
[attach-var-names] #2539 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2540 null 4 #2538
[mk-proof] #2541 proof-bind #2540
[mk-app] #2542 = #1699 #2539
[mk-proof] #2543 quant-intro #2541 #2542
[mk-proof] #2544 mp #2235 #2543 #2539
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #569
[instance] 0x0 #587
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2545 + #571 #249
[mk-app] #2546 = #2545 #36
[inst-discovered] theory-solving 0x0 arith# ; #572
[mk-app] #2547 = #572 #2546
[mk-proof] #2548 rewrite #2547
[instance] 0x0 #2547
[end-of-instance]
[mk-app] #2549 or #592 #2546
[mk-app] #2550 = #1705 #2549
[mk-proof] #2551 monotonicity #602 #2548 #2550
[attach-meaning] #176 arith (- 1)
[mk-app] #2552 + #571 #420
[mk-app] #2553 = #2552 #36
[inst-discovered] theory-solving 0x0 arith# ; #575
[mk-app] #2554 = #575 #2553
[mk-proof] #2555 rewrite #2554
[instance] 0x0 #2554
[end-of-instance]
[mk-app] #2556 or #586 #2553
[mk-app] #2557 = #1711 #2556
[mk-proof] #2558 monotonicity #588 #2555 #2557
[mk-app] #2559 and #2549 #2556
[mk-app] #2560 = #1716 #2559
[mk-proof] #2561 monotonicity #2551 #2558 #2560
[mk-app] #2562 or #619 #2559
[mk-app] #2563 = #1722 #2562
[mk-proof] #2564 monotonicity #629 #2561 #2563
[mk-app] #2565 = #1730 #635
[mk-proof] #2566 monotonicity #289 #2565
[mk-app] #2567 and #2562 #635
[mk-app] #2568 = #1735 #2567
[mk-proof] #2569 monotonicity #2564 #2566 #2568
[mk-quant] #2570 k!234 2 #582 #583 #2567
[attach-var-names] #2570 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2571 null 2 #2569
[mk-proof] #2572 proof-bind #2571
[mk-app] #2573 = #1738 #2570
[mk-proof] #2574 quant-intro #2572 #2573
[mk-proof] #2575 mp #2238 #2574 #2570
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #34
[instance] 0x0 #664
[end-of-instance]
[mk-app] #2576 and #287 #666 #2383
[mk-app] #2577 = #1750 #2576
[mk-proof] #2578 monotonicity #289 #668 #2385 #2577
[mk-app] #2579 not #2576
[mk-app] #2580 = #1758 #2579
[mk-proof] #2581 monotonicity #2578 #2580
[attach-meaning] #176 arith (- 1)
[mk-app] #2582 + #653 #2392
[mk-app] #2583 = #2582 #36
[inst-discovered] theory-solving 0x0 arith# ; #654
[mk-app] #2584 = #654 #2583
[mk-proof] #2585 rewrite #2584
[instance] 0x0 #2584
[end-of-instance]
[mk-app] #2586 or #2579 #2583
[mk-app] #2587 = #1759 #2586
[mk-proof] #2588 monotonicity #2581 #2585 #2587
[mk-quant] #2589 k!241 3 #656 #657 #2586
[attach-var-names] #2589 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2590 null 3 #2588
[mk-proof] #2591 proof-bind #2590
[mk-app] #2592 = #1764 #2589
[mk-proof] #2593 quant-intro #2591 #2592
[mk-proof] #2594 mp #2241 #2593 #2589
[attach-meaning] #176 arith (- 1)
[mk-app] #2595 + #698 #420 #33
[mk-app] #2596 = #2595 #36
[inst-discovered] theory-solving 0x0 arith# ; #1770
[mk-app] #2597 = #1770 #2596
[mk-proof] #2598 rewrite #2597
[instance] 0x0 #2597
[end-of-instance]
[mk-app] #2599 or #592 #2596
[mk-app] #2600 = #1776 #2599
[mk-proof] #2601 monotonicity #602 #2598 #2600
[mk-app] #2602 = #1784 #741
[mk-proof] #2603 monotonicity #588 #2602
[inst-discovered] theory-solving 0x0 basic# ; #741
[mk-app] #2604 = #741 #741
[mk-proof] #2605 rewrite #2604
[instance] 0x0 #2604
[end-of-instance]
[mk-proof] #2606 trans #2603 #2605 #2602
[mk-app] #2607 and #2599 #741
[mk-app] #2608 = #1789 #2607
[mk-proof] #2609 monotonicity #2601 #2606 #2608
[mk-app] #2610 or #619 #2607
[mk-app] #2611 = #1795 #2610
[mk-proof] #2612 monotonicity #629 #2609 #2611
[attach-meaning] #176 arith (- 1)
[mk-app] #2613 + #698 #420
[mk-app] #2614 = #2613 #36
[inst-discovered] theory-solving 0x0 arith# ; #706
[mk-app] #2615 = #706 #2614
[mk-proof] #2616 rewrite #2615
[instance] 0x0 #2615
[end-of-instance]
[mk-app] #2617 or #287 #2614
[mk-app] #2618 = #1803 #2617
[mk-proof] #2619 monotonicity #289 #2616 #2618
[mk-app] #2620 and #2610 #2617
[mk-app] #2621 = #1808 #2620
[mk-proof] #2622 monotonicity #2612 #2619 #2621
[mk-quant] #2623 k!254 2 #709 #710 #2620
[attach-var-names] #2623 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2624 null 2 #2622
[mk-proof] #2625 proof-bind #2624
[mk-app] #2626 = #1811 #2623
[mk-proof] #2627 quant-intro #2625 #2626
[mk-proof] #2628 mp #2244 #2627 #2623
[attach-meaning] #176 arith (- 1)
[mk-app] #2629 + #273 #795 #249
[mk-app] #2630 <= #2629 #36
[inst-discovered] theory-solving 0x0 arith# ; #1820
[mk-app] #2631 = #1820 #2630
[mk-proof] #2632 rewrite #2631
[instance] 0x0 #2631
[end-of-instance]
[mk-app] #2633 not #2630
[mk-app] #2634 = #1821 #2633
[mk-proof] #2635 monotonicity #2632 #2634
[mk-app] #2636 and #792 #287 #2633
[mk-app] #2637 = #1832 #2636
[mk-proof] #2638 monotonicity #289 #2635 #2637
[mk-app] #2639 not #2636
[mk-app] #2640 = #1840 #2639
[mk-proof] #2641 monotonicity #2638 #2640
[attach-meaning] #176 arith (- 1)
[mk-app] #2642 + #780 #249
[mk-app] #2643 = #2642 #36
[inst-discovered] theory-solving 0x0 arith# ; #781
[mk-app] #2644 = #781 #2643
[mk-proof] #2645 rewrite #2644
[instance] 0x0 #2644
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2646 * #176 #784
[mk-app] #2647 + #783 #2646
[mk-app] #2648 = #2647 #36
[inst-discovered] theory-solving 0x0 arith# ; #785
[mk-app] #2649 = #785 #2648
[mk-proof] #2650 rewrite #2649
[instance] 0x0 #2649
[end-of-instance]
[mk-app] #2651 and #2643 #2648
[mk-app] #2652 = #786 #2651
[mk-proof] #2653 monotonicity #2645 #2650 #2652
[mk-app] #2654 or #2639 #2651
[mk-app] #2655 = #1841 #2654
[mk-proof] #2656 monotonicity #2641 #2653 #2655
[mk-quant] #2657 k!262 3 #788 #2654
[attach-var-names] #2657 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2658 null 3 #2656
[mk-proof] #2659 proof-bind #2658
[mk-app] #2660 = #1846 #2657
[mk-proof] #2661 quant-intro #2659 #2660
[mk-proof] #2662 mp #2247 #2661 #2657
[mk-app] #2663 and #792 #663 #2383
[mk-app] #2664 = #1858 #2663
[mk-proof] #2665 monotonicity #665 #2385 #2664
[mk-app] #2666 not #2663
[mk-app] #2667 = #1866 #2666
[mk-proof] #2668 monotonicity #2665 #2667
[attach-meaning] #176 arith (- 1)
[mk-app] #2669 + #851 #249
[mk-app] #2670 = #2669 #36
[inst-discovered] theory-solving 0x0 arith# ; #852
[mk-app] #2671 = #852 #2670
[mk-proof] #2672 rewrite #2671
[instance] 0x0 #2671
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2673 + #853 #2392
[mk-app] #2674 = #2673 #36
[inst-discovered] theory-solving 0x0 arith# ; #854
[mk-app] #2675 = #854 #2674
[mk-proof] #2676 rewrite #2675
[instance] 0x0 #2675
[end-of-instance]
[mk-app] #2677 and #2670 #2674
[mk-app] #2678 = #855 #2677
[mk-proof] #2679 monotonicity #2672 #2676 #2678
[mk-app] #2680 or #2666 #2677
[mk-app] #2681 = #1867 #2680
[mk-proof] #2682 monotonicity #2668 #2679 #2681
[mk-quant] #2683 k!270 3 #857 #2680
[attach-var-names] #2683 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2684 null 3 #2682
[mk-proof] #2685 proof-bind #2684
[mk-app] #2686 = #1872 #2683
[mk-proof] #2687 quant-intro #2685 #2686
[mk-proof] #2688 mp #2250 #2687 #2683
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #887
[instance] 0x0 #901
[end-of-instance]
[mk-app] #2689 = #1878 #903
[mk-proof] #2690 monotonicity #902 #2689
[mk-app] #2691 = #1884 #909
[mk-proof] #2692 monotonicity #2690 #2691
[mk-app] #2693 = #1885 #910
[mk-proof] #2694 monotonicity #2692 #2693
[mk-lambda] #2695 null 3 #2694
[mk-proof] #2696 proof-bind #2695
[mk-app] #2697 = #1890 #915
[mk-proof] #2698 quant-intro #2696 #2697
[mk-proof] #2699 mp #2253 #2698 #915
[mk-app] #2700 and #897 #937 #2410
[mk-app] #2701 = #1902 #2700
[mk-proof] #2702 monotonicity #939 #2412 #2701
[mk-app] #2703 not #2700
[mk-app] #2704 = #1910 #2703
[mk-proof] #2705 monotonicity #2702 #2704
[mk-app] #2706 and #2420 #927
[mk-app] #2707 = #928 #2706
[mk-proof] #2708 monotonicity #2422 #2707
[mk-app] #2709 or #2703 #2706
[mk-app] #2710 = #1911 #2709
[mk-proof] #2711 monotonicity #2705 #2708 #2710
[mk-quant] #2712 k!286 3 #893 #2709
[attach-var-names] #2712 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #2713 null 3 #2711
[mk-proof] #2714 proof-bind #2713
[mk-app] #2715 = #1916 #2712
[mk-proof] #2716 quant-intro #2714 #2715
[mk-proof] #2717 mp #2256 #2716 #2712
[mk-app] #2718 = #1925 #979
[mk-proof] #2719 monotonicity #2692 #2718
[mk-lambda] #2720 null 3 #2719
[mk-proof] #2721 proof-bind #2720
[mk-app] #2722 = #1930 #984
[mk-proof] #2723 quant-intro #2721 #2722
[mk-proof] #2724 mp #2259 #2723 #984
[mk-app] #2725 = #1936 #997
[mk-proof] #2726 monotonicity #939 #2725
[mk-app] #2727 = #1942 #1003
[mk-proof] #2728 monotonicity #2726 #2727
[mk-app] #2729 and #2420 #992
[mk-app] #2730 = #993 #2729
[mk-proof] #2731 monotonicity #2422 #2730
[mk-app] #2732 or #1003 #2729
[mk-app] #2733 = #1943 #2732
[mk-proof] #2734 monotonicity #2728 #2731 #2733
[mk-quant] #2735 k!300 3 #973 #2732
[attach-var-names] #2735 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #2736 null 3 #2734
[mk-proof] #2737 proof-bind #2736
[mk-app] #2738 = #1948 #2735
[mk-proof] #2739 quant-intro #2737 #2738
[mk-proof] #2740 mp #2262 #2739 #2735
[mk-proof] #2741 refl #2263
[mk-proof] #2741 refl #2266
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1043
[instance] 0x0 #1048
[end-of-instance]
[mk-app] #2741 = #1954 #424
[mk-proof] #2742 monotonicity #1049 #2741
[mk-app] #2743 = #1955 #1053
[mk-proof] #2744 monotonicity #2742 #2743
[mk-lambda] #2745 null 2 #2744
[mk-proof] #2746 proof-bind #2745
[mk-app] #2747 = #1958 #1058
[mk-proof] #2748 quant-intro #2746 #2747
[mk-proof] #2749 mp #2271 #2748 #1058
[mk-app] #2750 = #1964 #1071
[mk-proof] #2751 monotonicity #2742 #2750
[mk-lambda] #2752 null 2 #2751
[mk-proof] #2753 proof-bind #2752
[mk-app] #2754 = #1967 #1076
[mk-proof] #2755 quant-intro #2753 #2754
[mk-proof] #2756 mp #2274 #2755 #1076
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1084
[instance] 0x0 #1094
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1097
[instance] 0x0 #1104
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2757 + #1086 #249
[mk-app] #2758 = #2757 #36
[inst-discovered] theory-solving 0x0 arith# ; #1087
[mk-app] #2759 = #1087 #2758
[mk-proof] #2760 rewrite #2759
[instance] 0x0 #2759
[end-of-instance]
[mk-app] #2761 and #1095 #1106 #2758
[mk-app] #2762 = #1979 #2761
[mk-proof] #2763 monotonicity #1096 #1108 #2760 #2762
[mk-app] #2764 or #1125 #2761
[mk-app] #2765 = #1987 #2764
[mk-proof] #2766 monotonicity #2763 #2765
[mk-quant] #2767 k!326 2 #1091 #2764
[attach-var-names] #2767 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2768 null 2 #2766
[mk-proof] #2769 proof-bind #2768
[mk-app] #2770 = #1992 #2767
[mk-proof] #2771 quant-intro #2769 #2770
[mk-proof] #2772 mp #2277 #2771 #2767
[attach-meaning] #176 arith (- 1)
[mk-app] #2773 + #280 #795
[mk-app] #2774 = #2773 #36
[inst-discovered] theory-solving 0x0 arith# ; #1137
[mk-app] #2775 = #1137 #2774
[mk-proof] #2776 rewrite #2775
[instance] 0x0 #2775
[end-of-instance]
[mk-app] #2777 and #287 #2383 #2774
[mk-app] #2778 = #2004 #2777
[mk-proof] #2779 monotonicity #289 #2385 #2776 #2778
[mk-app] #2780 not #2777
[mk-app] #2781 = #2012 #2780
[mk-proof] #2782 monotonicity #2779 #2781
[mk-app] #2783 or #2780 #1140
[mk-app] #2784 = #2013 #2783
[mk-proof] #2785 monotonicity #2782 #2784
[mk-quant] #2786 k!332 3 #1142 #2783
[attach-var-names] #2786 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2787 null 3 #2785
[mk-proof] #2788 proof-bind #2787
[mk-app] #2789 = #2018 #2786
[mk-proof] #2790 quant-intro #2788 #2789
[mk-proof] #2791 mp #2280 #2790 #2786
[mk-app] #2792 and #287 #2443
[mk-app] #2793 = #1635 #2792
[mk-proof] #2794 monotonicity #289 #2445 #2793
[mk-app] #2795 not #2792
[mk-app] #2796 = #2027 #2795
[mk-proof] #2797 monotonicity #2794 #2796
[mk-app] #2798 or #2795 #1171
[mk-app] #2799 = #2028 #2798
[mk-proof] #2800 monotonicity #2797 #2799
[mk-quant] #2801 k!338 2 #1173 #2798
[attach-var-names] #2801 (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2802 null 2 #2800
[mk-proof] #2803 proof-bind #2802
[mk-app] #2804 = #2033 #2801
[mk-proof] #2805 quant-intro #2803 #2804
[mk-proof] #2806 mp #2283 #2805 #2801
[attach-meaning] #176 arith (- 1)
[mk-app] #2807 + #163 #2319
[mk-app] #2808 = #2807 #36
[inst-discovered] theory-solving 0x0 arith# ; #1196
[mk-app] #2809 = #1196 #2808
[mk-proof] #2810 rewrite #2809
[instance] 0x0 #2809
[end-of-instance]
[mk-app] #2811 not #2808
[mk-app] #2812 = #1197 #2811
[mk-proof] #2813 monotonicity #2810 #2812
[mk-app] #2814 and #1194 #1195 #2811
[mk-app] #2815 = #1220 #2814
[mk-proof] #2816 monotonicity #2813 #2815
[attach-meaning] #176 arith (- 1)
[mk-app] #2817 * #176 #1201
[mk-app] #2818 + #1200 #2817
[mk-app] #2819 = #2818 #36
[inst-discovered] theory-solving 0x0 arith# ; #1202
[mk-app] #2820 = #1202 #2819
[mk-proof] #2821 rewrite #2820
[instance] 0x0 #2820
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1203
[instance] 0x0 #1223
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #1226
[instance] 0x0 #1233
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2822 * #176 #1206
[mk-app] #2823 + #1205 #2822
[mk-app] #2824 = #2823 #36
[inst-discovered] theory-solving 0x0 arith# ; #1207
[mk-app] #2825 = #1207 #2824
[mk-proof] #2826 rewrite #2825
[instance] 0x0 #2825
[end-of-instance]
[mk-app] #2827 not #2824
[mk-app] #2828 = #1208 #2827
[mk-proof] #2829 monotonicity #2826 #2828
[mk-app] #2830 and #1194 #1195 #2808 #2819 #1224 #1235 #2827
[mk-app] #2831 = #2077 #2830
[mk-proof] #2832 monotonicity #2810 #2821 #1225 #1237 #2829 #2831
[mk-app] #2833 or #1193 #2814 #2830
[mk-app] #2834 = #2088 #2833
[mk-proof] #2835 monotonicity #2816 #2832 #2834
[mk-quant] #2836 k!363 2 #1217 #2833
[attach-var-names] #2836 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2837 null 2 #2835
[mk-proof] #2838 proof-bind #2837
[mk-app] #2839 = #2093 #2836
[mk-proof] #2840 quant-intro #2838 #2839
[mk-proof] #2841 mp #2286 #2840 #2836
[mk-proof] #2842 refl #2287
[attach-meaning] #176 arith (- 1)
[mk-app] #2842 = #250 #36
[inst-discovered] theory-solving 0x0 arith# ; #1314
[mk-app] #2843 = #1314 #2842
[mk-proof] #2844 rewrite #2843
[instance] 0x0 #2843
[end-of-instance]
[mk-app] #2845 = #1313 #2842
[mk-app] #2846 = #1315 #2845
[mk-proof] #2847 monotonicity #2844 #2846
[mk-quant] #2848 k!371 2 #1316 #2845
[attach-var-names] #2848 (|y| ; |Int|) (|x| ; |Int|)
[mk-lambda] #2849 null 2 #2847
[mk-proof] #2850 proof-bind #2849
[mk-app] #2851 = #1317 #2848
[mk-proof] #2852 quant-intro #2850 #2851
[mk-proof] #2853 mp #2292 #2852 #2848
[attach-meaning] #176 arith (- 1)
[mk-app] #2854 <= #1343 #36
[inst-discovered] theory-solving 0x0 arith# ; #1325
[mk-app] #2855 = #1325 #2854
[mk-proof] #2856 rewrite #2855
[instance] 0x0 #2855
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[mk-app] #2857 + #1321 #249 #32
[mk-app] #2858 = #2857 #36
[inst-discovered] theory-solving 0x0 arith# ; #2099
[mk-app] #2859 = #2099 #2858
[mk-proof] #2860 rewrite #2859
[instance] 0x0 #2859
[end-of-instance]
[mk-app] #2861 or #2854 #2858
[mk-app] #2862 = #2105 #2861
[mk-proof] #2863 monotonicity #2856 #2860 #2862
[mk-app] #2864 not #2854
[mk-app] #2865 = #1332 #2864
[mk-proof] #2866 monotonicity #2856 #2865
[mk-app] #2867 or #2864 #1326
[mk-app] #2868 = #2110 #2867
[mk-proof] #2869 monotonicity #2866 #2868
[mk-app] #2870 and #2861 #2867
[mk-app] #2871 = #2113 #2870
[mk-proof] #2872 monotonicity #2863 #2869 #2871
[mk-quant] #2873 $Seq[Int]_prog.ranged_seq_length 2 #1329 #2870
[attach-var-names] #2873 (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2874 null 2 #2872
[mk-proof] #2875 proof-bind #2874
[mk-app] #2876 = #2116 #2873
[mk-proof] #2877 quant-intro #2875 #2876
[mk-proof] #2878 mp #2295 #2877 #2873
[attach-meaning] #176 arith (- 1)
[mk-app] #2879 + #32 #1396 #249
[mk-app] #2880 <= #2879 #36
[inst-discovered] theory-solving 0x0 arith# ; #1403
[mk-app] #2881 = #1403 #2880
[mk-proof] #2882 rewrite #2881
[instance] 0x0 #2881
[end-of-instance]
[mk-app] #2883 not #2880
[mk-app] #2884 = #1404 #2883
[mk-proof] #2885 monotonicity #2882 #2884
[mk-app] #2886 and #287 #2883
[mk-app] #2887 = #2122 #2886
[mk-proof] #2888 monotonicity #289 #2885 #2887
[mk-app] #2889 not #2886
[mk-app] #2890 = #2128 #2889
[mk-proof] #2891 monotonicity #2888 #2890
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[mk-app] #2892 + #1389 #1396 #249
[mk-app] #2893 = #2892 #36
[inst-discovered] theory-solving 0x0 arith# ; #1391
[mk-app] #2894 = #1391 #2893
[mk-proof] #2895 rewrite #2894
[instance] 0x0 #2894
[end-of-instance]
[mk-app] #2896 or #2889 #2893
[mk-app] #2897 = #2129 #2896
[mk-proof] #2898 monotonicity #2891 #2895 #2897
[mk-quant] #2899 $Seq[Int]_prog.ranged_seq_index 3 #1393 #2896
[attach-var-names] #2899 (|j| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2900 null 3 #2898
[mk-proof] #2901 proof-bind #2900
[mk-app] #2902 = #2134 #2899
[mk-proof] #2903 quant-intro #2901 #2902
[mk-proof] #2904 mp #2298 #2903 #2899
[attach-meaning] #176 arith (- 1)
[mk-app] #2905 <= #2511 #36
[inst-discovered] theory-solving 0x0 arith# ; #1450
[mk-app] #2906 = #1450 #2905
[mk-proof] #2907 rewrite #2906
[instance] 0x0 #2906
[end-of-instance]
[mk-app] #2908 and #2905 #666
[mk-app] #2909 = #2140 #2908
[mk-proof] #2910 monotonicity #2907 #668 #2909
[mk-app] #2911 = #1449 #2908
[mk-app] #2912 = #2143 #2911
[mk-proof] #2913 monotonicity #2910 #2912
[mk-quant] #2914 $Seq[Int]_prog.ranged_seq_contains 3 #1453 #2911
[attach-var-names] #2914 (|v| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2915 null 3 #2913
[mk-proof] #2916 proof-bind #2915
[mk-app] #2917 = #2146 #2914
[mk-proof] #2918 quant-intro #2916 #2917
[mk-proof] #2919 mp #2301 #2918 #2914
[attach-meaning] #176 arith (- 1)
[mk-app] #2920 + #1474 #249
[mk-app] #2921 = #2920 #36
[inst-discovered] theory-solving 0x0 arith# ; #1475
[mk-app] #2922 = #1475 #2921
[mk-proof] #2923 rewrite #2922
[instance] 0x0 #2922
[end-of-instance]
[mk-quant] #2924 prog.inj 2 #1476 #2921
[attach-var-names] #2924 (|i| ; |Int|) (|a| ; |$Ref|)
[mk-lambda] #2925 null 2 #2923
[mk-proof] #2926 proof-bind #2925
[mk-app] #2927 = #1477 #2924
[mk-proof] #2928 quant-intro #2926 #2927
[mk-proof] #2929 mp #2304 #2928 #2924
[mk-proof] #2930 refl #2305
[attach-meaning] #1527 arith (- 4)
[mk-app] #2930 * #1527 #32
[mk-app] #2931 * #1507 #33
[mk-app] #2932 + #1503 #1513 #2930 #2931
[mk-app] #2933 = #2932 #36
[inst-discovered] theory-solving 0x0 arith# ; #1536
[mk-app] #2934 = #1536 #2933
[mk-proof] #2935 rewrite #2934
[instance] 0x0 #2934
[end-of-instance]
[mk-quant] #2936 prog.addr 3 #1510 #2933
[attach-var-names] #2936 (|j| ; |Int|) (|i| ; |Int|) (|a| ; |$Ref|)
[mk-lambda] #2937 null 3 #2935
[mk-proof] #2938 proof-bind #2937
[mk-app] #2939 = #2152 #2936
[mk-proof] #2940 quant-intro #2938 #2939
[mk-proof] #2941 mp #2310 #2940 #2936
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-app] #2942 = #2350 #2350
[mk-proof] #2943 refl #2942
[mk-proof] #2942 refl #2161
[mk-proof] #2942 refl #2164
[mk-proof] #2942 refl #2167
[mk-proof] #2942 refl #2170
[mk-proof] #2942 refl #2173
[mk-app] #2942 = #2358 #2358
[mk-proof] #2943 refl #2942
[mk-proof] #2942 refl #2179
[mk-proof] #2942 refl #2182
[mk-proof] #2942 refl #2185
[mk-proof] #2942 refl #2188
[mk-proof] #2942 refl #2191
[mk-app] #2942 = #124 #124
[mk-proof] #2943 refl #2942
[mk-proof] #2942 refl #2197
[mk-proof] #2942 refl #2200
[mk-proof] #2942 refl #2203
[mk-app] #2942 + #2319 #162 #420
[inst-discovered] theory-solving 0x0 arith# ; #2320
[mk-app] #2943 = #2320 #2942
[mk-proof] #2944 rewrite #2943
[instance] 0x0 #2943
[end-of-instance]
[mk-app] #2945 = #2942 #36
[mk-app] #2946 = #2379 #2945
[mk-proof] #2947 monotonicity #2944 #2946
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #2945
[mk-app] #2948 = #2945 #177
[mk-proof] #2949 rewrite #2948
[instance] 0x0 #2948
[end-of-instance]
[mk-app] #2950 = #2379 #177
[mk-proof] #2951 trans #2947 #2949 #2950
[mk-app] #2952 = #2322 #188
[mk-proof] #2953 monotonicity #2951 #2952
[mk-lambda] #2954 null 2 #2953
[mk-proof] #2955 proof-bind #2954
[mk-app] #2956 = #2327 #193
[mk-proof] #2957 quant-intro #2955 #2956
[mk-proof] #2958 mp #2332 #2957 #193
[mk-proof] #2959 refl #2209
[mk-app] #2959 + #249 #222
[inst-discovered] theory-solving 0x0 arith# ; #2333
[mk-app] #2960 = #2333 #2959
[mk-proof] #2961 rewrite #2960
[instance] 0x0 #2960
[end-of-instance]
[mk-app] #2962 = #2959 #36
[mk-app] #2963 = #2334 #2962
[mk-proof] #2964 monotonicity #2961 #2963
[attach-meaning] #176 arith (- 1)
[mk-app] #2965 * #176 #222
[mk-app] #2966 + #33 #2965
[mk-app] #2967 = #2966 #36
[inst-discovered] theory-solving 0x0 arith# ; #2962
[mk-app] #2968 = #2962 #2967
[mk-proof] #2969 rewrite #2968
[instance] 0x0 #2968
[end-of-instance]
[mk-app] #2970 = #2334 #2967
[mk-proof] #2971 trans #2964 #2969 #2970
[mk-quant] #2972 k!160 1 #153 #2967
[attach-var-names] #2972 (|e| ; |Int|)
[mk-lambda] #2973 null 1 #2971
[mk-proof] #2974 proof-bind #2973
[mk-app] #2975 = #2367 #2972
[mk-proof] #2976 quant-intro #2974 #2975
[mk-proof] #2977 mp #2366 #2976 #2972
[mk-app] #2978 + #795 #249 #226
[inst-discovered] theory-solving 0x0 arith# ; #2369
[mk-app] #2979 = #2369 #2978
[mk-proof] #2980 rewrite #2979
[instance] 0x0 #2979
[end-of-instance]
[mk-app] #2981 = #2978 #36
[mk-app] #2982 = #2370 #2981
[mk-proof] #2983 monotonicity #2980 #2982
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #2981
[mk-app] #2984 = #2981 #232
[mk-proof] #2985 rewrite #2984
[instance] 0x0 #2984
[end-of-instance]
[mk-app] #2986 = #2370 #232
[mk-proof] #2987 trans #2983 #2985 #2986
[mk-lambda] #2988 null 2 #2987
[mk-proof] #2989 proof-bind #2988
[mk-app] #2990 = #2311 #237
[mk-proof] #2991 quant-intro #2989 #2990
[mk-proof] #2992 mp #2342 #2991 #237
[mk-app] #2993 + #795 #33 #243
[inst-discovered] theory-solving 0x0 arith# ; #2343
[mk-app] #2994 = #2343 #2993
[mk-proof] #2995 rewrite #2994
[instance] 0x0 #2994
[end-of-instance]
[mk-app] #2996 = #2993 #36
[mk-app] #2997 = #2344 #2996
[mk-proof] #2998 monotonicity #2995 #2997
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #2996
[mk-app] #2999 = #2996 #256
[mk-proof] #3000 rewrite #2999
[instance] 0x0 #2999
[end-of-instance]
[mk-app] #3001 = #2344 #256
[mk-proof] #3002 trans #2998 #3000 #3001
[mk-lambda] #3003 null 2 #3002
[mk-proof] #3004 proof-bind #3003
[mk-app] #3005 = #2313 #263
[mk-proof] #3006 quant-intro #3004 #3005
[mk-proof] #3007 mp #2316 #3006 #263
[mk-app] #3008 + #249 #273
[inst-discovered] theory-solving 0x0 arith# ; #2345
[mk-app] #3009 = #2345 #3008
[mk-proof] #3010 rewrite #3009
[instance] 0x0 #3009
[end-of-instance]
[mk-app] #3011 <= #3008 #36
[mk-app] #3012 = #2346 #3011
[mk-proof] #3013 monotonicity #3010 #3012
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3011
[mk-app] #3014 = #3011 #294
[mk-proof] #3015 rewrite #3014
[instance] 0x0 #3014
[end-of-instance]
[mk-app] #3016 = #2346 #294
[mk-proof] #3017 trans #3013 #3015 #3016
[mk-app] #3018 = #2383 #299
[mk-proof] #3019 monotonicity #3017 #3018
[mk-app] #3020 = #2386 #318
[mk-proof] #3021 monotonicity #3019 #3020
[mk-app] #3022 = #2389 #326
[mk-proof] #3023 monotonicity #3021 #3022
[mk-app] #3024 or #326 #2394
[mk-app] #3025 = #2397 #3024
[mk-proof] #3026 monotonicity #3023 #3025
[mk-quant] #3027 k!179 3 #283 #284 #3024
[attach-var-names] #3027 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #3028 null 3 #3026
[mk-proof] #3029 proof-bind #3028
[mk-app] #3030 = #2400 #3027
[mk-proof] #3031 quant-intro #3029 #3030
[mk-proof] #3032 mp #2405 #3031 #3027
[mk-app] #3033 + #249 #338
[inst-discovered] theory-solving 0x0 arith# ; #2406
[mk-app] #3034 = #2406 #3033
[mk-proof] #3035 rewrite #3034
[instance] 0x0 #3034
[end-of-instance]
[mk-app] #3036 <= #3033 #36
[mk-app] #3037 = #2407 #3036
[mk-proof] #3038 monotonicity #3035 #3037
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3036
[mk-app] #3039 = #3036 #356
[mk-proof] #3040 rewrite #3039
[instance] 0x0 #3039
[end-of-instance]
[mk-app] #3041 = #2407 #356
[mk-proof] #3042 trans #3038 #3040 #3041
[mk-app] #3043 = #2410 #361
[mk-proof] #3044 monotonicity #3042 #3043
[mk-app] #3045 = #2413 #380
[mk-proof] #3046 monotonicity #3017 #3044 #3045
[mk-app] #3047 = #2416 #388
[mk-proof] #3048 monotonicity #3046 #3047
[mk-app] #3049 + #249 #344
[inst-discovered] theory-solving 0x0 arith# ; #2419
[mk-app] #3050 = #2419 #3049
[mk-proof] #3051 rewrite #3050
[instance] 0x0 #3050
[end-of-instance]
[mk-app] #3052 = #3049 #36
[mk-app] #3053 = #2420 #3052
[mk-proof] #3054 monotonicity #3051 #3053
[attach-meaning] #176 arith (- 1)
[mk-app] #3055 * #176 #344
[mk-app] #3056 + #33 #3055
[mk-app] #3057 = #3056 #36
[inst-discovered] theory-solving 0x0 arith# ; #3052
[mk-app] #3058 = #3052 #3057
[mk-proof] #3059 rewrite #3058
[instance] 0x0 #3058
[end-of-instance]
[mk-app] #3060 = #2420 #3057
[mk-proof] #3061 trans #3054 #3059 #3060
[mk-app] #3062 and #3057 #2425
[mk-app] #3063 = #2428 #3062
[mk-proof] #3064 monotonicity #3061 #3063
[mk-app] #3065 or #388 #3062
[mk-app] #3066 = #2431 #3065
[mk-proof] #3067 monotonicity #3048 #3064 #3066
[mk-quant] #3068 k!193 3 #283 #3065
[attach-var-names] #3068 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #3069 null 3 #3067
[mk-proof] #3070 proof-bind #3069
[mk-app] #3071 = #2434 #3068
[mk-proof] #3072 quant-intro #3070 #3071
[mk-proof] #3073 mp #2439 #3072 #3068
[inst-discovered] theory-solving 0x0 arith# ; #713
[instance] 0x0 #717
[end-of-instance]
[mk-app] #3074 <= #716 #36
[mk-app] #3075 = #2440 #3074
[mk-proof] #3076 monotonicity #718 #3075
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3074
[mk-app] #3077 = #3074 #419
[mk-proof] #3078 rewrite #3077
[instance] 0x0 #3077
[end-of-instance]
[mk-app] #3079 = #2440 #419
[mk-proof] #3080 trans #3076 #3078 #3079
[mk-app] #3081 = #2443 #424
[mk-proof] #3082 monotonicity #3080 #3081
[mk-app] #3083 = #2446 #443
[mk-proof] #3084 monotonicity #3082 #3083
[mk-app] #3085 = #2449 #451
[mk-proof] #3086 monotonicity #3084 #3085
[mk-app] #3087 + #249 #405
[inst-discovered] theory-solving 0x0 arith# ; #2452
[mk-app] #3088 = #2452 #3087
[mk-proof] #3089 rewrite #3088
[instance] 0x0 #3088
[end-of-instance]
[mk-app] #3090 = #3087 #36
[mk-app] #3091 = #2453 #3090
[mk-proof] #3092 monotonicity #3089 #3091
[attach-meaning] #176 arith (- 1)
[mk-app] #3093 * #176 #405
[mk-app] #3094 + #33 #3093
[mk-app] #3095 = #3094 #36
[inst-discovered] theory-solving 0x0 arith# ; #3090
[mk-app] #3096 = #3090 #3095
[mk-proof] #3097 rewrite #3096
[instance] 0x0 #3096
[end-of-instance]
[mk-app] #3098 = #2453 #3095
[mk-proof] #3099 trans #3092 #3097 #3098
[mk-app] #3100 and #3095 #2458
[mk-app] #3101 = #2461 #3100
[mk-proof] #3102 monotonicity #3099 #3101
[mk-app] #3103 or #451 #3100
[mk-app] #3104 = #2464 #3103
[mk-proof] #3105 monotonicity #3086 #3102 #3104
[mk-quant] #3106 k!207 3 #412 #3103
[attach-var-names] #3106 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #3107 null 3 #3105
[mk-proof] #3108 proof-bind #3107
[mk-app] #3109 = #2467 #3106
[mk-proof] #3110 quant-intro #3108 #3109
[mk-proof] #3111 mp #2472 #3110 #3106
[inst-discovered] theory-solving 0x0 arith# ; #796
[instance] 0x0 #800
[end-of-instance]
[mk-app] #3112 <= #799 #36
[mk-app] #3113 = #2473 #3112
[mk-proof] #3114 monotonicity #801 #3113
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3112
[mk-app] #3115 = #3112 #481
[mk-proof] #3116 rewrite #3115
[instance] 0x0 #3115
[end-of-instance]
[mk-app] #3117 = #2473 #481
[mk-proof] #3118 trans #3114 #3116 #3117
[mk-app] #3119 = #2476 #485
[mk-proof] #3120 monotonicity #3118 #3119
[mk-app] #3121 = #2479 #490
[mk-proof] #3122 monotonicity #3120 #3121
[mk-app] #3123 = #2482 #496
[mk-proof] #3124 monotonicity #3122 #3123
[mk-app] #3125 + #295 #467
[inst-discovered] theory-solving 0x0 arith# ; #2485
[mk-app] #3126 = #2485 #3125
[mk-proof] #3127 rewrite #3126
[instance] 0x0 #3126
[end-of-instance]
[mk-app] #3128 = #3125 #36
[mk-app] #3129 = #2486 #3128
[mk-proof] #3130 monotonicity #3127 #3129
[attach-meaning] #176 arith (- 1)
[mk-app] #3131 * #176 #467
[mk-app] #3132 + #273 #3131
[mk-app] #3133 = #3132 #36
[inst-discovered] theory-solving 0x0 arith# ; #3128
[mk-app] #3134 = #3128 #3133
[mk-proof] #3135 rewrite #3134
[instance] 0x0 #3134
[end-of-instance]
[mk-app] #3136 = #2486 #3133
[mk-proof] #3137 trans #3130 #3135 #3136
[mk-app] #3138 or #496 #3133
[mk-app] #3139 = #2489 #3138
[mk-proof] #3140 monotonicity #3124 #3137 #3139
[mk-quant] #3141 k!214 3 #470 #471 #3138
[attach-var-names] #3141 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3142 null 3 #3140
[mk-proof] #3143 proof-bind #3142
[mk-app] #3144 = #2492 #3141
[mk-proof] #3145 quant-intro #3143 #3144
[mk-proof] #3146 mp #2497 #3145 #3141
[mk-app] #3147 + #249 #510
[inst-discovered] theory-solving 0x0 arith# ; #2498
[mk-app] #3148 = #2498 #3147
[mk-proof] #3149 rewrite #3148
[instance] 0x0 #3148
[end-of-instance]
[mk-app] #3150 <= #3147 #36
[mk-app] #3151 = #2499 #3150
[mk-proof] #3152 monotonicity #3149 #3151
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3150
[mk-app] #3153 = #3150 #532
[mk-proof] #3154 rewrite #3153
[instance] 0x0 #3153
[end-of-instance]
[mk-app] #3155 = #2499 #532
[mk-proof] #3156 trans #3152 #3154 #3155
[mk-app] #3157 = #2502 #537
[mk-proof] #3158 monotonicity #3156 #3157
[mk-app] #3159 = #2505 #542
[mk-proof] #3160 monotonicity #3158 #3159
[mk-app] #3161 = #2508 #557
[mk-proof] #3162 monotonicity #3160 #3161
[mk-app] #3163 + #249 #509
[inst-discovered] theory-solving 0x0 arith# ; #2511
[mk-app] #3164 = #2511 #3163
[mk-proof] #3165 rewrite #3164
[instance] 0x0 #3164
[end-of-instance]
[mk-app] #3166 = #3163 #36
[mk-app] #3167 = #2512 #3166
[mk-proof] #3168 monotonicity #3165 #3167
[attach-meaning] #176 arith (- 1)
[mk-app] #3169 = #1457 #36
[inst-discovered] theory-solving 0x0 arith# ; #3166
[mk-app] #3170 = #3166 #3169
[mk-proof] #3171 rewrite #3170
[instance] 0x0 #3170
[end-of-instance]
[mk-app] #3172 = #2512 #3169
[mk-proof] #3173 trans #3168 #3171 #3172
[mk-app] #3174 not #3169
[mk-app] #3175 = #2515 #3174
[mk-proof] #3176 monotonicity #3173 #3175
[mk-app] #3177 + #795 #515
[inst-discovered] theory-solving 0x0 arith# ; #2518
[mk-app] #3178 = #2518 #3177
[mk-proof] #3179 rewrite #3178
[instance] 0x0 #3178
[end-of-instance]
[mk-app] #3180 = #3177 #36
[mk-app] #3181 = #2519 #3180
[mk-proof] #3182 monotonicity #3179 #3181
[attach-meaning] #176 arith (- 1)
[mk-app] #3183 * #176 #515
[mk-app] #3184 + #32 #3183
[mk-app] #3185 = #3184 #36
[inst-discovered] theory-solving 0x0 arith# ; #3180
[mk-app] #3186 = #3180 #3185
[mk-proof] #3187 rewrite #3186
[instance] 0x0 #3186
[end-of-instance]
[mk-app] #3188 = #2519 #3185
[mk-proof] #3189 trans #3182 #3187 #3188
[mk-app] #3190 or #3174 #3185
[mk-app] #3191 = #2522 #3190
[mk-proof] #3192 monotonicity #3176 #3189 #3191
[mk-app] #3193 or #3169 #2527
[mk-app] #3194 = #2530 #3193
[mk-proof] #3195 monotonicity #3173 #3194
[mk-app] #3196 and #3190 #3193
[mk-app] #3197 = #2533 #3196
[mk-proof] #3198 monotonicity #3192 #3195 #3197
[mk-app] #3199 or #557 #3196
[mk-app] #3200 = #2536 #3199
[mk-proof] #3201 monotonicity #3162 #3198 #3200
[mk-quant] #3202 k!223 4 #524 #525 #3199
[attach-var-names] #3202 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3203 null 4 #3201
[mk-proof] #3204 proof-bind #3203
[mk-app] #3205 = #2539 #3202
[mk-proof] #3206 quant-intro #3204 #3205
[mk-proof] #3207 mp #2544 #3206 #3202
[mk-app] #3208 + #249 #571
[inst-discovered] theory-solving 0x0 arith# ; #2545
[mk-app] #3209 = #2545 #3208
[mk-proof] #3210 rewrite #3209
[instance] 0x0 #3209
[end-of-instance]
[mk-app] #3211 = #3208 #36
[mk-app] #3212 = #2546 #3211
[mk-proof] #3213 monotonicity #3210 #3212
[attach-meaning] #176 arith (- 1)
[mk-app] #3214 * #176 #571
[mk-app] #3215 + #33 #3214
[mk-app] #3216 = #3215 #36
[inst-discovered] theory-solving 0x0 arith# ; #3211
[mk-app] #3217 = #3211 #3216
[mk-proof] #3218 rewrite #3217
[instance] 0x0 #3217
[end-of-instance]
[mk-app] #3219 = #2546 #3216
[mk-proof] #3220 trans #3213 #3218 #3219
[mk-app] #3221 or #592 #3216
[mk-app] #3222 = #2549 #3221
[mk-proof] #3223 monotonicity #3220 #3222
[mk-app] #3224 + #420 #571
[inst-discovered] theory-solving 0x0 arith# ; #2552
[mk-app] #3225 = #2552 #3224
[mk-proof] #3226 rewrite #3225
[instance] 0x0 #3225
[end-of-instance]
[mk-app] #3227 = #3224 #36
[mk-app] #3228 = #2553 #3227
[mk-proof] #3229 monotonicity #3226 #3228
[attach-meaning] #176 arith (- 1)
[mk-app] #3230 + #163 #3214
[mk-app] #3231 = #3230 #36
[inst-discovered] theory-solving 0x0 arith# ; #3227
[mk-app] #3232 = #3227 #3231
[mk-proof] #3233 rewrite #3232
[instance] 0x0 #3232
[end-of-instance]
[mk-app] #3234 = #2553 #3231
[mk-proof] #3235 trans #3229 #3233 #3234
[mk-app] #3236 or #586 #3231
[mk-app] #3237 = #2556 #3236
[mk-proof] #3238 monotonicity #3235 #3237
[mk-app] #3239 and #3221 #3236
[mk-app] #3240 = #2559 #3239
[mk-proof] #3241 monotonicity #3223 #3238 #3240
[mk-app] #3242 or #619 #3239
[mk-app] #3243 = #2562 #3242
[mk-proof] #3244 monotonicity #3241 #3243
[mk-app] #3245 and #3242 #635
[mk-app] #3246 = #2567 #3245
[mk-proof] #3247 monotonicity #3244 #3246
[mk-quant] #3248 k!234 2 #582 #583 #3245
[attach-var-names] #3248 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3249 null 2 #3247
[mk-proof] #3250 proof-bind #3249
[mk-app] #3251 = #2570 #3248
[mk-proof] #3252 quant-intro #3250 #3251
[mk-proof] #3253 mp #2575 #3252 #3248
[mk-app] #3254 = #2576 #677
[mk-proof] #3255 monotonicity #3019 #3254
[mk-app] #3256 = #2579 #685
[mk-proof] #3257 monotonicity #3255 #3256
[mk-app] #3258 + #2392 #653
[inst-discovered] theory-solving 0x0 arith# ; #2582
[mk-app] #3259 = #2582 #3258
[mk-proof] #3260 rewrite #3259
[instance] 0x0 #3259
[end-of-instance]
[mk-app] #3261 = #3258 #36
[mk-app] #3262 = #2583 #3261
[mk-proof] #3263 monotonicity #3260 #3262
[attach-meaning] #176 arith (- 1)
[mk-app] #3264 * #176 #653
[mk-app] #3265 + #280 #3264
[mk-app] #3266 = #3265 #36
[inst-discovered] theory-solving 0x0 arith# ; #3261
[mk-app] #3267 = #3261 #3266
[mk-proof] #3268 rewrite #3267
[instance] 0x0 #3267
[end-of-instance]
[mk-app] #3269 = #2583 #3266
[mk-proof] #3270 trans #3263 #3268 #3269
[mk-app] #3271 or #685 #3266
[mk-app] #3272 = #2586 #3271
[mk-proof] #3273 monotonicity #3257 #3270 #3272
[mk-quant] #3274 k!241 3 #656 #657 #3271
[attach-var-names] #3274 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3275 null 3 #3273
[mk-proof] #3276 proof-bind #3275
[mk-app] #3277 = #2589 #3274
[mk-proof] #3278 quant-intro #3276 #3277
[mk-proof] #3279 mp #2594 #3278 #3274
[inst-discovered] theory-solving 0x0 arith# ; #2595
[mk-app] #3280 = #2595 #724
[mk-proof] #3281 rewrite #3280
[instance] 0x0 #3280
[end-of-instance]
[mk-app] #3282 = #2596 #725
[mk-proof] #3283 monotonicity #3281 #3282
[mk-app] #3284 = #2599 #733
[mk-proof] #3285 monotonicity #3283 #3284
[inst-discovered] theory-solving 0x0 basic# ; #741
[instance] 0x0 #2604
[end-of-instance]
[mk-app] #3286 = #2607 #746
[mk-proof] #3287 monotonicity #3285 #2605 #3286
[mk-app] #3288 = #2610 #752
[mk-proof] #3289 monotonicity #3287 #3288
[mk-app] #3290 + #420 #698
[inst-discovered] theory-solving 0x0 arith# ; #2613
[mk-app] #3291 = #2613 #3290
[mk-proof] #3292 rewrite #3291
[instance] 0x0 #3291
[end-of-instance]
[mk-app] #3293 = #3290 #36
[mk-app] #3294 = #2614 #3293
[mk-proof] #3295 monotonicity #3292 #3294
[attach-meaning] #176 arith (- 1)
[mk-app] #3296 * #176 #698
[mk-app] #3297 + #163 #3296
[mk-app] #3298 = #3297 #36
[inst-discovered] theory-solving 0x0 arith# ; #3293
[mk-app] #3299 = #3293 #3298
[mk-proof] #3300 rewrite #3299
[instance] 0x0 #3299
[end-of-instance]
[mk-app] #3301 = #2614 #3298
[mk-proof] #3302 trans #3295 #3300 #3301
[mk-app] #3303 or #287 #3298
[mk-app] #3304 = #2617 #3303
[mk-proof] #3305 monotonicity #3302 #3304
[mk-app] #3306 and #752 #3303
[mk-app] #3307 = #2620 #3306
[mk-proof] #3308 monotonicity #3289 #3305 #3307
[mk-quant] #3309 k!254 2 #709 #710 #3306
[attach-var-names] #3309 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3310 null 2 #3308
[mk-proof] #3311 proof-bind #3310
[mk-app] #3312 = #2623 #3309
[mk-proof] #3313 quant-intro #3311 #3312
[mk-proof] #3314 mp #2628 #3313 #3309
[mk-app] #3315 + #795 #249 #273
[inst-discovered] theory-solving 0x0 arith# ; #2629
[mk-app] #3316 = #2629 #3315
[mk-proof] #3317 rewrite #3316
[instance] 0x0 #3316
[end-of-instance]
[mk-app] #3318 <= #3315 #36
[mk-app] #3319 = #2630 #3318
[mk-proof] #3320 monotonicity #3317 #3319
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3318
[mk-app] #3321 = #3318 #813
[mk-proof] #3322 rewrite #3321
[instance] 0x0 #3321
[end-of-instance]
[mk-app] #3323 = #2630 #813
[mk-proof] #3324 trans #3320 #3322 #3323
[mk-app] #3325 = #2633 #817
[mk-proof] #3326 monotonicity #3324 #3325
[mk-app] #3327 = #2636 #828
[mk-proof] #3328 monotonicity #3326 #3327
[mk-app] #3329 = #2639 #836
[mk-proof] #3330 monotonicity #3328 #3329
[mk-app] #3331 + #249 #780
[inst-discovered] theory-solving 0x0 arith# ; #2642
[mk-app] #3332 = #2642 #3331
[mk-proof] #3333 rewrite #3332
[instance] 0x0 #3332
[end-of-instance]
[mk-app] #3334 = #3331 #36
[mk-app] #3335 = #2643 #3334
[mk-proof] #3336 monotonicity #3333 #3335
[attach-meaning] #176 arith (- 1)
[mk-app] #3337 * #176 #780
[mk-app] #3338 + #33 #3337
[mk-app] #3339 = #3338 #36
[inst-discovered] theory-solving 0x0 arith# ; #3334
[mk-app] #3340 = #3334 #3339
[mk-proof] #3341 rewrite #3340
[instance] 0x0 #3340
[end-of-instance]
[mk-app] #3342 = #2643 #3339
[mk-proof] #3343 trans #3336 #3341 #3342
[mk-app] #3344 and #3339 #2648
[mk-app] #3345 = #2651 #3344
[mk-proof] #3346 monotonicity #3343 #3345
[mk-app] #3347 or #836 #3344
[mk-app] #3348 = #2654 #3347
[mk-proof] #3349 monotonicity #3330 #3346 #3348
[mk-quant] #3350 k!262 3 #788 #3347
[attach-var-names] #3350 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3351 null 3 #3349
[mk-proof] #3352 proof-bind #3351
[mk-app] #3353 = #2657 #3350
[mk-proof] #3354 quant-intro #3352 #3353
[mk-proof] #3355 mp #2662 #3354 #3350
[mk-app] #3356 = #2663 #866
[mk-proof] #3357 monotonicity #3019 #3356
[mk-app] #3358 = #2666 #874
[mk-proof] #3359 monotonicity #3357 #3358
[mk-app] #3360 + #249 #851
[inst-discovered] theory-solving 0x0 arith# ; #2669
[mk-app] #3361 = #2669 #3360
[mk-proof] #3362 rewrite #3361
[instance] 0x0 #3361
[end-of-instance]
[mk-app] #3363 = #3360 #36
[mk-app] #3364 = #2670 #3363
[mk-proof] #3365 monotonicity #3362 #3364
[attach-meaning] #176 arith (- 1)
[mk-app] #3366 * #176 #851
[mk-app] #3367 + #33 #3366
[mk-app] #3368 = #3367 #36
[inst-discovered] theory-solving 0x0 arith# ; #3363
[mk-app] #3369 = #3363 #3368
[mk-proof] #3370 rewrite #3369
[instance] 0x0 #3369
[end-of-instance]
[mk-app] #3371 = #2670 #3368
[mk-proof] #3372 trans #3365 #3370 #3371
[mk-app] #3373 + #2392 #853
[inst-discovered] theory-solving 0x0 arith# ; #2673
[mk-app] #3374 = #2673 #3373
[mk-proof] #3375 rewrite #3374
[instance] 0x0 #3374
[end-of-instance]
[mk-app] #3376 = #3373 #36
[mk-app] #3377 = #2674 #3376
[mk-proof] #3378 monotonicity #3375 #3377
[attach-meaning] #176 arith (- 1)
[mk-app] #3379 * #176 #853
[mk-app] #3380 + #280 #3379
[mk-app] #3381 = #3380 #36
[inst-discovered] theory-solving 0x0 arith# ; #3376
[mk-app] #3382 = #3376 #3381
[mk-proof] #3383 rewrite #3382
[instance] 0x0 #3382
[end-of-instance]
[mk-app] #3384 = #2674 #3381
[mk-proof] #3385 trans #3378 #3383 #3384
[mk-app] #3386 and #3368 #3381
[mk-app] #3387 = #2677 #3386
[mk-proof] #3388 monotonicity #3372 #3385 #3387
[mk-app] #3389 or #874 #3386
[mk-app] #3390 = #2680 #3389
[mk-proof] #3391 monotonicity #3359 #3388 #3390
[mk-quant] #3392 k!270 3 #857 #3389
[attach-var-names] #3392 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3393 null 3 #3391
[mk-proof] #3394 proof-bind #3393
[mk-app] #3395 = #2683 #3392
[mk-proof] #3396 quant-intro #3394 #3395
[mk-proof] #3397 mp #2688 #3396 #3392
[mk-app] #3398 = #915 #915
[mk-proof] #3399 refl #3398
[mk-app] #3398 = #2700 #948
[mk-proof] #3399 monotonicity #3044 #3398
[mk-app] #3400 = #2703 #956
[mk-proof] #3401 monotonicity #3399 #3400
[mk-app] #3402 and #3057 #927
[mk-app] #3403 = #2706 #3402
[mk-proof] #3404 monotonicity #3061 #3403
[mk-app] #3405 or #956 #3402
[mk-app] #3406 = #2709 #3405
[mk-proof] #3407 monotonicity #3401 #3404 #3406
[mk-quant] #3408 k!286 3 #893 #3405
[attach-var-names] #3408 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #3409 null 3 #3407
[mk-proof] #3410 proof-bind #3409
[mk-app] #3411 = #2712 #3408
[mk-proof] #3412 quant-intro #3410 #3411
[mk-proof] #3413 mp #2717 #3412 #3408
[mk-app] #3414 = #984 #984
[mk-proof] #3415 refl #3414
[mk-app] #3414 and #3057 #992
[mk-app] #3415 = #2729 #3414
[mk-proof] #3416 monotonicity #3061 #3415
[mk-app] #3417 or #1003 #3414
[mk-app] #3418 = #2732 #3417
[mk-proof] #3419 monotonicity #3416 #3418
[mk-quant] #3420 k!300 3 #973 #3417
[attach-var-names] #3420 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #3421 null 3 #3419
[mk-proof] #3422 proof-bind #3421
[mk-app] #3423 = #2735 #3420
[mk-proof] #3424 quant-intro #3422 #3423
[mk-proof] #3425 mp #2740 #3424 #3420
[mk-proof] #3426 refl #2263
[mk-proof] #3426 refl #2266
[mk-app] #3426 = #1058 #1058
[mk-proof] #3427 refl #3426
[mk-app] #3426 = #1076 #1076
[mk-proof] #3427 refl #3426
[mk-app] #3426 + #249 #1086
[inst-discovered] theory-solving 0x0 arith# ; #2757
[mk-app] #3427 = #2757 #3426
[mk-proof] #3428 rewrite #3427
[instance] 0x0 #3427
[end-of-instance]
[mk-app] #3429 = #3426 #36
[mk-app] #3430 = #2758 #3429
[mk-proof] #3431 monotonicity #3428 #3430
[attach-meaning] #176 arith (- 1)
[mk-app] #3432 * #176 #1086
[mk-app] #3433 + #33 #3432
[mk-app] #3434 = #3433 #36
[inst-discovered] theory-solving 0x0 arith# ; #3429
[mk-app] #3435 = #3429 #3434
[mk-proof] #3436 rewrite #3435
[instance] 0x0 #3435
[end-of-instance]
[mk-app] #3437 = #2758 #3434
[mk-proof] #3438 trans #3431 #3436 #3437
[mk-app] #3439 and #1095 #1106 #3434
[mk-app] #3440 = #2761 #3439
[mk-proof] #3441 monotonicity #3438 #3440
[mk-app] #3442 or #1125 #3439
[mk-app] #3443 = #2764 #3442
[mk-proof] #3444 monotonicity #3441 #3443
[mk-quant] #3445 k!326 2 #1091 #3442
[attach-var-names] #3445 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3446 null 2 #3444
[mk-proof] #3447 proof-bind #3446
[mk-app] #3448 = #2767 #3445
[mk-proof] #3449 quant-intro #3447 #3448
[mk-proof] #3450 mp #2772 #3449 #3445
[mk-app] #3451 + #795 #280
[inst-discovered] theory-solving 0x0 arith# ; #2773
[mk-app] #3452 = #2773 #3451
[mk-proof] #3453 rewrite #3452
[instance] 0x0 #3452
[end-of-instance]
[mk-app] #3454 = #3451 #36
[mk-app] #3455 = #2774 #3454
[mk-proof] #3456 monotonicity #3453 #3455
[attach-meaning] #176 arith (- 1)
[mk-app] #3457 + #32 #2392
[mk-app] #3458 = #3457 #36
[inst-discovered] theory-solving 0x0 arith# ; #3454
[mk-app] #3459 = #3454 #3458
[mk-proof] #3460 rewrite #3459
[instance] 0x0 #3459
[end-of-instance]
[mk-app] #3461 = #2774 #3458
[mk-proof] #3462 trans #3456 #3460 #3461
[mk-app] #3463 and #287 #299 #3458
[mk-app] #3464 = #2777 #3463
[mk-proof] #3465 monotonicity #3019 #3462 #3464
[mk-app] #3466 not #3463
[mk-app] #3467 = #2780 #3466
[mk-proof] #3468 monotonicity #3465 #3467
[mk-app] #3469 or #3466 #1140
[mk-app] #3470 = #2783 #3469
[mk-proof] #3471 monotonicity #3468 #3470
[mk-quant] #3472 k!332 3 #1142 #3469
[attach-var-names] #3472 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #3473 null 3 #3471
[mk-proof] #3474 proof-bind #3473
[mk-app] #3475 = #2786 #3472
[mk-proof] #3476 quant-intro #3474 #3475
[mk-proof] #3477 mp #2791 #3476 #3472
[mk-app] #3478 = #2792 #429
[mk-proof] #3479 monotonicity #3082 #3478
[mk-app] #3480 = #2795 #1179
[mk-proof] #3481 monotonicity #3479 #3480
[mk-app] #3482 = #2798 #1180
[mk-proof] #3483 monotonicity #3481 #3482
[mk-lambda] #3484 null 2 #3483
[mk-proof] #3485 proof-bind #3484
[mk-app] #3486 = #2801 #1185
[mk-proof] #3487 quant-intro #3485 #3486
[mk-proof] #3488 mp #2806 #3487 #1185
[mk-app] #3489 + #2319 #163
[inst-discovered] theory-solving 0x0 arith# ; #2807
[mk-app] #3490 = #2807 #3489
[mk-proof] #3491 rewrite #3490
[instance] 0x0 #3490
[end-of-instance]
[mk-app] #3492 = #3489 #36
[mk-app] #3493 = #2808 #3492
[mk-proof] #3494 monotonicity #3491 #3493
[attach-meaning] #176 arith (- 1)
[mk-app] #3495 + #116 #420
[mk-app] #3496 = #3495 #36
[inst-discovered] theory-solving 0x0 arith# ; #3492
[mk-app] #3497 = #3492 #3496
[mk-proof] #3498 rewrite #3497
[instance] 0x0 #3497
[end-of-instance]
[mk-app] #3499 = #2808 #3496
[mk-proof] #3500 trans #3494 #3498 #3499
[mk-app] #3501 not #3496
[mk-app] #3502 = #2811 #3501
[mk-proof] #3503 monotonicity #3500 #3502
[mk-app] #3504 and #1194 #1195 #3501
[mk-app] #3505 = #2814 #3504
[mk-proof] #3506 monotonicity #3503 #3505
[mk-app] #3507 and #1194 #1195 #3496 #2819 #1224 #1235 #2827
[mk-app] #3508 = #2830 #3507
[mk-proof] #3509 monotonicity #3500 #3508
[mk-app] #3510 or #1193 #3504 #3507
[mk-app] #3511 = #2833 #3510
[mk-proof] #3512 monotonicity #3506 #3509 #3511
[mk-quant] #3513 k!363 2 #1217 #3510
[attach-var-names] #3513 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #3514 null 2 #3512
[mk-proof] #3515 proof-bind #3514
[mk-app] #3516 = #2836 #3513
[mk-proof] #3517 quant-intro #3515 #3516
[mk-proof] #3518 mp #2841 #3517 #3513
[mk-proof] #3519 refl #2287
[mk-app] #3519 = #2848 #2848
[mk-proof] #3520 refl #3519
[inst-discovered] theory-solving 0x0 arith# ; #1343
[instance] 0x0 #1347
[end-of-instance]
[mk-app] #3519 <= #1346 #36
[mk-app] #3520 = #2854 #3519
[mk-proof] #3521 monotonicity #1348 #3520
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3519
[mk-app] #3522 = #3519 #1335
[mk-proof] #3523 rewrite #3522
[instance] 0x0 #3522
[end-of-instance]
[mk-app] #3524 = #2854 #1335
[mk-proof] #3525 trans #3521 #3523 #3524
[inst-discovered] theory-solving 0x0 arith# ; #2857
[mk-app] #3526 = #2857 #1354
[mk-proof] #3527 rewrite #3526
[instance] 0x0 #3526
[end-of-instance]
[mk-app] #3528 = #2858 #1355
[mk-proof] #3529 monotonicity #3527 #3528
[mk-app] #3530 = #2861 #1363
[mk-proof] #3531 monotonicity #3525 #3529 #3530
[mk-app] #3532 = #2864 #1338
[mk-proof] #3533 monotonicity #3525 #3532
[mk-app] #3534 = #2867 #1371
[mk-proof] #3535 monotonicity #3533 #3534
[mk-app] #3536 = #2870 #1376
[mk-proof] #3537 monotonicity #3531 #3535 #3536
[mk-lambda] #3538 null 2 #3537
[mk-proof] #3539 proof-bind #3538
[mk-app] #3540 = #2873 #1379
[mk-proof] #3541 quant-intro #3539 #3540
[mk-proof] #3542 mp #2878 #3541 #1379
[inst-discovered] theory-solving 0x0 arith# ; #2879
[mk-app] #3543 = #2879 #1409
[mk-proof] #3544 rewrite #3543
[instance] 0x0 #3543
[end-of-instance]
[mk-app] #3545 = #2880 #1410
[mk-proof] #3546 monotonicity #3544 #3545
[mk-app] #3547 = #2883 #1413
[mk-proof] #3548 monotonicity #3546 #3547
[mk-app] #3549 = #2886 #1418
[mk-proof] #3550 monotonicity #3548 #3549
[mk-app] #3551 = #2889 #1437
[mk-proof] #3552 monotonicity #3550 #3551
[mk-app] #3553 + #249 #1396 #1389
[inst-discovered] theory-solving 0x0 arith# ; #2892
[mk-app] #3554 = #2892 #3553
[mk-proof] #3555 rewrite #3554
[instance] 0x0 #3554
[end-of-instance]
[mk-app] #3556 = #3553 #36
[mk-app] #3557 = #2893 #3556
[mk-proof] #3558 monotonicity #3555 #3557
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3556
[mk-app] #3559 = #3556 #1427
[mk-proof] #3560 rewrite #3559
[instance] 0x0 #3559
[end-of-instance]
[mk-app] #3561 = #2893 #1427
[mk-proof] #3562 trans #3558 #3560 #3561
[mk-app] #3563 = #2896 #1438
[mk-proof] #3564 monotonicity #3552 #3562 #3563
[mk-lambda] #3565 null 3 #3564
[mk-proof] #3566 proof-bind #3565
[mk-app] #3567 = #2899 #1443
[mk-proof] #3568 quant-intro #3566 #3567
[mk-proof] #3569 mp #2904 #3568 #1443
[mk-app] #3570 <= #3163 #36
[mk-app] #3571 = #2905 #3570
[mk-proof] #3572 monotonicity #3165 #3571
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3570
[mk-app] #3573 = #3570 #1456
[mk-proof] #3574 rewrite #3573
[instance] 0x0 #3573
[end-of-instance]
[mk-app] #3575 = #2905 #1456
[mk-proof] #3576 trans #3572 #3574 #3575
[mk-app] #3577 = #2908 #1460
[mk-proof] #3578 monotonicity #3576 #3577
[mk-app] #3579 = #2911 #1463
[mk-proof] #3580 monotonicity #3578 #3579
[mk-lambda] #3581 null 3 #3580
[mk-proof] #3582 proof-bind #3581
[mk-app] #3583 = #2914 #1466
[mk-proof] #3584 quant-intro #3582 #3583
[mk-proof] #3585 mp #2919 #3584 #1466
[mk-app] #3586 + #249 #1474
[inst-discovered] theory-solving 0x0 arith# ; #2920
[mk-app] #3587 = #2920 #3586
[mk-proof] #3588 rewrite #3587
[instance] 0x0 #3587
[end-of-instance]
[mk-app] #3589 = #3586 #36
[mk-app] #3590 = #2921 #3589
[mk-proof] #3591 monotonicity #3588 #3590
[attach-meaning] #176 arith (- 1)
[mk-app] #3592 * #176 #1474
[mk-app] #3593 + #33 #3592
[mk-app] #3594 = #3593 #36
[inst-discovered] theory-solving 0x0 arith# ; #3589
[mk-app] #3595 = #3589 #3594
[mk-proof] #3596 rewrite #3595
[instance] 0x0 #3595
[end-of-instance]
[mk-app] #3597 = #2921 #3594
[mk-proof] #3598 trans #3591 #3596 #3597
[mk-quant] #3599 prog.inj 2 #1476 #3594
[attach-var-names] #3599 (|i| ; |Int|) (|a| ; |$Ref|)
[mk-lambda] #3600 null 2 #3598
[mk-proof] #3601 proof-bind #3600
[mk-app] #3602 = #2924 #3599
[mk-proof] #3603 quant-intro #3601 #3602
[mk-proof] #3604 mp #2929 #3603 #3599
[mk-proof] #3605 refl #2305
[mk-app] #3605 + #2930 #2931 #1503 #1513
[inst-discovered] theory-solving 0x0 arith# ; #2932
[mk-app] #3606 = #2932 #3605
[mk-proof] #3607 rewrite #3606
[instance] 0x0 #3606
[end-of-instance]
[mk-app] #3608 = #3605 #36
[mk-app] #3609 = #2933 #3608
[mk-proof] #3610 monotonicity #3607 #3609
[attach-meaning] #1527 arith (- 4)
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3608
[mk-app] #3611 = #3608 #1539
[mk-proof] #3612 rewrite #3611
[instance] 0x0 #3611
[end-of-instance]
[mk-app] #3613 = #2933 #1539
[mk-proof] #3614 trans #3610 #3612 #3613
[mk-lambda] #3615 null 3 #3614
[mk-proof] #3616 proof-bind #3615
[mk-app] #3617 = #2936 #1546
[mk-proof] #3618 quant-intro #3616 #3617
[mk-proof] #3619 mp #2941 #3618 #1546
[begin-check] 0
[mk-app] #3620 = #2350 #2350
[mk-proof] #3621 refl #3620
[mk-app] #3620 = #2350 #1
[mk-proof] #3621 iff-true #2355 #3620
[mk-proof] #3622 refl #2161
[mk-app] #3622 = #50 #1
[mk-proof] #3623 iff-true #2163 #3622
[mk-proof] #3624 refl #2164
[mk-app] #3624 = #57 #1
[mk-proof] #3625 iff-true #2166 #3624
[mk-proof] #3626 refl #2167
[mk-app] #3626 = #63 #1
[mk-proof] #3627 iff-true #2169 #3626
[mk-proof] #3628 refl #2170
[mk-app] #3628 = #70 #1
[mk-proof] #3629 iff-true #2172 #3628
[mk-proof] #3630 refl #2173
[mk-app] #3630 = #76 #1
[mk-proof] #3631 iff-true #2175 #3630
[mk-app] #3632 = #2358 #2358
[mk-proof] #3633 refl #3632
[mk-app] #3632 = #2358 #1
[mk-proof] #3633 iff-true #2317 #3632
[mk-proof] #3634 refl #2179
[mk-app] #3634 = #88 #1
[mk-proof] #3635 iff-true #2181 #3634
[mk-proof] #3636 refl #2182
[mk-app] #3636 = #95 #1
[mk-proof] #3637 iff-true #2184 #3636
[mk-proof] #3638 refl #2185
[mk-app] #3638 = #101 #1
[mk-proof] #3639 iff-true #2187 #3638
[mk-proof] #3640 refl #2188
[mk-app] #3640 = #108 #1
[mk-proof] #3641 iff-true #2190 #3640
[mk-proof] #3642 refl #2191
[mk-app] #3642 = #114 #1
[mk-proof] #3643 iff-true #2193 #3642
[mk-app] #3644 = #124 #124
[mk-proof] #3645 refl #3644
[mk-app] #3644 = #124 #1
[mk-proof] #3645 iff-true #2318 #3644
[mk-proof] #3646 refl #2197
[mk-proof] #3646 refl #2200
[mk-app] #3646 = #143 #1
[mk-proof] #3647 iff-true #2202 #3646
[mk-proof] #3648 refl #2203
[mk-app] #3648 = #154 #1
[mk-proof] #3649 iff-true #2205 #3648
[mk-app] #3650 = #193 #193
[mk-proof] #3651 refl #3650
[mk-app] #3650 = #193 #1
[mk-proof] #3651 iff-true #2958 #3650
[mk-proof] #3652 refl #2209
[mk-app] #3652 = #216 #1
[mk-proof] #3653 iff-true #2211 #3652
[mk-app] #3654 = #2972 #2972
[mk-proof] #3655 refl #3654
[mk-app] #3654 = #2972 #1
[mk-proof] #3655 iff-true #2977 #3654
[mk-app] #3656 = #237 #237
[mk-proof] #3657 refl #3656
[mk-app] #3656 = #237 #1
[mk-proof] #3657 iff-true #2992 #3656
[mk-app] #3658 = #263 #263
[mk-proof] #3659 refl #3658
[mk-app] #3658 = #263 #1
[mk-proof] #3659 iff-true #3007 #3658
[mk-app] #3660 = #3027 #3027
[mk-proof] #3661 refl #3660
[mk-app] #3660 = #3027 #1
[mk-proof] #3661 iff-true #3032 #3660
[mk-app] #3662 = #3068 #3068
[mk-proof] #3663 refl #3662
[mk-app] #3662 = #3068 #1
[mk-proof] #3663 iff-true #3073 #3662
[mk-app] #3664 = #3106 #3106
[mk-proof] #3665 refl #3664
[mk-app] #3664 = #3106 #1
[mk-proof] #3665 iff-true #3111 #3664
[mk-app] #3666 = #3141 #3141
[mk-proof] #3667 refl #3666
[mk-app] #3666 = #3141 #1
[mk-proof] #3667 iff-true #3146 #3666
[mk-app] #3668 = #3202 #3202
[mk-proof] #3669 refl #3668
[mk-app] #3668 = #3202 #1
[mk-proof] #3669 iff-true #3207 #3668
[mk-app] #3670 = #3248 #3248
[mk-proof] #3671 refl #3670
[mk-app] #3670 = #3248 #1
[mk-proof] #3671 iff-true #3253 #3670
[mk-app] #3672 = #3274 #3274
[mk-proof] #3673 refl #3672
[mk-app] #3672 = #3274 #1
[mk-proof] #3673 iff-true #3279 #3672
[inst-discovered] theory-solving 0x0 basic# ; #741
[instance] 0x0 #2604
[end-of-instance]
[mk-app] #3674 = #746 #746
[mk-proof] #3675 monotonicity #2605 #3674
[mk-app] #3676 = #752 #752
[mk-proof] #3677 monotonicity #3675 #3676
[mk-app] #3678 = #3306 #3306
[mk-proof] #3679 monotonicity #3677 #3678
[mk-app] #3680 = #3309 #3309
[mk-proof] #3681 refl #3680
[mk-app] #3680 = #3309 #1
[mk-proof] #3681 iff-true #3314 #3680
[mk-app] #3682 = #3350 #3350
[mk-proof] #3683 refl #3682
[mk-app] #3682 = #3350 #1
[mk-proof] #3683 iff-true #3355 #3682
[mk-app] #3684 = #3392 #3392
[mk-proof] #3685 refl #3684
[mk-app] #3684 = #3392 #1
[mk-proof] #3685 iff-true #3397 #3684
[mk-app] #3686 = #915 #915
[mk-proof] #3687 refl #3686
[mk-app] #3686 = #915 #1
[mk-proof] #3687 iff-true #2699 #3686
[mk-app] #3688 = #3408 #3408
[mk-proof] #3689 refl #3688
[mk-app] #3688 = #3408 #1
[mk-proof] #3689 iff-true #3413 #3688
[mk-app] #3690 = #984 #984
[mk-proof] #3691 refl #3690
[mk-app] #3690 = #984 #1
[mk-proof] #3691 iff-true #2724 #3690
[mk-app] #3692 = #3420 #3420
[mk-proof] #3693 refl #3692
[mk-app] #3692 = #3420 #1
[mk-proof] #3693 iff-true #3425 #3692
[mk-proof] #3694 refl #2263
[mk-app] #3694 = #1023 #1
[mk-proof] #3695 iff-true #2265 #3694
[mk-proof] #3696 refl #2266
[mk-app] #3696 = #1037 #1
[mk-proof] #3697 iff-true #2268 #3696
[mk-app] #3698 = #1058 #1058
[mk-proof] #3699 refl #3698
[mk-app] #3698 = #1058 #1
[mk-proof] #3699 iff-true #2749 #3698
[mk-app] #3700 = #1076 #1076
[mk-proof] #3701 refl #3700
[mk-app] #3700 = #1076 #1
[mk-proof] #3701 iff-true #2756 #3700
[mk-app] #3702 = #3445 #3445
[mk-proof] #3703 refl #3702
[mk-app] #3702 = #3445 #1
[mk-proof] #3703 iff-true #3450 #3702
[mk-app] #3704 = #3472 #3472
[mk-proof] #3705 refl #3704
[mk-app] #3704 = #3472 #1
[mk-proof] #3705 iff-true #3477 #3704
[mk-app] #3706 = #1185 #1185
[mk-proof] #3707 refl #3706
[mk-app] #3706 = #1185 #1
[mk-proof] #3707 iff-true #3488 #3706
[mk-app] #3708 = #3513 #3513
[mk-proof] #3709 refl #3708
[mk-app] #3708 = #3513 #1
[mk-proof] #3709 iff-true #3518 #3708
[mk-proof] #3710 refl #2287
[mk-app] #3710 = #1306 #1
[mk-proof] #3711 iff-true #2289 #3710
[mk-app] #3712 = #2848 #2848
[mk-proof] #3713 refl #3712
[mk-app] #3712 = #2848 #1
[mk-proof] #3713 iff-true #2853 #3712
[mk-app] #3714 = #1379 #1379
[mk-proof] #3715 refl #3714
[mk-app] #3714 = #1379 #1
[mk-proof] #3715 iff-true #3542 #3714
[mk-app] #3716 = #1443 #1443
[mk-proof] #3717 refl #3716
[mk-app] #3716 = #1443 #1
[mk-proof] #3717 iff-true #3569 #3716
[mk-app] #3718 = #1466 #1466
[mk-proof] #3719 refl #3718
[mk-app] #3718 = #1466 #1
[mk-proof] #3719 iff-true #3585 #3718
[mk-app] #3720 = #3599 #3599
[mk-proof] #3721 refl #3720
[mk-app] #3720 = #3599 #1
[mk-proof] #3721 iff-true #3604 #3720
[mk-proof] #3722 refl #2305
[mk-app] #3722 = #1495 #1
[mk-proof] #3723 iff-true #2307 #3722
[mk-app] #3724 = #1546 #1546
[mk-proof] #3725 refl #3724
[mk-app] #3724 = #1546 #1
[mk-proof] #3725 iff-true #3619 #3724
[mk-app] #3724 = #1546 #1546
[mk-proof] #3725 refl #3724
[mk-app] #3724 = #1546 #1
[mk-proof] #3725 iff-true #3619 #3724
[mk-proof] #3722 refl #2305
[mk-app] #3722 = #1495 #1
[mk-proof] #3723 iff-true #2307 #3722
[mk-app] #3720 = #3599 #3599
[mk-proof] #3721 refl #3720
[mk-app] #3720 = #3599 #1
[mk-proof] #3721 iff-true #3604 #3720
[mk-app] #3718 = #1466 #1466
[mk-proof] #3719 refl #3718
[mk-app] #3718 = #1466 #1
[mk-proof] #3719 iff-true #3585 #3718
[mk-app] #3716 = #1443 #1443
[mk-proof] #3717 refl #3716
[mk-app] #3716 = #1443 #1
[mk-proof] #3717 iff-true #3569 #3716
[mk-app] #3714 = #1379 #1379
[mk-proof] #3715 refl #3714
[mk-app] #3714 = #1379 #1
[mk-proof] #3715 iff-true #3542 #3714
[mk-app] #3712 = #2848 #2848
[mk-proof] #3713 refl #3712
[mk-app] #3712 = #2848 #1
[mk-proof] #3713 iff-true #2853 #3712
[mk-proof] #3710 refl #2287
[mk-app] #3710 = #1306 #1
[mk-proof] #3711 iff-true #2289 #3710
[mk-app] #3708 = #3513 #3513
[mk-proof] #3709 refl #3708
[mk-app] #3708 = #3513 #1
[mk-proof] #3709 iff-true #3518 #3708
[mk-app] #3706 = #1185 #1185
[mk-proof] #3707 refl #3706
[mk-app] #3706 = #1185 #1
[mk-proof] #3707 iff-true #3488 #3706
[mk-app] #3704 = #3472 #3472
[mk-proof] #3705 refl #3704
[mk-app] #3704 = #3472 #1
[mk-proof] #3705 iff-true #3477 #3704
[mk-app] #3702 = #3445 #3445
[mk-proof] #3703 refl #3702
[mk-app] #3702 = #3445 #1
[mk-proof] #3703 iff-true #3450 #3702
[mk-app] #3700 = #1076 #1076
[mk-proof] #3701 refl #3700
[mk-app] #3700 = #1076 #1
[mk-proof] #3701 iff-true #2756 #3700
[mk-app] #3698 = #1058 #1058
[mk-proof] #3699 refl #3698
[mk-app] #3698 = #1058 #1
[mk-proof] #3699 iff-true #2749 #3698
[mk-proof] #3696 refl #2266
[mk-app] #3696 = #1037 #1
[mk-proof] #3697 iff-true #2268 #3696
[mk-proof] #3694 refl #2263
[mk-app] #3694 = #1023 #1
[mk-proof] #3695 iff-true #2265 #3694
[mk-app] #3692 = #3420 #3420
[mk-proof] #3693 refl #3692
[mk-app] #3692 = #3420 #1
[mk-proof] #3693 iff-true #3425 #3692
[mk-app] #3690 = #984 #984
[mk-proof] #3691 refl #3690
[mk-app] #3690 = #984 #1
[mk-proof] #3691 iff-true #2724 #3690
[mk-app] #3688 = #3408 #3408
[mk-proof] #3689 refl #3688
[mk-app] #3688 = #3408 #1
[mk-proof] #3689 iff-true #3413 #3688
[mk-app] #3686 = #915 #915
[mk-proof] #3687 refl #3686
[mk-app] #3686 = #915 #1
[mk-proof] #3687 iff-true #2699 #3686
[mk-app] #3684 = #3392 #3392
[mk-proof] #3685 refl #3684
[mk-app] #3684 = #3392 #1
[mk-proof] #3685 iff-true #3397 #3684
[mk-app] #3682 = #3350 #3350
[mk-proof] #3683 refl #3682
[mk-app] #3682 = #3350 #1
[mk-proof] #3683 iff-true #3355 #3682
[inst-discovered] theory-solving 0x0 basic# ; #741
[instance] 0x0 #2604
[end-of-instance]
[mk-app] #3680 = #746 #746
[mk-proof] #3681 monotonicity #2605 #3680
[mk-app] #3672 = #752 #752
[mk-proof] #3673 monotonicity #3681 #3672
[mk-app] #3670 = #3306 #3306
[mk-proof] #3671 monotonicity #3673 #3670
[mk-app] #3668 = #3309 #3309
[mk-proof] #3669 refl #3668
[mk-app] #3668 = #3309 #1
[mk-proof] #3669 iff-true #3314 #3668
[mk-app] #3666 = #3274 #3274
[mk-proof] #3667 refl #3666
[mk-app] #3666 = #3274 #1
[mk-proof] #3667 iff-true #3279 #3666
[mk-app] #3664 = #3248 #3248
[mk-proof] #3665 refl #3664
[mk-app] #3664 = #3248 #1
[mk-proof] #3665 iff-true #3253 #3664
[mk-app] #3662 = #3202 #3202
[mk-proof] #3663 refl #3662
[mk-app] #3662 = #3202 #1
[mk-proof] #3663 iff-true #3207 #3662
[mk-app] #3660 = #3141 #3141
[mk-proof] #3661 refl #3660
[mk-app] #3660 = #3141 #1
[mk-proof] #3661 iff-true #3146 #3660
[mk-app] #3658 = #3106 #3106
[mk-proof] #3659 refl #3658
[mk-app] #3658 = #3106 #1
[mk-proof] #3659 iff-true #3111 #3658
[mk-app] #3656 = #3068 #3068
[mk-proof] #3657 refl #3656
[mk-app] #3656 = #3068 #1
[mk-proof] #3657 iff-true #3073 #3656
[mk-app] #3654 = #3027 #3027
[mk-proof] #3655 refl #3654
[mk-app] #3654 = #3027 #1
[mk-proof] #3655 iff-true #3032 #3654
[mk-app] #3652 = #263 #263
[mk-proof] #3653 refl #3652
[mk-app] #3652 = #263 #1
[mk-proof] #3653 iff-true #3007 #3652
[mk-app] #3650 = #237 #237
[mk-proof] #3651 refl #3650
[mk-app] #3650 = #237 #1
[mk-proof] #3651 iff-true #2992 #3650
[mk-app] #3648 = #2972 #2972
[mk-proof] #3649 refl #3648
[mk-app] #3648 = #2972 #1
[mk-proof] #3649 iff-true #2977 #3648
[mk-proof] #3646 refl #2209
[mk-app] #3646 = #216 #1
[mk-proof] #3647 iff-true #2211 #3646
[mk-app] #3644 = #193 #193
[mk-proof] #3645 refl #3644
[mk-app] #3644 = #193 #1
[mk-proof] #3645 iff-true #2958 #3644
[mk-proof] #3642 refl #2203
[mk-app] #3642 = #154 #1
[mk-proof] #3643 iff-true #2205 #3642
[mk-proof] #3640 refl #2200
[mk-app] #3640 = #143 #1
[mk-proof] #3641 iff-true #2202 #3640
[mk-proof] #3638 refl #2197
[mk-app] #3638 = #124 #124
[mk-proof] #3639 refl #3638
[mk-app] #3638 = #124 #1
[mk-proof] #3639 iff-true #2318 #3638
[mk-proof] #3636 refl #2191
[mk-app] #3636 = #114 #1
[mk-proof] #3637 iff-true #2193 #3636
[mk-proof] #3634 refl #2188
[mk-app] #3634 = #108 #1
[mk-proof] #3635 iff-true #2190 #3634
[mk-proof] #3632 refl #2185
[mk-app] #3632 = #101 #1
[mk-proof] #3633 iff-true #2187 #3632
[mk-proof] #3630 refl #2182
[mk-app] #3630 = #95 #1
[mk-proof] #3631 iff-true #2184 #3630
[mk-proof] #3628 refl #2179
[mk-app] #3628 = #88 #1
[mk-proof] #3629 iff-true #2181 #3628
[mk-app] #3626 = #2358 #2358
[mk-proof] #3627 refl #3626
[mk-app] #3626 = #2358 #1
[mk-proof] #3627 iff-true #2317 #3626
[mk-proof] #3624 refl #2173
[mk-app] #3624 = #76 #1
[mk-proof] #3625 iff-true #2175 #3624
[mk-proof] #3622 refl #2170
[mk-app] #3622 = #70 #1
[mk-proof] #3623 iff-true #2172 #3622
[mk-proof] #3620 refl #2167
[mk-app] #3620 = #63 #1
[mk-proof] #3621 iff-true #2169 #3620
[mk-proof] #3674 refl #2164
[mk-app] #3674 = #57 #1
[mk-proof] #3675 iff-true #2166 #3674
[mk-proof] #3676 refl #2161
[mk-app] #3676 = #50 #1
[mk-proof] #3677 iff-true #2163 #3676
[mk-app] #3678 = #2350 #2350
[mk-proof] #3679 refl #3678
[mk-app] #3678 = #2350 #1
[mk-proof] #3679 iff-true #2355 #3678
[mk-app] #3680 ~ #2375 #2375
[mk-proof] #3681 refl #3680
[mk-lambda] #3672 null 1 #3681
[mk-proof] #3673 proof-bind #3672
[mk-app] #3670 ~ #2350 #2350
[mk-proof] #3671 nnf-pos #3673 #3670
[mk-proof] #3678 mp~ #2355 #3671 #2350
[mk-app] #3679 = #2350 #2350
[mk-proof] #3676 refl #3679
[mk-app] #3679 ~ #48 #48
[mk-proof] #3676 refl #3679
[mk-lambda] #3677 null 1 #3676
[mk-proof] #3674 proof-bind #3677
[mk-app] #3675 ~ #50 #50
[mk-proof] #3620 nnf-pos #3674 #3675
[mk-proof] #3621 mp~ #2163 #3620 #50
[mk-proof] #3622 refl #2161
[mk-app] #3622 ~ #55 #55
[mk-proof] #3623 refl #3622
[mk-lambda] #3624 null 1 #3623
[mk-proof] #3625 proof-bind #3624
[mk-app] #3626 ~ #57 #57
[mk-proof] #3627 nnf-pos #3625 #3626
[mk-proof] #3628 mp~ #2166 #3627 #57
[mk-proof] #3629 refl #2164
[mk-app] #3629 ~ #61 #61
[mk-proof] #3630 refl #3629
[mk-lambda] #3631 null 1 #3630
[mk-proof] #3632 proof-bind #3631
[mk-app] #3633 ~ #63 #63
[mk-proof] #3634 nnf-pos #3632 #3633
[mk-proof] #3635 mp~ #2169 #3634 #63
[mk-proof] #3636 refl #2167
[mk-app] #3636 ~ #68 #68
[mk-proof] #3637 refl #3636
[mk-lambda] #3638 null 1 #3637
[mk-proof] #3639 proof-bind #3638
[mk-app] #3640 ~ #70 #70
[mk-proof] #3641 nnf-pos #3639 #3640
[mk-proof] #3642 mp~ #2172 #3641 #70
[mk-proof] #3643 refl #2170
[mk-app] #3643 ~ #74 #74
[mk-proof] #3644 refl #3643
[mk-lambda] #3645 null 1 #3644
[mk-proof] #3646 proof-bind #3645
[mk-app] #3647 ~ #76 #76
[mk-proof] #3648 nnf-pos #3646 #3647
[mk-proof] #3649 mp~ #2175 #3648 #76
[mk-proof] #3650 refl #2173
[mk-app] #3650 ~ #2337 #2337
[mk-proof] #3651 refl #3650
[mk-lambda] #3652 null 1 #3651
[mk-proof] #3653 proof-bind #3652
[mk-app] #3654 ~ #2358 #2358
[mk-proof] #3655 nnf-pos #3653 #3654
[mk-proof] #3656 mp~ #2317 #3655 #2358
[mk-app] #3657 = #2358 #2358
[mk-proof] #3658 refl #3657
[mk-app] #3657 ~ #86 #86
[mk-proof] #3658 refl #3657
[mk-lambda] #3659 null 1 #3658
[mk-proof] #3660 proof-bind #3659
[mk-app] #3661 ~ #88 #88
[mk-proof] #3662 nnf-pos #3660 #3661
[mk-proof] #3663 mp~ #2181 #3662 #88
[mk-proof] #3664 refl #2179
[mk-app] #3664 ~ #93 #93
[mk-proof] #3665 refl #3664
[mk-lambda] #3666 null 1 #3665
[mk-proof] #3667 proof-bind #3666
[mk-app] #3668 ~ #95 #95
[mk-proof] #3669 nnf-pos #3667 #3668
[mk-proof] #3682 mp~ #2184 #3669 #95
[mk-proof] #3683 refl #2182
[mk-app] #3683 ~ #99 #99
[mk-proof] #3684 refl #3683
[mk-lambda] #3685 null 1 #3684
[mk-proof] #3686 proof-bind #3685
[mk-app] #3687 ~ #101 #101
[mk-proof] #3688 nnf-pos #3686 #3687
[mk-proof] #3689 mp~ #2187 #3688 #101
[mk-proof] #3690 refl #2185
[mk-app] #3690 ~ #106 #106
[mk-proof] #3691 refl #3690
[mk-lambda] #3692 null 1 #3691
[mk-proof] #3693 proof-bind #3692
[mk-app] #3694 ~ #108 #108
[mk-proof] #3695 nnf-pos #3693 #3694
[mk-proof] #3696 mp~ #2190 #3695 #108
[mk-proof] #3697 refl #2188
[mk-app] #3697 ~ #112 #112
[mk-proof] #3698 refl #3697
[mk-lambda] #3699 null 1 #3698
[mk-proof] #3700 proof-bind #3699
[mk-app] #3701 ~ #114 #114
[mk-proof] #3702 nnf-pos #3700 #3701
[mk-proof] #3703 mp~ #2193 #3702 #114
[mk-proof] #3704 refl #2191
[mk-app] #3704 ~ #123 #123
[mk-proof] #3705 refl #3704
[mk-lambda] #3706 null 1 #3705
[mk-proof] #3707 proof-bind #3706
[mk-app] #3708 ~ #124 #124
[mk-proof] #3709 nnf-pos #3707 #3708
[mk-proof] #3710 mp~ #2318 #3709 #124
[mk-app] #3711 = #124 #124
[mk-proof] #3712 refl #3711
[mk-app] #3711 ~ #132 #132
[mk-proof] #3712 refl #3711
[mk-proof] #3711 refl #2197
[mk-app] #3711 ~ #140 #140
[mk-proof] #3712 refl #3711
[mk-lambda] #3713 null 1 #3712
[mk-proof] #3714 proof-bind #3713
[mk-app] #3715 ~ #143 #143
[mk-proof] #3716 nnf-pos #3714 #3715
[mk-proof] #3717 mp~ #2202 #3716 #143
[mk-proof] #3718 refl #2200
[mk-app] #3718 ~ #152 #152
[mk-proof] #3719 refl #3718
[mk-lambda] #3720 null 1 #3719
[mk-proof] #3721 proof-bind #3720
[mk-app] #3722 ~ #154 #154
[mk-proof] #3723 nnf-pos #3721 #3722
[mk-proof] #3724 mp~ #2205 #3723 #154
[mk-proof] #3725 refl #2203
[mk-app] #3725 ~ #188 #188
[mk-proof] #3726 refl #3725
[mk-lambda] #3727 null 2 #3726
[mk-proof] #3728 proof-bind #3727
[mk-app] #3729 ~ #193 #193
[mk-proof] #3730 nnf-pos #3728 #3729
[mk-proof] #3731 mp~ #2958 #3730 #193
[mk-app] #3732 = #193 #193
[mk-proof] #3733 refl #3732
[mk-app] #3732 ~ #213 #213
[mk-proof] #3733 refl #3732
[mk-lambda] #3734 null 2 #3733
[mk-proof] #3735 proof-bind #3734
[mk-app] #3736 ~ #216 #216
[mk-proof] #3737 nnf-pos #3735 #3736
[mk-proof] #3738 mp~ #2211 #3737 #216
[mk-proof] #3739 refl #2209
[mk-app] #3739 ~ #2967 #2967
[mk-proof] #3740 refl #3739
[mk-lambda] #3741 null 1 #3740
[mk-proof] #3742 proof-bind #3741
[mk-app] #3743 ~ #2972 #2972
[mk-proof] #3744 nnf-pos #3742 #3743
[mk-proof] #3745 mp~ #2977 #3744 #2972
[mk-app] #3746 = #2972 #2972
[mk-proof] #3747 refl #3746
[mk-app] #3746 ~ #232 #232
[mk-proof] #3747 refl #3746
[mk-lambda] #3748 null 2 #3747
[mk-proof] #3749 proof-bind #3748
[mk-app] #3750 ~ #237 #237
[mk-proof] #3751 nnf-pos #3749 #3750
[mk-proof] #3752 mp~ #2992 #3751 #237
[mk-app] #3753 = #237 #237
[mk-proof] #3754 refl #3753
[mk-app] #3753 ~ #256 #256
[mk-proof] #3754 refl #3753
[mk-lambda] #3755 null 2 #3754
[mk-proof] #3756 proof-bind #3755
[mk-app] #3757 ~ #263 #263
[mk-proof] #3758 nnf-pos #3756 #3757
[mk-proof] #3759 mp~ #3007 #3758 #263
[mk-app] #3760 = #263 #263
[mk-proof] #3761 refl #3760
[mk-app] #3760 ~ #3024 #3024
[mk-proof] #3761 refl #3760
[mk-lambda] #3762 null 3 #3761
[mk-proof] #3763 proof-bind #3762
[mk-app] #3764 ~ #3027 #3027
[mk-proof] #3765 nnf-pos #3763 #3764
[mk-proof] #3766 mp~ #3032 #3765 #3027
[mk-app] #3767 = #3027 #3027
[mk-proof] #3768 refl #3767
[mk-app] #3767 ~ #3065 #3065
[mk-proof] #3768 refl #3767
[mk-lambda] #3769 null 3 #3768
[mk-proof] #3770 proof-bind #3769
[mk-app] #3771 ~ #3068 #3068
[mk-proof] #3772 nnf-pos #3770 #3771
[mk-proof] #3773 mp~ #3073 #3772 #3068
[mk-app] #3774 = #3068 #3068
[mk-proof] #3775 refl #3774
[mk-app] #3774 ~ #3103 #3103
[mk-proof] #3775 refl #3774
[mk-lambda] #3776 null 3 #3775
[mk-proof] #3777 proof-bind #3776
[mk-app] #3778 ~ #3106 #3106
[mk-proof] #3779 nnf-pos #3777 #3778
[mk-proof] #3780 mp~ #3111 #3779 #3106
[mk-app] #3781 = #3106 #3106
[mk-proof] #3782 refl #3781
[mk-app] #3781 ~ #3138 #3138
[mk-proof] #3782 refl #3781
[mk-lambda] #3783 null 3 #3782
[mk-proof] #3784 proof-bind #3783
[mk-app] #3785 ~ #3141 #3141
[mk-proof] #3786 nnf-pos #3784 #3785
[mk-proof] #3787 mp~ #3146 #3786 #3141
[mk-app] #3788 = #3141 #3141
[mk-proof] #3789 refl #3788
[mk-app] #3788 ~ #3199 #3199
[mk-proof] #3789 refl #3788
[mk-lambda] #3790 null 4 #3789
[mk-proof] #3791 proof-bind #3790
[mk-app] #3792 ~ #3202 #3202
[mk-proof] #3793 nnf-pos #3791 #3792
[mk-proof] #3794 mp~ #3207 #3793 #3202
[mk-app] #3795 = #3202 #3202
[mk-proof] #3796 refl #3795
[mk-app] #3795 ~ #3245 #3245
[mk-proof] #3796 refl #3795
[mk-lambda] #3797 null 2 #3796
[mk-proof] #3798 proof-bind #3797
[mk-app] #3799 ~ #3248 #3248
[mk-proof] #3800 nnf-pos #3798 #3799
[mk-proof] #3801 mp~ #3253 #3800 #3248
[mk-app] #3802 = #3248 #3248
[mk-proof] #3803 refl #3802
[mk-app] #3802 ~ #3271 #3271
[mk-proof] #3803 refl #3802
[mk-lambda] #3804 null 3 #3803
[mk-proof] #3805 proof-bind #3804
[mk-app] #3806 ~ #3274 #3274
[mk-proof] #3807 nnf-pos #3805 #3806
[mk-proof] #3808 mp~ #3279 #3807 #3274
[mk-app] #3809 = #3274 #3274
[mk-proof] #3810 refl #3809
[mk-app] #3809 ~ #3306 #3306
[mk-proof] #3810 refl #3809
[mk-lambda] #3811 null 2 #3810
[mk-proof] #3812 proof-bind #3811
[mk-app] #3813 ~ #3309 #3309
[mk-proof] #3814 nnf-pos #3812 #3813
[mk-proof] #3815 mp~ #3314 #3814 #3309
[inst-discovered] theory-solving 0x0 basic# ; #741
[instance] 0x0 #2604
[end-of-instance]
[mk-app] #3816 = #746 #746
[mk-proof] #3817 monotonicity #2605 #3816
[mk-app] #3818 = #752 #752
[mk-proof] #3819 monotonicity #3817 #3818
[mk-app] #3820 = #3306 #3306
[mk-proof] #3821 monotonicity #3819 #3820
[mk-app] #3822 = #3309 #3309
[mk-proof] #3823 refl #3822
[mk-app] #3822 ~ #3347 #3347
[mk-proof] #3823 refl #3822
[mk-lambda] #3824 null 3 #3823
[mk-proof] #3825 proof-bind #3824
[mk-app] #3826 ~ #3350 #3350
[mk-proof] #3827 nnf-pos #3825 #3826
[mk-proof] #3828 mp~ #3355 #3827 #3350
[mk-app] #3829 = #3350 #3350
[mk-proof] #3830 refl #3829
[mk-app] #3829 ~ #3389 #3389
[mk-proof] #3830 refl #3829
[mk-lambda] #3831 null 3 #3830
[mk-proof] #3832 proof-bind #3831
[mk-app] #3833 ~ #3392 #3392
[mk-proof] #3834 nnf-pos #3832 #3833
[mk-proof] #3835 mp~ #3397 #3834 #3392
[mk-app] #3836 = #3392 #3392
[mk-proof] #3837 refl #3836
[mk-app] #3836 ~ #910 #910
[mk-proof] #3837 refl #3836
[mk-lambda] #3838 null 3 #3837
[mk-proof] #3839 proof-bind #3838
[mk-app] #3840 ~ #915 #915
[mk-proof] #3841 nnf-pos #3839 #3840
[mk-proof] #3842 mp~ #2699 #3841 #915
[mk-app] #3843 = #915 #915
[mk-proof] #3844 refl #3843
[mk-app] #3843 ~ #3405 #3405
[mk-proof] #3844 refl #3843
[mk-lambda] #3845 null 3 #3844
[mk-proof] #3846 proof-bind #3845
[mk-app] #3847 ~ #3408 #3408
[mk-proof] #3848 nnf-pos #3846 #3847
[mk-proof] #3849 mp~ #3413 #3848 #3408
[mk-app] #3850 = #3408 #3408
[mk-proof] #3851 refl #3850
[mk-app] #3850 ~ #979 #979
[mk-proof] #3851 refl #3850
[mk-lambda] #3852 null 3 #3851
[mk-proof] #3853 proof-bind #3852
[mk-app] #3854 ~ #984 #984
[mk-proof] #3855 nnf-pos #3853 #3854
[mk-proof] #3856 mp~ #2724 #3855 #984
[mk-app] #3857 = #984 #984
[mk-proof] #3858 refl #3857
[mk-app] #3857 ~ #3417 #3417
[mk-proof] #3858 refl #3857
[mk-lambda] #3859 null 3 #3858
[mk-proof] #3860 proof-bind #3859
[mk-app] #3861 ~ #3420 #3420
[mk-proof] #3862 nnf-pos #3860 #3861
[mk-proof] #3863 mp~ #3425 #3862 #3420
[mk-app] #3864 = #3420 #3420
[mk-proof] #3865 refl #3864
[mk-app] #3864 ~ #1020 #1020
[mk-proof] #3865 refl #3864
[mk-lambda] #3866 null 2 #3865
[mk-proof] #3867 proof-bind #3866
[mk-app] #3868 ~ #1023 #1023
[mk-proof] #3869 nnf-pos #3867 #3868
[mk-proof] #3870 mp~ #2265 #3869 #1023
[mk-proof] #3871 refl #2263
[mk-app] #3871 ~ #1034 #1034
[mk-proof] #3872 refl #3871
[mk-lambda] #3873 null 2 #3872
[mk-proof] #3874 proof-bind #3873
[mk-app] #3875 ~ #1037 #1037
[mk-proof] #3876 nnf-pos #3874 #3875
[mk-proof] #3877 mp~ #2268 #3876 #1037
[mk-proof] #3878 refl #2266
[mk-app] #3878 ~ #1053 #1053
[mk-proof] #3879 refl #3878
[mk-lambda] #3880 null 2 #3879
[mk-proof] #3881 proof-bind #3880
[mk-app] #3882 ~ #1058 #1058
[mk-proof] #3883 nnf-pos #3881 #3882
[mk-proof] #3884 mp~ #2749 #3883 #1058
[mk-app] #3885 = #1058 #1058
[mk-proof] #3886 refl #3885
[mk-app] #3885 ~ #1071 #1071
[mk-proof] #3886 refl #3885
[mk-lambda] #3887 null 2 #3886
[mk-proof] #3888 proof-bind #3887
[mk-app] #3889 ~ #1076 #1076
[mk-proof] #3890 nnf-pos #3888 #3889
[mk-proof] #3891 mp~ #2756 #3890 #1076
[mk-app] #3892 = #1076 #1076
[mk-proof] #3893 refl #3892
[mk-app] #3892 ~ #3442 #3442
[mk-proof] #3893 refl #3892
[mk-lambda] #3894 null 2 #3893
[mk-proof] #3895 proof-bind #3894
[mk-app] #3896 ~ #3445 #3445
[mk-proof] #3897 nnf-pos #3895 #3896
[mk-proof] #3898 mp~ #3450 #3897 #3445
[mk-app] #3899 = #3445 #3445
[mk-proof] #3900 refl #3899
[mk-app] #3899 ~ #3469 #3469
[mk-proof] #3900 refl #3899
[mk-lambda] #3901 null 3 #3900
[mk-proof] #3902 proof-bind #3901
[mk-app] #3903 ~ #3472 #3472
[mk-proof] #3904 nnf-pos #3902 #3903
[mk-proof] #3905 mp~ #3477 #3904 #3472
[mk-app] #3906 = #3472 #3472
[mk-proof] #3907 refl #3906
[mk-app] #3906 ~ #1180 #1180
[mk-proof] #3907 refl #3906
[mk-lambda] #3908 null 2 #3907
[mk-proof] #3909 proof-bind #3908
[mk-app] #3910 ~ #1185 #1185
[mk-proof] #3911 nnf-pos #3909 #3910
[mk-proof] #3912 mp~ #3488 #3911 #1185
[mk-app] #3913 = #1185 #1185
[mk-proof] #3914 refl #3913
[mk-app] #3913 ~ #3510 #3510
[mk-proof] #3914 refl #3913
[mk-lambda] #3915 null 2 #3914
[mk-proof] #3916 proof-bind #3915
[mk-app] #3917 ~ #3513 #3513
[mk-proof] #3918 nnf-pos #3916 #3917
[mk-proof] #3919 mp~ #3518 #3918 #3513
[mk-app] #3920 = #3513 #3513
[mk-proof] #3921 refl #3920
[mk-app] #3920 ~ #1303 #1303
[mk-proof] #3921 refl #3920
[mk-lambda] #3922 null 2 #3921
[mk-proof] #3923 proof-bind #3922
[mk-app] #3924 ~ #1306 #1306
[mk-proof] #3925 nnf-pos #3923 #3924
[mk-proof] #3926 mp~ #2289 #3925 #1306
[mk-proof] #3927 refl #2287
[mk-app] #3927 ~ #2845 #2845
[mk-proof] #3928 refl #3927
[mk-lambda] #3929 null 2 #3928
[mk-proof] #3930 proof-bind #3929
[mk-app] #3931 ~ #2848 #2848
[mk-proof] #3932 nnf-pos #3930 #3931
[mk-proof] #3933 mp~ #2853 #3932 #2848
[mk-app] #3934 = #2848 #2848
[mk-proof] #3935 refl #3934
[mk-app] #3934 ~ #1376 #1376
[mk-proof] #3935 refl #3934
[mk-lambda] #3936 null 2 #3935
[mk-proof] #3937 proof-bind #3936
[mk-app] #3938 ~ #1379 #1379
[mk-proof] #3939 nnf-pos #3937 #3938
[mk-proof] #3940 mp~ #3542 #3939 #1379
[mk-app] #3941 = #1379 #1379
[mk-proof] #3942 refl #3941
[mk-app] #3941 ~ #1438 #1438
[mk-proof] #3942 refl #3941
[mk-lambda] #3943 null 3 #3942
[mk-proof] #3944 proof-bind #3943
[mk-app] #3945 ~ #1443 #1443
[mk-proof] #3946 nnf-pos #3944 #3945
[mk-proof] #3947 mp~ #3569 #3946 #1443
[mk-app] #3948 = #1443 #1443
[mk-proof] #3949 refl #3948
[mk-app] #3948 ~ #1463 #1463
[mk-proof] #3949 refl #3948
[mk-lambda] #3950 null 3 #3949
[mk-proof] #3951 proof-bind #3950
[mk-app] #3952 ~ #1466 #1466
[mk-proof] #3953 nnf-pos #3951 #3952
[mk-proof] #3954 mp~ #3585 #3953 #1466
[mk-app] #3955 = #1466 #1466
[mk-proof] #3956 refl #3955
[mk-app] #3955 ~ #3594 #3594
[mk-proof] #3956 refl #3955
[mk-lambda] #3957 null 2 #3956
[mk-proof] #3958 proof-bind #3957
[mk-app] #3959 ~ #3599 #3599
[mk-proof] #3960 nnf-pos #3958 #3959
[mk-proof] #3961 mp~ #3604 #3960 #3599
[mk-app] #3962 = #3599 #3599
[mk-proof] #3963 refl #3962
[mk-app] #3962 ~ #1492 #1492
[mk-proof] #3963 refl #3962
[mk-lambda] #3964 null 2 #3963
[mk-proof] #3965 proof-bind #3964
[mk-app] #3966 ~ #1495 #1495
[mk-proof] #3967 nnf-pos #3965 #3966
[mk-proof] #3968 mp~ #2307 #3967 #1495
[mk-proof] #3969 refl #2305
[mk-app] #3969 ~ #1539 #1539
[mk-proof] #3970 refl #3969
[mk-lambda] #3971 null 3 #3970
[mk-proof] #3972 proof-bind #3971
[mk-app] #3973 ~ #1546 #1546
[mk-proof] #3974 nnf-pos #3972 #3973
[mk-proof] #3975 mp~ #3619 #3974 #1546
[mk-app] #3976 = #1546 #1546
[mk-proof] #3977 refl #3976
[mk-app] #3816 = #2350 #2350
[mk-proof] #3817 refl #3816
[mk-proof] #3816 refl #2161
[mk-proof] #3816 refl #2164
[mk-proof] #3816 refl #2167
[mk-proof] #3816 refl #2170
[mk-proof] #3816 refl #2173
[mk-app] #3816 = #2358 #2358
[mk-proof] #3817 refl #3816
[mk-proof] #3816 refl #2179
[mk-proof] #3816 refl #2182
[mk-proof] #3816 refl #2185
[mk-proof] #3816 refl #2188
[mk-proof] #3816 refl #2191
[mk-app] #3816 = #124 #124
[mk-proof] #3817 refl #3816
[mk-proof] #3816 refl #2197
[mk-proof] #3816 refl #2200
[mk-proof] #3816 refl #2203
[mk-app] #3816 or #135 #157
[mk-app] #3817 not #3816
[inst-discovered] theory-solving 0x0 basic# ; #160
[mk-app] #3818 = #160 #3817
[mk-proof] #3819 rewrite #3818
[instance] 0x0 #3818
[end-of-instance]
[mk-app] #3820 not #3817
[mk-app] #3821 = #187 #3820
[mk-proof] #3976 monotonicity #3819 #3821
[inst-discovered] theory-solving 0x0 basic# ; #3820
[mk-app] #3977 = #3820 #3816
[mk-proof] #3978 rewrite #3977
[instance] 0x0 #3977
[end-of-instance]
[mk-app] #3979 = #187 #3816
[mk-proof] #3980 trans #3976 #3978 #3979
[mk-app] #3981 or #3816 #177
[mk-app] #3982 = #188 #3981
[mk-proof] #3983 monotonicity #3980 #3982
[mk-app] #3984 or #135 #157 #177
[inst-discovered] theory-solving 0x0 basic# ; #3981
[mk-app] #3985 = #3981 #3984
[mk-proof] #3986 rewrite #3985
[instance] 0x0 #3985
[end-of-instance]
[mk-app] #3987 = #188 #3984
[mk-proof] #3988 trans #3983 #3986 #3987
[mk-quant] #3989 k!150 2 #167 #3984
[attach-var-names] #3989 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #3990 null 2 #3988
[mk-proof] #3991 proof-bind #3990
[mk-app] #3992 = #193 #3989
[mk-proof] #3993 quant-intro #3991 #3992
[mk-proof] #3994 mp #3731 #3993 #3989
[mk-app] #3995 not #207
[mk-app] #3996 not #210
[mk-app] #3997 or #3995 #3996
[mk-app] #3998 not #3997
[inst-discovered] theory-solving 0x0 basic# ; #213
[mk-app] #3999 = #213 #3998
[mk-proof] #4000 rewrite #3999
[instance] 0x0 #3999
[end-of-instance]
[mk-quant] #4001 k!156 2 #204 #3998
[attach-var-names] #4001 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #4002 null 2 #4000
[mk-proof] #4003 proof-bind #4002
[mk-app] #4004 = #216 #4001
[mk-proof] #4005 quant-intro #4003 #4004
[mk-proof] #4006 mp #3738 #4005 #4001
[mk-app] #4007 = #2972 #2972
[mk-proof] #4008 refl #4007
[mk-app] #4007 = #237 #237
[mk-proof] #4008 refl #4007
[mk-app] #4007 = #263 #263
[mk-proof] #4008 refl #4007
[mk-app] #4007 or #157 #270 #294 #619
[mk-app] #4008 not #4007
[inst-discovered] theory-solving 0x0 basic# ; #318
[mk-app] #4009 = #318 #4008
[mk-proof] #4010 rewrite #4009
[instance] 0x0 #4009
[end-of-instance]
[mk-app] #4011 not #4008
[mk-app] #4012 = #326 #4011
[mk-proof] #4013 monotonicity #4010 #4012
[inst-discovered] theory-solving 0x0 basic# ; #4011
[mk-app] #4014 = #4011 #4007
[mk-proof] #4015 rewrite #4014
[instance] 0x0 #4014
[end-of-instance]
[mk-app] #4016 = #326 #4007
[mk-proof] #4017 trans #4013 #4015 #4016
[mk-app] #4018 or #4007 #2394
[mk-app] #4019 = #3024 #4018
[mk-proof] #4020 monotonicity #4017 #4019
[mk-app] #4021 or #157 #270 #294 #619 #2394
[inst-discovered] theory-solving 0x0 basic# ; #4018
[mk-app] #4022 = #4018 #4021
[mk-proof] #4023 rewrite #4022
[instance] 0x0 #4022
[end-of-instance]
[mk-app] #4024 = #3024 #4021
[mk-proof] #4025 trans #4020 #4023 #4024
[mk-quant] #4026 k!179 3 #283 #284 #4021
[attach-var-names] #4026 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #4027 null 3 #4025
[mk-proof] #4028 proof-bind #4027
[mk-app] #4029 = #3027 #4026
[mk-proof] #4030 quant-intro #4028 #4029
[mk-proof] #4031 mp #3766 #4030 #4026
[mk-app] #4032 or #157 #270 #299 #356
[mk-app] #4033 not #4032
[inst-discovered] theory-solving 0x0 basic# ; #380
[mk-app] #4034 = #380 #4033
[mk-proof] #4035 rewrite #4034
[instance] 0x0 #4034
[end-of-instance]
[mk-app] #4036 not #4033
[mk-app] #4037 = #388 #4036
[mk-proof] #4038 monotonicity #4035 #4037
[inst-discovered] theory-solving 0x0 basic# ; #4036
[mk-app] #4039 = #4036 #4032
[mk-proof] #4040 rewrite #4039
[instance] 0x0 #4039
[end-of-instance]
[mk-app] #4041 = #388 #4032
[mk-proof] #4042 trans #4038 #4040 #4041
[mk-app] #4043 not #3057
[mk-app] #4044 not #2425
[mk-app] #4045 or #4043 #4044
[mk-app] #4046 not #4045
[inst-discovered] theory-solving 0x0 basic# ; #3062
[mk-app] #4047 = #3062 #4046
[mk-proof] #4048 rewrite #4047
[instance] 0x0 #4047
[end-of-instance]
[mk-app] #4049 or #4032 #4046
[mk-app] #4050 = #3065 #4049
[mk-proof] #4051 monotonicity #4042 #4048 #4050
[mk-app] #4052 or #157 #270 #299 #356 #4046
[inst-discovered] theory-solving 0x0 basic# ; #4049
[mk-app] #4053 = #4049 #4052
[mk-proof] #4054 rewrite #4053
[instance] 0x0 #4053
[end-of-instance]
[mk-app] #4055 = #3065 #4052
[mk-proof] #4056 trans #4051 #4054 #4055
[mk-quant] #4057 k!193 3 #283 #4052
[attach-var-names] #4057 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #4058 null 3 #4056
[mk-proof] #4059 proof-bind #4058
[mk-app] #4060 = #3068 #4057
[mk-proof] #4061 quant-intro #4059 #4060
[mk-proof] #4062 mp #3773 #4061 #4057
[mk-app] #4063 or #157 #270 #419 #619
[mk-app] #4064 not #4063
[inst-discovered] theory-solving 0x0 basic# ; #443
[mk-app] #4065 = #443 #4064
[mk-proof] #4066 rewrite #4065
[instance] 0x0 #4065
[end-of-instance]
[mk-app] #4067 not #4064
[mk-app] #4068 = #451 #4067
[mk-proof] #4069 monotonicity #4066 #4068
[inst-discovered] theory-solving 0x0 basic# ; #4067
[mk-app] #4070 = #4067 #4063
[mk-proof] #4071 rewrite #4070
[instance] 0x0 #4070
[end-of-instance]
[mk-app] #4072 = #451 #4063
[mk-proof] #4073 trans #4069 #4071 #4072
[mk-app] #4074 not #3095
[mk-app] #4075 not #2458
[mk-app] #4076 or #4074 #4075
[mk-app] #4077 not #4076
[inst-discovered] theory-solving 0x0 basic# ; #3100
[mk-app] #4078 = #3100 #4077
[mk-proof] #4079 rewrite #4078
[instance] 0x0 #4078
[end-of-instance]
[mk-app] #4080 or #4063 #4077
[mk-app] #4081 = #3103 #4080
[mk-proof] #4082 monotonicity #4073 #4079 #4081
[mk-app] #4083 or #157 #270 #419 #619 #4077
[inst-discovered] theory-solving 0x0 basic# ; #4080
[mk-app] #4084 = #4080 #4083
[mk-proof] #4085 rewrite #4084
[instance] 0x0 #4084
[end-of-instance]
[mk-app] #4086 = #3103 #4083
[mk-proof] #4087 trans #4082 #4085 #4086
[mk-quant] #4088 k!207 3 #412 #4083
[attach-var-names] #4088 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #4089 null 3 #4087
[mk-proof] #4090 proof-bind #4089
[mk-app] #4091 = #3106 #4088
[mk-proof] #4092 quant-intro #4090 #4091
[mk-proof] #4093 mp #3780 #4092 #4088
[mk-app] #4094 not #475
[mk-app] #4095 or #4094 #481
[mk-app] #4096 not #4095
[inst-discovered] theory-solving 0x0 basic# ; #490
[mk-app] #4097 = #490 #4096
[mk-proof] #4098 rewrite #4097
[instance] 0x0 #4097
[end-of-instance]
[mk-app] #4099 not #4096
[mk-app] #4100 = #496 #4099
[mk-proof] #4101 monotonicity #4098 #4100
[inst-discovered] theory-solving 0x0 basic# ; #4099
[mk-app] #4102 = #4099 #4095
[mk-proof] #4103 rewrite #4102
[instance] 0x0 #4102
[end-of-instance]
[mk-app] #4104 = #496 #4095
[mk-proof] #4105 trans #4101 #4103 #4104
[mk-app] #4106 or #4095 #3133
[mk-app] #4107 = #3138 #4106
[mk-proof] #4108 monotonicity #4105 #4107
[mk-app] #4109 or #481 #3133 #4094
[inst-discovered] theory-solving 0x0 basic# ; #4106
[mk-app] #4110 = #4106 #4109
[mk-proof] #4111 rewrite #4110
[instance] 0x0 #4110
[end-of-instance]
[mk-app] #4112 = #3138 #4109
[mk-proof] #4113 trans #4108 #4111 #4112
[mk-quant] #4114 k!214 3 #470 #471 #4109
[attach-var-names] #4114 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4115 null 3 #4113
[mk-proof] #4116 proof-bind #4115
[mk-app] #4117 = #3141 #4114
[mk-proof] #4118 quant-intro #4116 #4117
[mk-proof] #4119 mp #3787 #4118 #4114
[mk-app] #4120 or #619 #532
[mk-app] #4121 not #4120
[inst-discovered] theory-solving 0x0 basic# ; #542
[mk-app] #4122 = #542 #4121
[mk-proof] #4123 rewrite #4122
[instance] 0x0 #4122
[end-of-instance]
[mk-app] #4124 not #4121
[mk-app] #4125 = #557 #4124
[mk-proof] #4126 monotonicity #4123 #4125
[inst-discovered] theory-solving 0x0 basic# ; #4124
[mk-app] #4127 = #4124 #4120
[mk-proof] #4128 rewrite #4127
[instance] 0x0 #4127
[end-of-instance]
[mk-app] #4129 = #557 #4120
[mk-proof] #4130 trans #4126 #4128 #4129
[mk-app] #4131 not #3190
[mk-app] #4132 not #3193
[mk-app] #4133 or #4131 #4132
[mk-app] #4134 not #4133
[inst-discovered] theory-solving 0x0 basic# ; #3196
[mk-app] #4135 = #3196 #4134
[mk-proof] #4136 rewrite #4135
[instance] 0x0 #4135
[end-of-instance]
[mk-app] #4137 or #4120 #4134
[mk-app] #4138 = #3199 #4137
[mk-proof] #4139 monotonicity #4130 #4136 #4138
[mk-app] #4140 or #532 #619 #4134
[inst-discovered] theory-solving 0x0 basic# ; #4137
[mk-app] #4141 = #4137 #4140
[mk-proof] #4142 rewrite #4141
[instance] 0x0 #4141
[end-of-instance]
[mk-app] #4143 = #3199 #4140
[mk-proof] #4144 trans #4139 #4142 #4143
[mk-quant] #4145 k!223 4 #524 #525 #4140
[attach-var-names] #4145 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4146 null 4 #4144
[mk-proof] #4147 proof-bind #4146
[mk-app] #4148 = #3202 #4145
[mk-proof] #4149 quant-intro #4147 #4148
[mk-proof] #4150 mp #3794 #4149 #4145
[mk-app] #4151 not #3221
[mk-app] #4152 not #3236
[mk-app] #4153 or #4151 #4152
[mk-app] #4154 not #4153
[inst-discovered] theory-solving 0x0 basic# ; #3239
[mk-app] #4155 = #3239 #4154
[mk-proof] #4156 rewrite #4155
[instance] 0x0 #4155
[end-of-instance]
[mk-app] #4157 or #619 #4154
[mk-app] #4158 = #3242 #4157
[mk-proof] #4159 monotonicity #4156 #4158
[mk-app] #4160 and #4157 #635
[mk-app] #4161 = #3245 #4160
[mk-proof] #4162 monotonicity #4159 #4161
[mk-app] #4163 not #4157
[mk-app] #4164 not #635
[mk-app] #4165 or #4163 #4164
[mk-app] #4166 not #4165
[inst-discovered] theory-solving 0x0 basic# ; #4160
[mk-app] #4167 = #4160 #4166
[mk-proof] #4168 rewrite #4167
[instance] 0x0 #4167
[end-of-instance]
[mk-app] #4169 = #3245 #4166
[mk-proof] #4170 trans #4162 #4168 #4169
[mk-quant] #4171 k!234 2 #582 #583 #4166
[attach-var-names] #4171 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4172 null 2 #4170
[mk-proof] #4173 proof-bind #4172
[mk-app] #4174 = #3248 #4171
[mk-proof] #4175 quant-intro #4173 #4174
[mk-proof] #4176 mp #3801 #4175 #4171
[mk-app] #4177 or #619 #663 #294
[mk-app] #4178 not #4177
[inst-discovered] theory-solving 0x0 basic# ; #677
[mk-app] #4179 = #677 #4178
[mk-proof] #4180 rewrite #4179
[instance] 0x0 #4179
[end-of-instance]
[mk-app] #4181 not #4178
[mk-app] #4182 = #685 #4181
[mk-proof] #4183 monotonicity #4180 #4182
[inst-discovered] theory-solving 0x0 basic# ; #4181
[mk-app] #4184 = #4181 #4177
[mk-proof] #4185 rewrite #4184
[instance] 0x0 #4184
[end-of-instance]
[mk-app] #4186 = #685 #4177
[mk-proof] #4187 trans #4183 #4185 #4186
[mk-app] #4188 or #4177 #3266
[mk-app] #4189 = #3271 #4188
[mk-proof] #4190 monotonicity #4187 #4189
[mk-app] #4191 or #294 #619 #663 #3266
[inst-discovered] theory-solving 0x0 basic# ; #4188
[mk-app] #4192 = #4188 #4191
[mk-proof] #4193 rewrite #4192
[instance] 0x0 #4192
[end-of-instance]
[mk-app] #4194 = #3271 #4191
[mk-proof] #4195 trans #4190 #4193 #4194
[mk-quant] #4196 k!241 3 #656 #657 #4191
[attach-var-names] #4196 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4197 null 3 #4195
[mk-proof] #4198 proof-bind #4197
[mk-app] #4199 = #3274 #4196
[mk-proof] #4200 quant-intro #4198 #4199
[mk-proof] #4201 mp #3808 #4200 #4196
[inst-discovered] theory-solving 0x0 basic# ; #741
[instance] 0x0 #2604
[end-of-instance]
[mk-app] #4202 = #746 #746
[mk-proof] #4203 monotonicity #2605 #4202
[mk-app] #4204 not #733
[mk-app] #4205 not #741
[mk-app] #4206 or #4204 #4205
[mk-app] #4207 not #4206
[inst-discovered] theory-solving 0x0 basic# ; #746
[mk-app] #4208 = #746 #4207
[mk-proof] #4209 rewrite #4208
[instance] 0x0 #4208
[end-of-instance]
[mk-proof] #4210 trans #4203 #4209 #4208
[mk-app] #4211 or #619 #4207
[mk-app] #4212 = #752 #4211
[mk-proof] #4213 monotonicity #4210 #4212
[mk-app] #4214 and #4211 #3303
[mk-app] #4215 = #3306 #4214
[mk-proof] #4216 monotonicity #4213 #4215
[mk-app] #4217 not #4211
[mk-app] #4218 not #3303
[mk-app] #4219 or #4217 #4218
[mk-app] #4220 not #4219
[inst-discovered] theory-solving 0x0 basic# ; #4214
[mk-app] #4221 = #4214 #4220
[mk-proof] #4222 rewrite #4221
[instance] 0x0 #4221
[end-of-instance]
[mk-app] #4223 = #3306 #4220
[mk-proof] #4224 trans #4216 #4222 #4223
[mk-quant] #4225 k!254 2 #709 #710 #4220
[attach-var-names] #4225 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4226 null 2 #4224
[mk-proof] #4227 proof-bind #4226
[mk-app] #4228 = #3309 #4225
[mk-proof] #4229 quant-intro #4227 #4228
[mk-proof] #4230 mp #3815 #4229 #4225
[mk-app] #4231 or #619 #791 #813
[mk-app] #4232 not #4231
[inst-discovered] theory-solving 0x0 basic# ; #828
[mk-app] #4233 = #828 #4232
[mk-proof] #4234 rewrite #4233
[instance] 0x0 #4233
[end-of-instance]
[mk-app] #4235 not #4232
[mk-app] #4236 = #836 #4235
[mk-proof] #4237 monotonicity #4234 #4236
[inst-discovered] theory-solving 0x0 basic# ; #4235
[mk-app] #4238 = #4235 #4231
[mk-proof] #4239 rewrite #4238
[instance] 0x0 #4238
[end-of-instance]
[mk-app] #4240 = #836 #4231
[mk-proof] #4241 trans #4237 #4239 #4240
[mk-app] #4242 not #3339
[mk-app] #4243 not #2648
[mk-app] #4244 or #4242 #4243
[mk-app] #4245 not #4244
[inst-discovered] theory-solving 0x0 basic# ; #3344
[mk-app] #4246 = #3344 #4245
[mk-proof] #4247 rewrite #4246
[instance] 0x0 #4246
[end-of-instance]
[mk-app] #4248 or #4231 #4245
[mk-app] #4249 = #3347 #4248
[mk-proof] #4250 monotonicity #4241 #4247 #4249
[mk-app] #4251 or #619 #791 #813 #4245
[inst-discovered] theory-solving 0x0 basic# ; #4248
[mk-app] #4252 = #4248 #4251
[mk-proof] #4253 rewrite #4252
[instance] 0x0 #4252
[end-of-instance]
[mk-app] #4254 = #3347 #4251
[mk-proof] #4255 trans #4250 #4253 #4254
[mk-quant] #4256 k!262 3 #788 #4251
[attach-var-names] #4256 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4257 null 3 #4255
[mk-proof] #4258 proof-bind #4257
[mk-app] #4259 = #3350 #4256
[mk-proof] #4260 quant-intro #4258 #4259
[mk-proof] #4261 mp #3828 #4260 #4256
[mk-app] #4262 or #294 #666 #791
[mk-app] #4263 not #4262
[inst-discovered] theory-solving 0x0 basic# ; #866
[mk-app] #4264 = #866 #4263
[mk-proof] #4265 rewrite #4264
[instance] 0x0 #4264
[end-of-instance]
[mk-app] #4266 not #4263
[mk-app] #4267 = #874 #4266
[mk-proof] #4268 monotonicity #4265 #4267
[inst-discovered] theory-solving 0x0 basic# ; #4266
[mk-app] #4269 = #4266 #4262
[mk-proof] #4270 rewrite #4269
[instance] 0x0 #4269
[end-of-instance]
[mk-app] #4271 = #874 #4262
[mk-proof] #4272 trans #4268 #4270 #4271
[mk-app] #4273 not #3368
[mk-app] #4274 not #3381
[mk-app] #4275 or #4273 #4274
[mk-app] #4276 not #4275
[inst-discovered] theory-solving 0x0 basic# ; #3386
[mk-app] #4277 = #3386 #4276
[mk-proof] #4278 rewrite #4277
[instance] 0x0 #4277
[end-of-instance]
[mk-app] #4279 or #4262 #4276
[mk-app] #4280 = #3389 #4279
[mk-proof] #4281 monotonicity #4272 #4278 #4280
[mk-app] #4282 or #294 #666 #791 #4276
[inst-discovered] theory-solving 0x0 basic# ; #4279
[mk-app] #4283 = #4279 #4282
[mk-proof] #4284 rewrite #4283
[instance] 0x0 #4283
[end-of-instance]
[mk-app] #4285 = #3389 #4282
[mk-proof] #4286 trans #4281 #4284 #4285
[mk-quant] #4287 k!270 3 #857 #4282
[attach-var-names] #4287 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4288 null 3 #4286
[mk-proof] #4289 proof-bind #4288
[mk-app] #4290 = #3392 #4287
[mk-proof] #4291 quant-intro #4289 #4290
[mk-proof] #4292 mp #3835 #4291 #4287
[mk-app] #4293 or #896 #937
[mk-app] #4294 not #4293
[inst-discovered] theory-solving 0x0 basic# ; #903
[mk-app] #4295 = #903 #4294
[mk-proof] #4296 rewrite #4295
[instance] 0x0 #4295
[end-of-instance]
[mk-app] #4297 not #4294
[mk-app] #4298 = #909 #4297
[mk-proof] #4299 monotonicity #4296 #4298
[inst-discovered] theory-solving 0x0 basic# ; #4297
[mk-app] #4300 = #4297 #4293
[mk-proof] #4301 rewrite #4300
[instance] 0x0 #4300
[end-of-instance]
[mk-app] #4302 = #909 #4293
[mk-proof] #4303 trans #4299 #4301 #4302
[mk-app] #4304 or #4293 #891
[mk-app] #4305 = #910 #4304
[mk-proof] #4306 monotonicity #4303 #4305
[mk-app] #4307 or #891 #896 #937
[inst-discovered] theory-solving 0x0 basic# ; #4304
[mk-app] #4308 = #4304 #4307
[mk-proof] #4309 rewrite #4308
[instance] 0x0 #4308
[end-of-instance]
[mk-app] #4310 = #910 #4307
[mk-proof] #4311 trans #4306 #4309 #4310
[mk-quant] #4312 k!276 3 #893 #4307
[attach-var-names] #4312 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #4313 null 3 #4311
[mk-proof] #4314 proof-bind #4313
[mk-app] #4315 = #915 #4312
[mk-proof] #4316 quant-intro #4314 #4315
[mk-proof] #4317 mp #3842 #4316 #4312
[mk-app] #4318 or #896 #900 #356
[mk-app] #4319 not #4318
[inst-discovered] theory-solving 0x0 basic# ; #948
[mk-app] #4320 = #948 #4319
[mk-proof] #4321 rewrite #4320
[instance] 0x0 #4320
[end-of-instance]
[mk-app] #4322 not #4319
[mk-app] #4323 = #956 #4322
[mk-proof] #4324 monotonicity #4321 #4323
[inst-discovered] theory-solving 0x0 basic# ; #4322
[mk-app] #4325 = #4322 #4318
[mk-proof] #4326 rewrite #4325
[instance] 0x0 #4325
[end-of-instance]
[mk-app] #4327 = #956 #4318
[mk-proof] #4328 trans #4324 #4326 #4327
[mk-app] #4329 not #927
[mk-app] #4330 or #4043 #4329
[mk-app] #4331 not #4330
[inst-discovered] theory-solving 0x0 basic# ; #3402
[mk-app] #4332 = #3402 #4331
[mk-proof] #4333 rewrite #4332
[instance] 0x0 #4332
[end-of-instance]
[mk-app] #4334 or #4318 #4331
[mk-app] #4335 = #3405 #4334
[mk-proof] #4336 monotonicity #4328 #4333 #4335
[mk-app] #4337 or #356 #896 #900 #4331
[inst-discovered] theory-solving 0x0 basic# ; #4334
[mk-app] #4338 = #4334 #4337
[mk-proof] #4339 rewrite #4338
[instance] 0x0 #4338
[end-of-instance]
[mk-app] #4340 = #3405 #4337
[mk-proof] #4341 trans #4336 #4339 #4340
[mk-quant] #4342 k!286 3 #893 #4337
[attach-var-names] #4342 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #4343 null 3 #4341
[mk-proof] #4344 proof-bind #4343
[mk-app] #4345 = #3408 #4342
[mk-proof] #4346 quant-intro #4344 #4345
[mk-proof] #4347 mp #3849 #4346 #4342
[mk-app] #4348 or #4293 #971
[mk-app] #4349 = #979 #4348
[mk-proof] #4350 monotonicity #4303 #4349
[mk-app] #4351 or #896 #937 #971
[inst-discovered] theory-solving 0x0 basic# ; #4348
[mk-app] #4352 = #4348 #4351
[mk-proof] #4353 rewrite #4352
[instance] 0x0 #4352
[end-of-instance]
[mk-app] #4354 = #979 #4351
[mk-proof] #4355 trans #4350 #4353 #4354
[mk-quant] #4356 k!292 3 #973 #4351
[attach-var-names] #4356 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #4357 null 3 #4355
[mk-proof] #4358 proof-bind #4357
[mk-app] #4359 = #984 #4356
[mk-proof] #4360 quant-intro #4358 #4359
[mk-proof] #4361 mp #3856 #4360 #4356
[mk-app] #4362 or #896 #900
[mk-app] #4363 not #4362
[inst-discovered] theory-solving 0x0 basic# ; #997
[mk-app] #4364 = #997 #4363
[mk-proof] #4365 rewrite #4364
[instance] 0x0 #4364
[end-of-instance]
[mk-app] #4366 not #4363
[mk-app] #4367 = #1003 #4366
[mk-proof] #4368 monotonicity #4365 #4367
[inst-discovered] theory-solving 0x0 basic# ; #4366
[mk-app] #4369 = #4366 #4362
[mk-proof] #4370 rewrite #4369
[instance] 0x0 #4369
[end-of-instance]
[mk-app] #4371 = #1003 #4362
[mk-proof] #4372 trans #4368 #4370 #4371
[mk-app] #4373 not #992
[mk-app] #4374 or #4043 #4373
[mk-app] #4375 not #4374
[inst-discovered] theory-solving 0x0 basic# ; #3414
[mk-app] #4376 = #3414 #4375
[mk-proof] #4377 rewrite #4376
[instance] 0x0 #4376
[end-of-instance]
[mk-app] #4378 or #4362 #4375
[mk-app] #4379 = #3417 #4378
[mk-proof] #4380 monotonicity #4372 #4377 #4379
[mk-app] #4381 or #896 #900 #4375
[inst-discovered] theory-solving 0x0 basic# ; #4378
[mk-app] #4382 = #4378 #4381
[mk-proof] #4383 rewrite #4382
[instance] 0x0 #4382
[end-of-instance]
[mk-app] #4384 = #3417 #4381
[mk-proof] #4385 trans #4380 #4383 #4384
[mk-quant] #4386 k!300 3 #973 #4381
[attach-var-names] #4386 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #4387 null 3 #4385
[mk-proof] #4388 proof-bind #4387
[mk-app] #4389 = #3420 #4386
[mk-proof] #4390 quant-intro #4388 #4389
[mk-proof] #4391 mp #3863 #4390 #4386
[mk-proof] #4392 refl #2263
[mk-proof] #4392 refl #2266
[mk-app] #4392 = #1058 #1058
[mk-proof] #4393 refl #4392
[mk-app] #4392 = #1076 #1076
[mk-proof] #4393 refl #4392
[mk-app] #4392 not #1095
[mk-app] #4393 not #3434
[mk-app] #4394 or #1103 #4392 #4393
[mk-app] #4395 not #4394
[inst-discovered] theory-solving 0x0 basic# ; #3439
[mk-app] #4396 = #3439 #4395
[mk-proof] #4397 rewrite #4396
[instance] 0x0 #4396
[end-of-instance]
[mk-app] #4398 or #1125 #4395
[mk-app] #4399 = #3442 #4398
[mk-proof] #4400 monotonicity #4397 #4399
[mk-quant] #4401 k!326 2 #1091 #4398
[attach-var-names] #4401 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4402 null 2 #4400
[mk-proof] #4403 proof-bind #4402
[mk-app] #4404 = #3445 #4401
[mk-proof] #4405 quant-intro #4403 #4404
[mk-proof] #4406 mp #3898 #4405 #4401
[mk-app] #4407 not #3458
[mk-app] #4408 or #294 #619 #4407
[mk-app] #4409 not #4408
[inst-discovered] theory-solving 0x0 basic# ; #3463
[mk-app] #4410 = #3463 #4409
[mk-proof] #4411 rewrite #4410
[instance] 0x0 #4410
[end-of-instance]
[mk-app] #4412 not #4409
[mk-app] #4413 = #3466 #4412
[mk-proof] #4414 monotonicity #4411 #4413
[inst-discovered] theory-solving 0x0 basic# ; #4412
[mk-app] #4415 = #4412 #4408
[mk-proof] #4416 rewrite #4415
[instance] 0x0 #4415
[end-of-instance]
[mk-app] #4417 = #3466 #4408
[mk-proof] #4418 trans #4414 #4416 #4417
[mk-app] #4419 or #4408 #1140
[mk-app] #4420 = #3469 #4419
[mk-proof] #4421 monotonicity #4418 #4420
[mk-app] #4422 or #294 #619 #1140 #4407
[inst-discovered] theory-solving 0x0 basic# ; #4419
[mk-app] #4423 = #4419 #4422
[mk-proof] #4424 rewrite #4423
[instance] 0x0 #4423
[end-of-instance]
[mk-app] #4425 = #3469 #4422
[mk-proof] #4426 trans #4421 #4424 #4425
[mk-quant] #4427 k!332 3 #1142 #4422
[attach-var-names] #4427 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4428 null 3 #4426
[mk-proof] #4429 proof-bind #4428
[mk-app] #4430 = #3472 #4427
[mk-proof] #4431 quant-intro #4429 #4430
[mk-proof] #4432 mp #3905 #4431 #4427
[mk-app] #4433 or #619 #419
[mk-app] #4434 not #4433
[inst-discovered] theory-solving 0x0 basic# ; #429
[mk-app] #4435 = #429 #4434
[mk-proof] #4436 rewrite #4435
[instance] 0x0 #4435
[end-of-instance]
[mk-app] #4437 not #4434
[mk-app] #4438 = #1179 #4437
[mk-proof] #4439 monotonicity #4436 #4438
[inst-discovered] theory-solving 0x0 basic# ; #4437
[mk-app] #4440 = #4437 #4433
[mk-proof] #4441 rewrite #4440
[instance] 0x0 #4440
[end-of-instance]
[mk-app] #4442 = #1179 #4433
[mk-proof] #4443 trans #4439 #4441 #4442
[mk-app] #4444 or #4433 #1171
[mk-app] #4445 = #1180 #4444
[mk-proof] #4446 monotonicity #4443 #4445
[mk-app] #4447 or #419 #619 #1171
[inst-discovered] theory-solving 0x0 basic# ; #4444
[mk-app] #4448 = #4444 #4447
[mk-proof] #4449 rewrite #4448
[instance] 0x0 #4448
[end-of-instance]
[mk-app] #4450 = #1180 #4447
[mk-proof] #4451 trans #4446 #4449 #4450
[mk-quant] #4452 k!338 2 #1173 #4447
[attach-var-names] #4452 (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #4453 null 2 #4451
[mk-proof] #4454 proof-bind #4453
[mk-app] #4455 = #1185 #4452
[mk-proof] #4456 quant-intro #4454 #4455
[mk-proof] #4457 mp #3912 #4456 #4452
[mk-app] #4458 or #1194 #1195
[mk-app] #4459 not #4458
[inst-discovered] theory-solving 0x0 basic# ; #1193
[mk-app] #4460 = #1193 #4459
[mk-proof] #4461 rewrite #4460
[instance] 0x0 #4460
[end-of-instance]
[mk-app] #4462 or #1191 #1192 #3496
[mk-app] #4463 not #4462
[inst-discovered] theory-solving 0x0 basic# ; #3504
[mk-app] #4464 = #3504 #4463
[mk-proof] #4465 rewrite #4464
[instance] 0x0 #4464
[end-of-instance]
[mk-app] #4466 not #2819
[mk-app] #4467 not #1224
[mk-app] #4468 or #1191 #1192 #1232 #2824 #3501 #4466 #4467
[mk-app] #4469 not #4468
[inst-discovered] theory-solving 0x0 basic# ; #3507
[mk-app] #4470 = #3507 #4469
[mk-proof] #4471 rewrite #4470
[instance] 0x0 #4470
[end-of-instance]
[mk-app] #4472 or #4459 #4463 #4469
[mk-app] #4473 = #3510 #4472
[mk-proof] #4474 monotonicity #4461 #4465 #4471 #4473
[mk-quant] #4475 k!363 2 #1217 #4472
[attach-var-names] #4475 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #4476 null 2 #4474
[mk-proof] #4477 proof-bind #4476
[mk-app] #4478 = #3513 #4475
[mk-proof] #4479 quant-intro #4477 #4478
[mk-proof] #4480 mp #3919 #4479 #4475
[mk-proof] #4481 refl #2287
[mk-app] #4481 = #2848 #2848
[mk-proof] #4482 refl #4481
[mk-app] #4481 not #1363
[mk-app] #4482 not #1371
[mk-app] #4483 or #4481 #4482
[mk-app] #4484 not #4483
[inst-discovered] theory-solving 0x0 basic# ; #1376
[mk-app] #4485 = #1376 #4484
[mk-proof] #4486 rewrite #4485
[instance] 0x0 #4485
[end-of-instance]
[mk-quant] #4487 $Seq[Int]_prog.ranged_seq_length 2 #1329 #4484
[attach-var-names] #4487 (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #4488 null 2 #4486
[mk-proof] #4489 proof-bind #4488
[mk-app] #4490 = #1379 #4487
[mk-proof] #4491 quant-intro #4489 #4490
[mk-proof] #4492 mp #3940 #4491 #4487
[mk-app] #4493 or #619 #1410
[mk-app] #4494 not #4493
[inst-discovered] theory-solving 0x0 basic# ; #1418
[mk-app] #4495 = #1418 #4494
[mk-proof] #4496 rewrite #4495
[instance] 0x0 #4495
[end-of-instance]
[mk-app] #4497 not #4494
[mk-app] #4498 = #1437 #4497
[mk-proof] #4499 monotonicity #4496 #4498
[inst-discovered] theory-solving 0x0 basic# ; #4497
[mk-app] #4500 = #4497 #4493
[mk-proof] #4501 rewrite #4500
[instance] 0x0 #4500
[end-of-instance]
[mk-app] #4502 = #1437 #4493
[mk-proof] #4503 trans #4499 #4501 #4502
[mk-app] #4504 or #4493 #1427
[mk-app] #4505 = #1438 #4504
[mk-proof] #4506 monotonicity #4503 #4505
[mk-app] #4507 or #619 #1410 #1427
[inst-discovered] theory-solving 0x0 basic# ; #4504
[mk-app] #4508 = #4504 #4507
[mk-proof] #4509 rewrite #4508
[instance] 0x0 #4508
[end-of-instance]
[mk-app] #4510 = #1438 #4507
[mk-proof] #4511 trans #4506 #4509 #4510
[mk-quant] #4512 $Seq[Int]_prog.ranged_seq_index 3 #1393 #4507
[attach-var-names] #4512 (|j| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #4513 null 3 #4511
[mk-proof] #4514 proof-bind #4513
[mk-app] #4515 = #1443 #4512
[mk-proof] #4516 quant-intro #4514 #4515
[mk-proof] #4517 mp #3947 #4516 #4512
[mk-app] #4518 not #1456
[mk-app] #4519 or #4518 #663
[mk-app] #4520 not #4519
[inst-discovered] theory-solving 0x0 basic# ; #1460
[mk-app] #4521 = #1460 #4520
[mk-proof] #4522 rewrite #4521
[instance] 0x0 #4521
[end-of-instance]
[mk-app] #4523 = #1449 #4520
[mk-app] #4524 = #1463 #4523
[mk-proof] #4525 monotonicity #4522 #4524
[mk-quant] #4526 $Seq[Int]_prog.ranged_seq_contains 3 #1453 #4523
[attach-var-names] #4526 (|v| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #4527 null 3 #4525
[mk-proof] #4528 proof-bind #4527
[mk-app] #4529 = #1466 #4526
[mk-proof] #4530 quant-intro #4528 #4529
[mk-proof] #4531 mp #3954 #4530 #4526
[mk-app] #4532 = #3599 #3599
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2305
[mk-app] #4532 = #1546 #1546
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #2350 #2350
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3678 #4533 #2350
[mk-proof] #4532 mp #3621 #2162 #50
[mk-proof] #4532 mp #3628 #2165 #57
[mk-proof] #4532 mp #3635 #2168 #63
[mk-proof] #4532 mp #3642 #2171 #70
[mk-proof] #4532 mp #3649 #2174 #76
[mk-app] #4532 = #2358 #2358
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3656 #4533 #2358
[mk-proof] #4532 mp #3663 #2180 #88
[mk-proof] #4532 mp #3682 #2183 #95
[mk-proof] #4532 mp #3689 #2186 #101
[mk-proof] #4532 mp #3696 #2189 #108
[mk-proof] #4532 mp #3703 #2192 #114
[mk-app] #4532 = #124 #124
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3710 #4533 #124
[mk-proof] #4532 mp #2199 #2198 #132
[mk-proof] #4532 mp #3717 #2201 #143
[mk-proof] #4532 mp #3724 #2204 #154
[mk-app] #4532 = #3989 #3989
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3994 #4533 #3989
[mk-app] #4532 = #4001 #4001
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4006 #4533 #4001
[mk-app] #4532 = #2972 #2972
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3745 #4533 #2972
[mk-app] #4532 = #237 #237
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3752 #4533 #237
[mk-app] #4532 = #263 #263
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3759 #4533 #263
[mk-app] #4532 = #4026 #4026
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4031 #4533 #4026
[mk-app] #4532 = #4057 #4057
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4062 #4533 #4057
[mk-app] #4532 = #4088 #4088
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4093 #4533 #4088
[mk-app] #4532 = #4114 #4114
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4119 #4533 #4114
[mk-app] #4532 = #4145 #4145
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4150 #4533 #4145
[mk-app] #4532 = #4171 #4171
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4176 #4533 #4171
[mk-app] #4532 = #4196 #4196
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4201 #4533 #4196
[mk-app] #4532 = #4225 #4225
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4230 #4533 #4225
[mk-app] #4532 = #4256 #4256
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4261 #4533 #4256
[mk-app] #4532 = #4287 #4287
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4292 #4533 #4287
[mk-app] #4532 = #4312 #4312
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4317 #4533 #4312
[mk-app] #4532 = #4342 #4342
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4347 #4533 #4342
[mk-app] #4532 = #4356 #4356
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4361 #4533 #4356
[mk-app] #4532 = #4386 #4386
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4391 #4533 #4386
[mk-proof] #4532 mp #3870 #2264 #1023
[mk-proof] #4532 mp #3877 #2267 #1037
[mk-app] #4532 = #1058 #1058
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3884 #4533 #1058
[mk-app] #4532 = #1076 #1076
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3891 #4533 #1076
[mk-app] #4532 = #4401 #4401
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4406 #4533 #4401
[mk-app] #4532 = #4427 #4427
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4432 #4533 #4427
[mk-app] #4532 = #4452 #4452
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4457 #4533 #4452
[mk-app] #4532 = #4475 #4475
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4480 #4533 #4475
[mk-proof] #4532 mp #3926 #2288 #1306
[mk-app] #4532 = #2848 #2848
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3933 #4533 #2848
[mk-app] #4532 = #4487 #4487
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4492 #4533 #4487
[mk-app] #4532 = #4512 #4512
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4517 #4533 #4512
[mk-app] #4532 = #4526 #4526
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #4531 #4533 #4526
[mk-app] #4532 = #3599 #3599
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3961 #4533 #3599
[mk-proof] #4532 mp #3968 #2306 #1495
[mk-app] #4532 = #1546 #1546
[mk-proof] #4533 rewrite #4532
[mk-proof] #4534 mp #3975 #4533 #1546
[mk-app] #4532 = #2350 #2350
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2161
[mk-proof] #4532 refl #2164
[mk-proof] #4532 refl #2167
[mk-proof] #4532 refl #2170
[mk-proof] #4532 refl #2173
[mk-app] #4532 = #2358 #2358
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2179
[mk-proof] #4532 refl #2182
[mk-proof] #4532 refl #2185
[mk-proof] #4532 refl #2188
[mk-proof] #4532 refl #2191
[mk-app] #4532 = #124 #124
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2197
[mk-proof] #4532 refl #2200
[mk-proof] #4532 refl #2203
[mk-app] #4532 = #3989 #3989
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4001 #4001
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #2972 #2972
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #237 #237
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #263 #263
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4026 #4026
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4057 #4057
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4088 #4088
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4114 #4114
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4145 #4145
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4171 #4171
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4196 #4196
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4225 #4225
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4256 #4256
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4287 #4287
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4312 #4312
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4342 #4342
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4356 #4356
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4386 #4386
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2263
[mk-proof] #4532 refl #2266
[mk-app] #4532 = #1058 #1058
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #1076 #1076
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4401 #4401
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4427 #4427
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4452 #4452
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4475 #4475
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2287
[mk-app] #4532 = #2848 #2848
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4487 #4487
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4512 #4512
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4526 #4526
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #3599 #3599
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2305
[mk-app] #4532 = #1546 #1546
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #2350 #2350
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2161
[mk-proof] #4532 refl #2164
[mk-proof] #4532 refl #2167
[mk-proof] #4532 refl #2170
[mk-proof] #4532 refl #2173
[mk-app] #4532 = #2358 #2358
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2179
[mk-proof] #4532 refl #2182
[mk-proof] #4532 refl #2185
[mk-proof] #4532 refl #2188
[mk-proof] #4532 refl #2191
[mk-app] #4532 = #124 #124
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2197
[mk-proof] #4532 refl #2200
[mk-proof] #4532 refl #2203
[mk-app] #4532 = #3989 #3989
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4001 #4001
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #2972 #2972
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #237 #237
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #263 #263
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4026 #4026
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4057 #4057
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4088 #4088
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4114 #4114
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4145 #4145
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4171 #4171
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4196 #4196
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4225 #4225
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4256 #4256
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4287 #4287
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4312 #4312
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4342 #4342
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4356 #4356
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4386 #4386
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2263
[mk-proof] #4532 refl #2266
[mk-app] #4532 = #1058 #1058
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #1076 #1076
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4401 #4401
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4427 #4427
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4452 #4452
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4475 #4475
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2287
[mk-app] #4532 = #2848 #2848
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4487 #4487
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4512 #4512
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #4526 #4526
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #3599 #3599
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2305
[mk-app] #4532 = #1546 #1546
[mk-proof] #4533 refl #4532
[mk-app] #4532 = #2350 #2350
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2161
[mk-proof] #4532 refl #2164
[mk-proof] #4532 refl #2167
[mk-proof] #4532 refl #2170
[mk-proof] #4532 refl #2173
[mk-app] #4532 = #2358 #2358
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2179
[mk-proof] #4532 refl #2182
[mk-proof] #4532 refl #2185
[mk-proof] #4532 refl #2188
[mk-proof] #4532 refl #2191
[mk-app] #4532 = #124 #124
[mk-proof] #4533 refl #4532
[mk-proof] #4532 refl #2197
[mk-proof] #4532 refl #2200
[mk-proof] #4532 refl #2203
[mk-app] #4532 = #3989 #3989
[mk-proof] #4533 refl #4532
[inst-discovered] theory-solving 0x0 basic# ; #3997
[mk-app] #4532 = #3997 #3997
[mk-proof] #4533 rewrite #4532
[instance] 0x0 #4532
[end-of-instance]
[mk-app] #4534 = #3998 #3998
[mk-proof] #4535 monotonicity #4533 #4534
[mk-app] #4536 = #4001 #4001
[mk-proof] #4537 refl #4536
[mk-app] #4536 = #2972 #2972
[mk-proof] #4537 refl #4536
[mk-app] #4536 = #237 #237
[mk-proof] #4537 refl #4536
[mk-app] #4536 = #263 #263
[mk-proof] #4537 refl #4536
[inst-discovered] theory-solving 0x0 basic# ; #4021
[mk-app] #4536 = #4021 #4021
[mk-proof] #4537 rewrite #4536
[instance] 0x0 #4536
[end-of-instance]
[mk-app] #4538 = #4026 #4026
[mk-proof] #4539 refl #4538
[inst-discovered] theory-solving 0x0 basic# ; #4045
[mk-app] #4538 = #4045 #4045
[mk-proof] #4539 rewrite #4538
[instance] 0x0 #4538
[end-of-instance]
[mk-app] #4540 = #4046 #4046
[mk-proof] #4541 monotonicity #4539 #4540
[mk-app] #4542 = #4052 #4052
[mk-proof] #4543 monotonicity #4541 #4542
[inst-discovered] theory-solving 0x0 basic# ; #4052
[mk-proof] #4544 rewrite #4542
[instance] 0x0 #4542
[end-of-instance]
[mk-proof] #4545 trans #4543 #4544 #4542
[mk-app] #4546 = #4057 #4057
[mk-proof] #4547 refl #4546
[inst-discovered] theory-solving 0x0 basic# ; #4076
[mk-app] #4546 = #4076 #4076
[mk-proof] #4547 rewrite #4546
[instance] 0x0 #4546
[end-of-instance]
[mk-app] #4548 = #4077 #4077
[mk-proof] #4549 monotonicity #4547 #4548
[mk-app] #4550 = #4083 #4083
[mk-proof] #4551 monotonicity #4549 #4550
[inst-discovered] theory-solving 0x0 basic# ; #4083
[mk-proof] #4552 rewrite #4550
[instance] 0x0 #4550
[end-of-instance]
[mk-proof] #4553 trans #4551 #4552 #4550
[mk-app] #4554 = #4088 #4088
[mk-proof] #4555 refl #4554
[inst-discovered] theory-solving 0x0 basic# ; #4109
[mk-app] #4554 = #4109 #4109
[mk-proof] #4555 rewrite #4554
[instance] 0x0 #4554
[end-of-instance]
[mk-app] #4556 = #4114 #4114
[mk-proof] #4557 refl #4556
[inst-discovered] theory-solving 0x0 basic# ; #4133
[mk-app] #4556 = #4133 #4133
[mk-proof] #4557 rewrite #4556
[instance] 0x0 #4556
[end-of-instance]
[mk-app] #4558 = #4134 #4134
[mk-proof] #4559 monotonicity #4557 #4558
[mk-app] #4560 = #4140 #4140
[mk-proof] #4561 monotonicity #4559 #4560
[inst-discovered] theory-solving 0x0 basic# ; #4140
[mk-proof] #4562 rewrite #4560
[instance] 0x0 #4560
[end-of-instance]
[mk-proof] #4563 trans #4561 #4562 #4560
[mk-app] #4564 = #4145 #4145
[mk-proof] #4565 refl #4564
[inst-discovered] theory-solving 0x0 basic# ; #4165
[mk-app] #4564 = #4165 #4165
[mk-proof] #4565 rewrite #4564
[instance] 0x0 #4564
[end-of-instance]
[mk-app] #4566 = #4166 #4166
[mk-proof] #4567 monotonicity #4565 #4566
[mk-app] #4568 = #4171 #4171
[mk-proof] #4569 refl #4568
[inst-discovered] theory-solving 0x0 basic# ; #4191
[mk-app] #4568 = #4191 #4191
[mk-proof] #4569 rewrite #4568
[instance] 0x0 #4568
[end-of-instance]
[mk-app] #4570 = #4196 #4196
[mk-proof] #4571 refl #4570
[mk-app] #4570 = #4205 #4205
[mk-proof] #4571 monotonicity #2605 #4570
[mk-app] #4572 = #4206 #4206
[mk-proof] #4573 monotonicity #4571 #4572
[inst-discovered] theory-solving 0x0 basic# ; #4206
[mk-proof] #4574 rewrite #4572
[instance] 0x0 #4572
[end-of-instance]
[mk-proof] #4575 trans #4573 #4574 #4572
[mk-app] #4576 = #4207 #4207
[mk-proof] #4577 monotonicity #4575 #4576
[mk-app] #4578 = #4211 #4211
[mk-proof] #4579 monotonicity #4577 #4578
[mk-app] #4580 = #4217 #4217
[mk-proof] #4581 monotonicity #4579 #4580
[mk-app] #4582 = #4219 #4219
[mk-proof] #4583 monotonicity #4581 #4582
[inst-discovered] theory-solving 0x0 basic# ; #4219
[mk-proof] #4584 rewrite #4582
[instance] 0x0 #4582
[end-of-instance]
[mk-proof] #4585 trans #4583 #4584 #4582
[mk-app] #4586 = #4220 #4220
[mk-proof] #4587 monotonicity #4585 #4586
[mk-app] #4588 = #4225 #4225
[mk-proof] #4589 refl #4588
[inst-discovered] theory-solving 0x0 basic# ; #4244
[mk-app] #4588 = #4244 #4244
[mk-proof] #4589 rewrite #4588
[instance] 0x0 #4588
[end-of-instance]
[mk-app] #4590 = #4245 #4245
[mk-proof] #4591 monotonicity #4589 #4590
[mk-app] #4592 = #4251 #4251
[mk-proof] #4593 monotonicity #4591 #4592
[inst-discovered] theory-solving 0x0 basic# ; #4251
[mk-proof] #4594 rewrite #4592
[instance] 0x0 #4592
[end-of-instance]
[mk-proof] #4595 trans #4593 #4594 #4592
[mk-app] #4596 = #4256 #4256
[mk-proof] #4597 refl #4596
[inst-discovered] theory-solving 0x0 basic# ; #4275
[mk-app] #4596 = #4275 #4275
[mk-proof] #4597 rewrite #4596
[instance] 0x0 #4596
[end-of-instance]
[mk-app] #4598 = #4276 #4276
[mk-proof] #4599 monotonicity #4597 #4598
[mk-app] #4600 = #4282 #4282
[mk-proof] #4601 monotonicity #4599 #4600
[inst-discovered] theory-solving 0x0 basic# ; #4282
[mk-proof] #4602 rewrite #4600
[instance] 0x0 #4600
[end-of-instance]
[mk-proof] #4603 trans #4601 #4602 #4600
[mk-app] #4604 = #4287 #4287
[mk-proof] #4605 refl #4604
[inst-discovered] theory-solving 0x0 basic# ; #4307
[mk-app] #4604 = #4307 #4307
[mk-proof] #4605 rewrite #4604
[instance] 0x0 #4604
[end-of-instance]
[mk-app] #4606 = #4312 #4312
[mk-proof] #4607 refl #4606
[inst-discovered] theory-solving 0x0 basic# ; #4330
[mk-app] #4606 = #4330 #4330
[mk-proof] #4607 rewrite #4606
[instance] 0x0 #4606
[end-of-instance]
[mk-app] #4608 = #4331 #4331
[mk-proof] #4609 monotonicity #4607 #4608
[mk-app] #4610 = #4337 #4337
[mk-proof] #4611 monotonicity #4609 #4610
[inst-discovered] theory-solving 0x0 basic# ; #4337
[mk-proof] #4612 rewrite #4610
[instance] 0x0 #4610
[end-of-instance]
[mk-proof] #4613 trans #4611 #4612 #4610
[mk-app] #4614 = #4342 #4342
[mk-proof] #4615 refl #4614
[inst-discovered] theory-solving 0x0 basic# ; #4351
[mk-app] #4614 = #4351 #4351
[mk-proof] #4615 rewrite #4614
[instance] 0x0 #4614
[end-of-instance]
[mk-app] #4616 = #4356 #4356
[mk-proof] #4617 refl #4616
[inst-discovered] theory-solving 0x0 basic# ; #4374
[mk-app] #4616 = #4374 #4374
[mk-proof] #4617 rewrite #4616
[instance] 0x0 #4616
[end-of-instance]
[mk-app] #4618 = #4375 #4375
[mk-proof] #4619 monotonicity #4617 #4618
[mk-app] #4620 = #4381 #4381
[mk-proof] #4621 monotonicity #4619 #4620
[inst-discovered] theory-solving 0x0 basic# ; #4381
[mk-proof] #4622 rewrite #4620
[instance] 0x0 #4620
[end-of-instance]
[mk-proof] #4623 trans #4621 #4622 #4620
[mk-app] #4624 = #4386 #4386
[mk-proof] #4625 refl #4624
[mk-proof] #4624 refl #2263
[mk-proof] #4624 refl #2266
[mk-app] #4624 = #1058 #1058
[mk-proof] #4625 refl #4624
[mk-app] #4624 = #1076 #1076
[mk-proof] #4625 refl #4624
[inst-discovered] theory-solving 0x0 basic# ; #4394
[mk-app] #4624 = #4394 #4394
[mk-proof] #4625 rewrite #4624
[instance] 0x0 #4624
[end-of-instance]
[mk-app] #4626 = #4395 #4395
[mk-proof] #4627 monotonicity #4625 #4626
[mk-app] #4628 = #4398 #4398
[mk-proof] #4629 monotonicity #4627 #4628
[mk-app] #4630 = #4401 #4401
[mk-proof] #4631 refl #4630
[inst-discovered] theory-solving 0x0 basic# ; #4422
[mk-app] #4630 = #4422 #4422
[mk-proof] #4631 rewrite #4630
[instance] 0x0 #4630
[end-of-instance]
[mk-app] #4632 = #4427 #4427
[mk-proof] #4633 refl #4632
[inst-discovered] theory-solving 0x0 basic# ; #4447
[mk-app] #4632 = #4447 #4447
[mk-proof] #4633 rewrite #4632
[instance] 0x0 #4632
[end-of-instance]
[mk-app] #4634 = #4452 #4452
[mk-proof] #4635 refl #4634
[inst-discovered] theory-solving 0x0 basic# ; #4468
[mk-app] #4634 = #4468 #4468
[mk-proof] #4635 rewrite #4634
[instance] 0x0 #4634
[end-of-instance]
[mk-app] #4636 = #4469 #4469
[mk-proof] #4637 monotonicity #4635 #4636
[mk-app] #4638 = #4472 #4472
[mk-proof] #4639 monotonicity #4637 #4638
[mk-app] #4640 = #4475 #4475
[mk-proof] #4641 refl #4640
[mk-proof] #4640 refl #2287
[mk-app] #4640 = #2848 #2848
[mk-proof] #4641 refl #4640
[inst-discovered] theory-solving 0x0 basic# ; #4483
[mk-app] #4640 = #4483 #4483
[mk-proof] #4641 rewrite #4640
[instance] 0x0 #4640
[end-of-instance]
[mk-app] #4642 = #4484 #4484
[mk-proof] #4643 monotonicity #4641 #4642
[mk-app] #4644 = #4487 #4487
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4512 #4512
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4526 #4526
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #3599 #3599
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2305
[mk-app] #4644 = #1546 #1546
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #2350 #2350
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2161
[mk-proof] #4644 refl #2164
[mk-proof] #4644 refl #2167
[mk-proof] #4644 refl #2170
[mk-proof] #4644 refl #2173
[mk-app] #4644 = #2358 #2358
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2179
[mk-proof] #4644 refl #2182
[mk-proof] #4644 refl #2185
[mk-proof] #4644 refl #2188
[mk-proof] #4644 refl #2191
[mk-app] #4644 = #124 #124
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2197
[mk-proof] #4644 refl #2200
[mk-proof] #4644 refl #2203
[mk-app] #4644 = #3989 #3989
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4001 #4001
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #2972 #2972
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #237 #237
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #263 #263
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4026 #4026
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4057 #4057
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4088 #4088
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4114 #4114
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4145 #4145
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4171 #4171
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4196 #4196
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4225 #4225
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4256 #4256
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4287 #4287
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4312 #4312
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4342 #4342
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4356 #4356
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4386 #4386
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2263
[mk-proof] #4644 refl #2266
[mk-app] #4644 = #1058 #1058
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #1076 #1076
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4401 #4401
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4427 #4427
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4452 #4452
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4475 #4475
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2287
[mk-app] #4644 = #2848 #2848
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4487 #4487
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4512 #4512
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #4526 #4526
[mk-proof] #4645 refl #4644
[mk-app] #4644 = #3599 #3599
[mk-proof] #4645 refl #4644
[mk-proof] #4644 refl #2305
[mk-app] #4644 = #1546 #1546
[mk-proof] #4645 refl #4644
[assign] #2350 justification -1: 
[assign] #50 justification -1: 
[assign] #57 justification -1: 
[assign] #63 justification -1: 
[assign] #70 justification -1: 
[assign] #76 justification -1: 
[assign] #2358 justification -1: 
[assign] #88 justification -1: 
[assign] #95 justification -1: 
[assign] #101 justification -1: 
[assign] #108 justification -1: 
[assign] #114 justification -1: 
[assign] #124 justification -1: 
[attach-enode] #130 0
[attach-enode] #131 0
[attach-enode] #36 0
[attach-enode] #132 0
[assign] #132 justification -1: 
[assign] #143 justification -1: 
[assign] #154 justification -1: 
[assign] #3989 justification -1: 
[assign] #4001 justification -1: 
[assign] #2972 justification -1: 
[assign] #237 justification -1: 
[assign] #263 justification -1: 
[assign] #4026 justification -1: 
[assign] #4057 justification -1: 
[assign] #4088 justification -1: 
[assign] #4114 justification -1: 
[assign] #4145 justification -1: 
[assign] #4171 justification -1: 
[assign] #4196 justification -1: 
[assign] #4225 justification -1: 
[assign] #4256 justification -1: 
[assign] #4287 justification -1: 
[assign] #4312 justification -1: 
[assign] #4342 justification -1: 
[assign] #4356 justification -1: 
[assign] #4386 justification -1: 
[assign] #1023 justification -1: 
[assign] #1037 justification -1: 
[assign] #1058 justification -1: 
[assign] #1076 justification -1: 
[assign] #4401 justification -1: 
[assign] #4427 justification -1: 
[assign] #4452 justification -1: 
[assign] #4475 justification -1: 
[assign] #1306 justification -1: 
[assign] #2848 justification -1: 
[assign] #4487 justification -1: 
[assign] #4512 justification -1: 
[assign] #4526 justification -1: 
[assign] #3599 justification -1: 
[assign] #1495 justification -1: 
[assign] #1546 justification -1: 
[mk-app] #4546 = #2350 #1
[mk-proof] #4547 iff-true #3678 #4546
[mk-app] #4548 = #50 #1
[mk-proof] #4549 iff-true #3621 #4548
[mk-app] #4550 = #57 #1
[mk-proof] #4551 iff-true #3628 #4550
[mk-app] #4552 = #63 #1
[mk-proof] #4553 iff-true #3635 #4552
[mk-app] #4538 = #70 #1
[mk-proof] #4539 iff-true #3642 #4538
[mk-app] #4540 = #76 #1
[mk-proof] #4541 iff-true #3649 #4540
[mk-app] #4556 = #2358 #1
[mk-proof] #4557 iff-true #3656 #4556
[mk-app] #4558 = #88 #1
[mk-proof] #4559 iff-true #3663 #4558
[mk-app] #4634 = #95 #1
[mk-proof] #4635 iff-true #3682 #4634
[mk-app] #4636 = #101 #1
[mk-proof] #4637 iff-true #3689 #4636
[mk-app] #4638 = #108 #1
[mk-proof] #4639 iff-true #3696 #4638
[mk-app] #4554 = #114 #1
[mk-proof] #4555 iff-true #3703 #4554
[mk-app] #4614 = #124 #1
[mk-proof] #4615 iff-true #3710 #4614
[mk-app] #4568 = #143 #1
[mk-proof] #4569 iff-true #3717 #4568
[mk-app] #4640 = #154 #1
[mk-proof] #4641 iff-true #3724 #4640
[mk-app] #4642 = #3989 #1
[mk-proof] #4643 iff-true #3994 #4642
[mk-app] #4536 = #4001 #1
[mk-proof] #4537 iff-true #4006 #4536
[mk-app] #4632 = #2972 #1
[mk-proof] #4633 iff-true #3745 #4632
[mk-app] #4624 = #237 #1
[mk-proof] #4625 iff-true #3752 #4624
[mk-app] #4626 = #263 #1
[mk-proof] #4627 iff-true #3759 #4626
[mk-app] #4532 = #4026 #1
[mk-proof] #4533 iff-true #4031 #4532
[mk-app] #4534 = #4057 #1
[mk-proof] #4535 iff-true #4062 #4534
[mk-app] #4570 = #4088 #1
[mk-proof] #4571 iff-true #4093 #4570
[mk-app] #4572 = #4114 #1
[mk-proof] #4573 iff-true #4119 #4572
[mk-app] #4574 = #4145 #1
[mk-proof] #4575 iff-true #4150 #4574
[mk-app] #4576 = #4171 #1
[mk-proof] #4577 iff-true #4176 #4576
[mk-app] #4578 = #4196 #1
[mk-proof] #4579 iff-true #4201 #4578
[mk-app] #4580 = #4225 #1
[mk-proof] #4581 iff-true #4230 #4580
[mk-app] #4582 = #4256 #1
[mk-proof] #4583 iff-true #4261 #4582
[mk-app] #4584 = #4287 #1
[mk-proof] #4585 iff-true #4292 #4584
[mk-app] #4586 = #4312 #1
[mk-proof] #4587 iff-true #4317 #4586
[mk-app] #4606 = #4342 #1
[mk-proof] #4607 iff-true #4347 #4606
[mk-app] #4608 = #4356 #1
[mk-proof] #4609 iff-true #4361 #4608
[mk-app] #4610 = #4386 #1
[mk-proof] #4611 iff-true #4391 #4610
[mk-app] #4612 = #1023 #1
[mk-proof] #4613 iff-true #3870 #4612
[mk-app] #4564 = #1037 #1
[mk-proof] #4565 iff-true #3877 #4564
[mk-app] #4566 = #1058 #1
[mk-proof] #4567 iff-true #3884 #4566
[mk-app] #4542 = #1076 #1
[mk-proof] #4543 iff-true #3891 #4542
[mk-app] #4544 = #4401 #1
[mk-proof] #4545 iff-true #4406 #4544
[mk-app] #4560 = #4427 #1
[mk-proof] #4561 iff-true #4432 #4560
[mk-app] #4562 = #4452 #1
[mk-proof] #4563 iff-true #4457 #4562
[mk-app] #4596 = #4475 #1
[mk-proof] #4597 iff-true #4480 #4596
[mk-app] #4598 = #1306 #1
[mk-proof] #4599 iff-true #3926 #4598
[mk-app] #4600 = #2848 #1
[mk-proof] #4601 iff-true #3933 #4600
[mk-app] #4602 = #4487 #1
[mk-proof] #4603 iff-true #4492 #4602
[mk-app] #4616 = #4512 #1
[mk-proof] #4617 iff-true #4517 #4616
[mk-app] #4618 = #4526 #1
[mk-proof] #4619 iff-true #4531 #4618
[mk-app] #4628 = #3599 #1
[mk-proof] #4629 iff-true #3961 #4628
[mk-app] #4620 = #1495 #1
[mk-proof] #4621 iff-true #3968 #4620
[mk-app] #4622 = #1546 #1
[mk-proof] #4623 iff-true #3975 #4622
[eq-expl] #130 root
[new-match] 0x14d0cc3e0 #124 #118 #130 ; #131
[new-match] 0x14d0cc410 #143 #118 #130 ; #131
[mk-app] #4588 >= #131 #36
[mk-app] #4589 = #4588 #4588
[mk-proof] #4590 refl #4589
[mk-app] #4591 not #124
[mk-app] #4592 or #4591 #4588
[mk-proof] #4593 quant-inst #4592
[instance] 0x14d0cc3e0 #4593 ; 1
[assign] #4588 justification -1: p13
[end-of-instance]
[mk-app] #4589 <= #131 #36
[assign] #4589 justification -1: p14
[mk-app] #4590 Seq<Int>!val!0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-app] #2153 = #43 #43
[mk-proof] #2154 refl #2153
[mk-app] #2153 = #43 #1
[mk-proof] #2154 iff-true #44 #2153
[mk-app] #2152 = #50 #50
[mk-proof] #2155 refl #2152
[mk-app] #2152 = #50 #1
[mk-proof] #2155 iff-true #51 #2152
[mk-app] #2156 = #57 #57
[mk-proof] #2157 refl #2156
[mk-app] #2156 = #57 #1
[mk-proof] #2157 iff-true #58 #2156
[mk-app] #2308 = #63 #63
[mk-proof] #2309 refl #2308
[mk-app] #2308 = #63 #1
[mk-proof] #2309 iff-true #64 #2308
[mk-app] #2310 = #70 #70
[mk-proof] #2934 refl #2310
[mk-app] #2310 = #70 #1
[mk-proof] #2934 iff-true #71 #2310
[mk-app] #2935 = #76 #76
[mk-proof] #2937 refl #2935
[mk-app] #2935 = #76 #1
[mk-proof] #2937 iff-true #77 #2935
[mk-app] #2938 = #82 #82
[mk-proof] #2939 refl #2938
[mk-app] #2938 = #82 #1
[mk-proof] #2939 iff-true #83 #2938
[mk-app] #2940 = #88 #88
[mk-proof] #2941 refl #2940
[mk-app] #2940 = #88 #1
[mk-proof] #2941 iff-true #89 #2940
[mk-app] #2305 = #95 #95
[mk-proof] #2306 refl #2305
[mk-app] #2305 = #95 #1
[mk-proof] #2306 iff-true #96 #2305
[mk-app] #2307 = #101 #101
[mk-proof] #2302 refl #2307
[mk-app] #2307 = #101 #1
[mk-proof] #2302 iff-true #102 #2307
[mk-app] #2303 = #108 #108
[mk-proof] #2304 refl #2303
[mk-app] #2303 = #108 #1
[mk-proof] #2304 iff-true #109 #2303
[mk-app] #2922 = #114 #114
[mk-proof] #2923 refl #2922
[mk-app] #2922 = #114 #1
[mk-proof] #2923 iff-true #115 #2922
[mk-app] #2925 = #124 #124
[mk-proof] #2926 refl #2925
[mk-app] #2925 = #124 #1
[mk-proof] #2926 iff-true #129 #2925
[mk-app] #2927 = #132 #132
[mk-proof] #2928 refl #2927
[mk-app] #2927 = #143 #143
[mk-proof] #2928 refl #2927
[mk-app] #2927 = #143 #1
[mk-proof] #2928 iff-true #148 #2927
[mk-app] #2929 = #154 #154
[mk-proof] #2140 refl #2929
[mk-app] #2929 = #154 #1
[mk-proof] #2140 iff-true #155 #2929
[mk-app] #2141 = #193 #193
[mk-proof] #2142 refl #2141
[mk-app] #2141 = #193 #1
[mk-proof] #2142 iff-true #198 #2141
[mk-app] #2143 = #216 #216
[mk-proof] #2144 refl #2143
[mk-app] #2143 = #216 #1
[mk-proof] #2144 iff-true #221 #2143
[mk-app] #2145 = #224 #224
[mk-proof] #2147 refl #2145
[mk-app] #2145 = #224 #1
[mk-proof] #2147 iff-true #225 #2145
[mk-app] #2148 = #237 #237
[mk-proof] #2146 refl #2148
[mk-app] #2148 = #237 #1
[mk-proof] #2146 iff-true #242 #2148
[mk-app] #2149 = #263 #263
[mk-proof] #2150 refl #2149
[mk-app] #2149 = #263 #1
[mk-proof] #2150 iff-true #268 #2149
[mk-app] #2151 = #332 #332
[mk-proof] #2299 refl #2151
[mk-app] #2151 = #332 #1
[mk-proof] #2299 iff-true #337 #2151
[mk-app] #2300 = #394 #394
[mk-proof] #2301 refl #2300
[mk-app] #2300 = #394 #1
[mk-proof] #2301 iff-true #399 #2300
[mk-app] #2906 = #457 #457
[mk-proof] #2907 refl #2906
[mk-app] #2906 = #457 #1
[mk-proof] #2907 iff-true #462 #2906
[mk-app] #2909 = #502 #502
[mk-proof] #2910 refl #2909
[mk-app] #2909 = #502 #1
[mk-proof] #2910 iff-true #507 #2909
[mk-app] #2912 = #563 #563
[mk-proof] #2913 refl #2912
[mk-app] #2912 = #563 #1
[mk-proof] #2913 iff-true #568 #2912
[mk-app] #2915 = #643 #643
[mk-proof] #2916 refl #2915
[mk-app] #2915 = #643 #1
[mk-proof] #2916 iff-true #648 #2915
[mk-app] #2917 = #691 #691
[mk-proof] #2918 refl #2917
[mk-app] #2917 = #691 #1
[mk-proof] #2918 iff-true #696 #2917
[inst-discovered] theory-solving 0x0 basic# ; #741
[mk-app] #2919 = #741 #741
[mk-proof] #2122 rewrite #2919
[instance] 0x0 #2919
[end-of-instance]
[mk-app] #2123 = #746 #746
[mk-proof] #2124 monotonicity #2122 #2123
[mk-app] #2125 = #752 #752
[mk-proof] #2126 monotonicity #2124 #2125
[mk-app] #2127 = #765 #765
[mk-proof] #2128 monotonicity #2126 #2127
[mk-app] #2129 = #768 #768
[mk-proof] #2130 refl #2129
[mk-app] #2129 = #768 #1
[mk-proof] #2130 iff-true #773 #2129
[mk-app] #2131 = #842 #842
[mk-proof] #2132 refl #2131
[mk-app] #2131 = #842 #1
[mk-proof] #2132 iff-true #847 #2131
[mk-app] #2133 = #880 #880
[mk-proof] #2135 refl #2133
[mk-app] #2133 = #880 #1
[mk-proof] #2135 iff-true #885 #2133
[mk-app] #2136 = #915 #915
[mk-proof] #2134 refl #2136
[mk-app] #2136 = #915 #1
[mk-proof] #2134 iff-true #920 #2136
[mk-app] #2137 = #962 #962
[mk-proof] #2138 refl #2137
[mk-app] #2137 = #962 #1
[mk-proof] #2138 iff-true #967 #2137
[mk-app] #2139 = #984 #984
[mk-proof] #2296 refl #2139
[mk-app] #2139 = #984 #1
[mk-proof] #2296 iff-true #989 #2139
[mk-app] #2297 = #1009 #1009
[mk-proof] #2298 refl #2297
[mk-app] #2297 = #1009 #1
[mk-proof] #2298 iff-true #1014 #2297
[mk-app] #2881 = #1023 #1023
[mk-proof] #2882 refl #2881
[mk-app] #2881 = #1023 #1
[mk-proof] #2882 iff-true #1028 #2881
[mk-app] #2884 = #1037 #1037
[mk-proof] #2885 refl #2884
[mk-app] #2884 = #1037 #1
[mk-proof] #2885 iff-true #1042 #2884
[mk-app] #2887 = #1058 #1058
[mk-proof] #2888 refl #2887
[mk-app] #2887 = #1058 #1
[mk-proof] #2888 iff-true #1063 #2887
[mk-app] #2890 = #1076 #1076
[mk-proof] #2891 refl #2890
[mk-app] #2890 = #1076 #1
[mk-proof] #2891 iff-true #1081 #2890
[mk-app] #2894 = #1131 #1131
[mk-proof] #2895 refl #2894
[mk-app] #2894 = #1131 #1
[mk-proof] #2895 iff-true #1136 #2894
[mk-app] #2897 = #1165 #1165
[mk-proof] #2898 refl #2897
[mk-app] #2897 = #1165 #1
[mk-proof] #2898 iff-true #1170 #2897
[mk-app] #2900 = #1185 #1185
[mk-proof] #2901 refl #2900
[mk-app] #2900 = #1185 #1
[mk-proof] #2901 iff-true #1190 #2900
[mk-app] #2902 = #1294 #1294
[mk-proof] #2903 refl #2902
[mk-app] #2902 = #1294 #1
[mk-proof] #2903 iff-true #1299 #2902
[mk-app] #2904 = #1306 #1306
[mk-proof] #2099 refl #2904
[mk-app] #2904 = #1306 #1
[mk-proof] #2099 iff-true #1311 #2904
[mk-app] #2100 = #1317 #1317
[mk-proof] #2101 refl #2100
[mk-app] #2100 = #1317 #1
[mk-proof] #2101 iff-true #1318 #2100
[mk-app] #2102 = #1379 #1379
[mk-proof] #2103 refl #2102
[mk-app] #2102 = #1379 #1
[mk-proof] #2103 iff-true #1384 #2102
[mk-app] #2104 = #1443 #1443
[mk-proof] #2105 refl #2104
[mk-app] #2104 = #1443 #1
[mk-proof] #2105 iff-true #1448 #2104
[mk-app] #2106 = #1466 #1466
[mk-proof] #2107 refl #2106
[mk-app] #2106 = #1466 #1
[mk-proof] #2107 iff-true #1471 #2106
[mk-app] #2108 = #1477 #1477
[mk-proof] #2109 refl #2108
[mk-app] #2108 = #1477 #1
[mk-proof] #2109 iff-true #1478 #2108
[mk-app] #2110 = #1495 #1495
[mk-proof] #2111 refl #2110
[mk-app] #2110 = #1495 #1
[mk-proof] #2111 iff-true #1500 #2110
[mk-app] #2112 = #1546 #1546
[mk-proof] #2113 refl #2112
[mk-app] #2112 = #1546 #1
[mk-proof] #2113 iff-true #1551 #2112
[mk-app] #2112 = #1546 #1546
[mk-proof] #2113 refl #2112
[mk-app] #2112 = #1546 #1
[mk-proof] #2113 iff-true #1551 #2112
[mk-app] #2110 = #1495 #1495
[mk-proof] #2111 refl #2110
[mk-app] #2110 = #1495 #1
[mk-proof] #2111 iff-true #1500 #2110
[mk-app] #2108 = #1477 #1477
[mk-proof] #2109 refl #2108
[mk-app] #2108 = #1477 #1
[mk-proof] #2109 iff-true #1478 #2108
[mk-app] #2106 = #1466 #1466
[mk-proof] #2107 refl #2106
[mk-app] #2106 = #1466 #1
[mk-proof] #2107 iff-true #1471 #2106
[mk-app] #2104 = #1443 #1443
[mk-proof] #2105 refl #2104
[mk-app] #2104 = #1443 #1
[mk-proof] #2105 iff-true #1448 #2104
[mk-app] #2102 = #1379 #1379
[mk-proof] #2103 refl #2102
[mk-app] #2102 = #1379 #1
[mk-proof] #2103 iff-true #1384 #2102
[mk-app] #2100 = #1317 #1317
[mk-proof] #2101 refl #2100
[mk-app] #2100 = #1317 #1
[mk-proof] #2101 iff-true #1318 #2100
[mk-app] #2904 = #1306 #1306
[mk-proof] #2099 refl #2904
[mk-app] #2904 = #1306 #1
[mk-proof] #2099 iff-true #1311 #2904
[mk-app] #2902 = #1294 #1294
[mk-proof] #2903 refl #2902
[mk-app] #2902 = #1294 #1
[mk-proof] #2903 iff-true #1299 #2902
[mk-app] #2900 = #1185 #1185
[mk-proof] #2901 refl #2900
[mk-app] #2900 = #1185 #1
[mk-proof] #2901 iff-true #1190 #2900
[mk-app] #2897 = #1165 #1165
[mk-proof] #2898 refl #2897
[mk-app] #2897 = #1165 #1
[mk-proof] #2898 iff-true #1170 #2897
[mk-app] #2894 = #1131 #1131
[mk-proof] #2895 refl #2894
[mk-app] #2894 = #1131 #1
[mk-proof] #2895 iff-true #1136 #2894
[mk-app] #2890 = #1076 #1076
[mk-proof] #2891 refl #2890
[mk-app] #2890 = #1076 #1
[mk-proof] #2891 iff-true #1081 #2890
[mk-app] #2887 = #1058 #1058
[mk-proof] #2888 refl #2887
[mk-app] #2887 = #1058 #1
[mk-proof] #2888 iff-true #1063 #2887
[mk-app] #2884 = #1037 #1037
[mk-proof] #2885 refl #2884
[mk-app] #2884 = #1037 #1
[mk-proof] #2885 iff-true #1042 #2884
[mk-app] #2881 = #1023 #1023
[mk-proof] #2882 refl #2881
[mk-app] #2881 = #1023 #1
[mk-proof] #2882 iff-true #1028 #2881
[mk-app] #2297 = #1009 #1009
[mk-proof] #2298 refl #2297
[mk-app] #2297 = #1009 #1
[mk-proof] #2298 iff-true #1014 #2297
[mk-app] #2139 = #984 #984
[mk-proof] #2296 refl #2139
[mk-app] #2139 = #984 #1
[mk-proof] #2296 iff-true #989 #2139
[mk-app] #2137 = #962 #962
[mk-proof] #2138 refl #2137
[mk-app] #2137 = #962 #1
[mk-proof] #2138 iff-true #967 #2137
[mk-app] #2136 = #915 #915
[mk-proof] #2134 refl #2136
[mk-app] #2136 = #915 #1
[mk-proof] #2134 iff-true #920 #2136
[mk-app] #2133 = #880 #880
[mk-proof] #2135 refl #2133
[mk-app] #2133 = #880 #1
[mk-proof] #2135 iff-true #885 #2133
[mk-app] #2131 = #842 #842
[mk-proof] #2132 refl #2131
[mk-app] #2131 = #842 #1
[mk-proof] #2132 iff-true #847 #2131
[inst-discovered] theory-solving 0x0 basic# ; #741
[mk-app] #2129 = #741 #741
[mk-proof] #2130 rewrite #2129
[instance] 0x0 #2129
[end-of-instance]
[mk-app] #2917 = #746 #746
[mk-proof] #2918 monotonicity #2130 #2917
[mk-app] #2915 = #752 #752
[mk-proof] #2916 monotonicity #2918 #2915
[mk-app] #2912 = #765 #765
[mk-proof] #2913 monotonicity #2916 #2912
[mk-app] #2909 = #768 #768
[mk-proof] #2910 refl #2909
[mk-app] #2909 = #768 #1
[mk-proof] #2910 iff-true #773 #2909
[mk-app] #2906 = #691 #691
[mk-proof] #2907 refl #2906
[mk-app] #2906 = #691 #1
[mk-proof] #2907 iff-true #696 #2906
[mk-app] #2300 = #643 #643
[mk-proof] #2301 refl #2300
[mk-app] #2300 = #643 #1
[mk-proof] #2301 iff-true #648 #2300
[mk-app] #2151 = #563 #563
[mk-proof] #2299 refl #2151
[mk-app] #2151 = #563 #1
[mk-proof] #2299 iff-true #568 #2151
[mk-app] #2149 = #502 #502
[mk-proof] #2150 refl #2149
[mk-app] #2149 = #502 #1
[mk-proof] #2150 iff-true #507 #2149
[mk-app] #2148 = #457 #457
[mk-proof] #2146 refl #2148
[mk-app] #2148 = #457 #1
[mk-proof] #2146 iff-true #462 #2148
[mk-app] #2145 = #394 #394
[mk-proof] #2147 refl #2145
[mk-app] #2145 = #394 #1
[mk-proof] #2147 iff-true #399 #2145
[mk-app] #2143 = #332 #332
[mk-proof] #2144 refl #2143
[mk-app] #2143 = #332 #1
[mk-proof] #2144 iff-true #337 #2143
[mk-app] #2141 = #263 #263
[mk-proof] #2142 refl #2141
[mk-app] #2141 = #263 #1
[mk-proof] #2142 iff-true #268 #2141
[mk-app] #2929 = #237 #237
[mk-proof] #2140 refl #2929
[mk-app] #2929 = #237 #1
[mk-proof] #2140 iff-true #242 #2929
[mk-app] #2927 = #224 #224
[mk-proof] #2928 refl #2927
[mk-app] #2927 = #224 #1
[mk-proof] #2928 iff-true #225 #2927
[mk-app] #2925 = #216 #216
[mk-proof] #2926 refl #2925
[mk-app] #2925 = #216 #1
[mk-proof] #2926 iff-true #221 #2925
[mk-app] #2922 = #193 #193
[mk-proof] #2923 refl #2922
[mk-app] #2922 = #193 #1
[mk-proof] #2923 iff-true #198 #2922
[mk-app] #2303 = #154 #154
[mk-proof] #2304 refl #2303
[mk-app] #2303 = #154 #1
[mk-proof] #2304 iff-true #155 #2303
[mk-app] #2307 = #143 #143
[mk-proof] #2302 refl #2307
[mk-app] #2307 = #143 #1
[mk-proof] #2302 iff-true #148 #2307
[mk-app] #2305 = #132 #132
[mk-proof] #2306 refl #2305
[mk-app] #2305 = #124 #124
[mk-proof] #2306 refl #2305
[mk-app] #2305 = #124 #1
[mk-proof] #2306 iff-true #129 #2305
[mk-app] #2940 = #114 #114
[mk-proof] #2941 refl #2940
[mk-app] #2940 = #114 #1
[mk-proof] #2941 iff-true #115 #2940
[mk-app] #2938 = #108 #108
[mk-proof] #2939 refl #2938
[mk-app] #2938 = #108 #1
[mk-proof] #2939 iff-true #109 #2938
[mk-app] #2935 = #101 #101
[mk-proof] #2937 refl #2935
[mk-app] #2935 = #101 #1
[mk-proof] #2937 iff-true #102 #2935
[mk-app] #2310 = #95 #95
[mk-proof] #2934 refl #2310
[mk-app] #2310 = #95 #1
[mk-proof] #2934 iff-true #96 #2310
[mk-app] #2308 = #88 #88
[mk-proof] #2309 refl #2308
[mk-app] #2308 = #88 #1
[mk-proof] #2309 iff-true #89 #2308
[mk-app] #2156 = #82 #82
[mk-proof] #2157 refl #2156
[mk-app] #2156 = #82 #1
[mk-proof] #2157 iff-true #83 #2156
[mk-app] #2152 = #76 #76
[mk-proof] #2155 refl #2152
[mk-app] #2152 = #76 #1
[mk-proof] #2155 iff-true #77 #2152
[mk-app] #2153 = #70 #70
[mk-proof] #2154 refl #2153
[mk-app] #2153 = #70 #1
[mk-proof] #2154 iff-true #71 #2153
[mk-app] #2919 = #63 #63
[mk-proof] #2122 refl #2919
[mk-app] #2919 = #63 #1
[mk-proof] #2122 iff-true #64 #2919
[mk-app] #2123 = #57 #57
[mk-proof] #2124 refl #2123
[mk-app] #2123 = #57 #1
[mk-proof] #2124 iff-true #58 #2123
[mk-app] #2125 = #50 #50
[mk-proof] #2126 refl #2125
[mk-app] #2125 = #50 #1
[mk-proof] #2126 iff-true #51 #2125
[mk-app] #2127 = #43 #43
[mk-proof] #2128 refl #2127
[mk-app] #2127 = #43 #1
[mk-proof] #2128 iff-true #44 #2127
[mk-app] #2129 ~ #41 #41
[mk-proof] #2130 refl #2129
[mk-lambda] #2917 null 1 #2130
[mk-proof] #2918 proof-bind #2917
[mk-app] #2915 ~ #43 #43
[mk-proof] #2916 nnf-pos #2918 #2915
[mk-proof] #2912 mp~ #44 #2916 #43
[mk-app] #2913 = #43 #43
[mk-proof] #2127 refl #2913
[mk-app] #2913 ~ #48 #48
[mk-proof] #2127 refl #2913
[mk-lambda] #2128 null 1 #2127
[mk-proof] #2125 proof-bind #2128
[mk-app] #2126 ~ #50 #50
[mk-proof] #2123 nnf-pos #2125 #2126
[mk-proof] #2124 mp~ #51 #2123 #50
[mk-app] #2919 = #50 #50
[mk-proof] #2122 refl #2919
[mk-app] #2919 ~ #55 #55
[mk-proof] #2122 refl #2919
[mk-lambda] #2153 null 1 #2122
[mk-proof] #2154 proof-bind #2153
[mk-app] #2152 ~ #57 #57
[mk-proof] #2155 nnf-pos #2154 #2152
[mk-proof] #2156 mp~ #58 #2155 #57
[mk-app] #2157 = #57 #57
[mk-proof] #2308 refl #2157
[mk-app] #2157 ~ #61 #61
[mk-proof] #2308 refl #2157
[mk-lambda] #2309 null 1 #2308
[mk-proof] #2310 proof-bind #2309
[mk-app] #2934 ~ #63 #63
[mk-proof] #2935 nnf-pos #2310 #2934
[mk-proof] #2937 mp~ #64 #2935 #63
[mk-app] #2938 = #63 #63
[mk-proof] #2939 refl #2938
[mk-app] #2938 ~ #68 #68
[mk-proof] #2939 refl #2938
[mk-lambda] #2940 null 1 #2939
[mk-proof] #2941 proof-bind #2940
[mk-app] #2305 ~ #70 #70
[mk-proof] #2306 nnf-pos #2941 #2305
[mk-proof] #2307 mp~ #71 #2306 #70
[mk-app] #2302 = #70 #70
[mk-proof] #2303 refl #2302
[mk-app] #2302 ~ #74 #74
[mk-proof] #2303 refl #2302
[mk-lambda] #2304 null 1 #2303
[mk-proof] #2922 proof-bind #2304
[mk-app] #2923 ~ #76 #76
[mk-proof] #2925 nnf-pos #2922 #2923
[mk-proof] #2926 mp~ #77 #2925 #76
[mk-app] #2927 = #76 #76
[mk-proof] #2928 refl #2927
[mk-app] #2927 ~ #80 #80
[mk-proof] #2928 refl #2927
[mk-lambda] #2929 null 1 #2928
[mk-proof] #2140 proof-bind #2929
[mk-app] #2141 ~ #82 #82
[mk-proof] #2142 nnf-pos #2140 #2141
[mk-proof] #2143 mp~ #83 #2142 #82
[mk-app] #2144 = #82 #82
[mk-proof] #2145 refl #2144
[mk-app] #2144 ~ #86 #86
[mk-proof] #2145 refl #2144
[mk-lambda] #2147 null 1 #2145
[mk-proof] #2148 proof-bind #2147
[mk-app] #2146 ~ #88 #88
[mk-proof] #2149 nnf-pos #2148 #2146
[mk-proof] #2150 mp~ #89 #2149 #88
[mk-app] #2151 = #88 #88
[mk-proof] #2299 refl #2151
[mk-app] #2151 ~ #93 #93
[mk-proof] #2299 refl #2151
[mk-lambda] #2300 null 1 #2299
[mk-proof] #2301 proof-bind #2300
[mk-app] #2906 ~ #95 #95
[mk-proof] #2907 nnf-pos #2301 #2906
[mk-proof] #2909 mp~ #96 #2907 #95
[mk-app] #2910 = #95 #95
[mk-proof] #2131 refl #2910
[mk-app] #2910 ~ #99 #99
[mk-proof] #2131 refl #2910
[mk-lambda] #2132 null 1 #2131
[mk-proof] #2133 proof-bind #2132
[mk-app] #2135 ~ #101 #101
[mk-proof] #2136 nnf-pos #2133 #2135
[mk-proof] #2134 mp~ #102 #2136 #101
[mk-app] #2137 = #101 #101
[mk-proof] #2138 refl #2137
[mk-app] #2137 ~ #106 #106
[mk-proof] #2138 refl #2137
[mk-lambda] #2139 null 1 #2138
[mk-proof] #2296 proof-bind #2139
[mk-app] #2297 ~ #108 #108
[mk-proof] #2298 nnf-pos #2296 #2297
[mk-proof] #2881 mp~ #109 #2298 #108
[mk-app] #2882 = #108 #108
[mk-proof] #2884 refl #2882
[mk-app] #2882 ~ #112 #112
[mk-proof] #2884 refl #2882
[mk-lambda] #2885 null 1 #2884
[mk-proof] #2887 proof-bind #2885
[mk-app] #2888 ~ #114 #114
[mk-proof] #2890 nnf-pos #2887 #2888
[mk-proof] #2891 mp~ #115 #2890 #114
[mk-app] #2894 = #114 #114
[mk-proof] #2895 refl #2894
[mk-app] #2894 ~ #123 #123
[mk-proof] #2895 refl #2894
[mk-lambda] #2897 null 1 #2895
[mk-proof] #2898 proof-bind #2897
[mk-app] #2900 ~ #124 #124
[mk-proof] #2901 nnf-pos #2898 #2900
[mk-proof] #2902 mp~ #129 #2901 #124
[mk-app] #2903 = #124 #124
[mk-proof] #2904 refl #2903
[mk-app] #2903 ~ #132 #132
[mk-proof] #2904 refl #2903
[mk-app] #2903 = #132 #132
[mk-proof] #2904 refl #2903
[mk-app] #2903 ~ #140 #140
[mk-proof] #2904 refl #2903
[mk-lambda] #2099 null 1 #2904
[mk-proof] #2100 proof-bind #2099
[mk-app] #2101 ~ #143 #143
[mk-proof] #2102 nnf-pos #2100 #2101
[mk-proof] #2103 mp~ #148 #2102 #143
[mk-app] #2104 = #143 #143
[mk-proof] #2105 refl #2104
[mk-app] #2104 ~ #152 #152
[mk-proof] #2105 refl #2104
[mk-lambda] #2106 null 1 #2105
[mk-proof] #2107 proof-bind #2106
[mk-app] #2108 ~ #154 #154
[mk-proof] #2109 nnf-pos #2107 #2108
[mk-proof] #2110 mp~ #155 #2109 #154
[mk-app] #2111 = #154 #154
[mk-proof] #2112 refl #2111
[mk-app] #2111 ~ #188 #188
[mk-proof] #2112 refl #2111
[mk-lambda] #2113 null 2 #2112
[mk-proof] #2114 proof-bind #2113
[mk-app] #2115 ~ #193 #193
[mk-proof] #2117 nnf-pos #2114 #2115
[mk-proof] #2118 mp~ #198 #2117 #193
[mk-app] #2116 = #193 #193
[mk-proof] #2119 refl #2116
[mk-app] #2116 ~ #213 #213
[mk-proof] #2119 refl #2116
[mk-lambda] #2120 null 2 #2119
[mk-proof] #2121 proof-bind #2120
[mk-app] #2293 ~ #216 #216
[mk-proof] #2294 nnf-pos #2121 #2293
[mk-proof] #2295 mp~ #221 #2294 #216
[mk-app] #2855 = #216 #216
[mk-proof] #2856 refl #2855
[mk-app] #2855 ~ #223 #223
[mk-proof] #2856 refl #2855
[mk-lambda] #2859 null 1 #2856
[mk-proof] #2860 proof-bind #2859
[mk-app] #2862 ~ #224 #224
[mk-proof] #2863 nnf-pos #2860 #2862
[mk-proof] #2865 mp~ #225 #2863 #224
[mk-app] #2866 = #224 #224
[mk-proof] #2868 refl #2866
[mk-app] #2866 ~ #232 #232
[mk-proof] #2868 refl #2866
[mk-lambda] #2869 null 2 #2868
[mk-proof] #2871 proof-bind #2869
[mk-app] #2872 ~ #237 #237
[mk-proof] #2874 nnf-pos #2871 #2872
[mk-proof] #2875 mp~ #242 #2874 #237
[mk-app] #2876 = #237 #237
[mk-proof] #2877 refl #2876
[mk-app] #2876 ~ #256 #256
[mk-proof] #2877 refl #2876
[mk-lambda] #2878 null 2 #2877
[mk-proof] #2290 proof-bind #2878
[mk-app] #2291 ~ #263 #263
[mk-proof] #2292 nnf-pos #2290 #2291
[mk-proof] #2843 mp~ #268 #2292 #263
[mk-app] #2844 = #263 #263
[mk-proof] #2846 refl #2844
[mk-app] #2844 ~ #327 #327
[mk-proof] #2846 refl #2844
[mk-lambda] #2847 null 3 #2846
[mk-proof] #2849 proof-bind #2847
[mk-app] #2850 ~ #332 #332
[mk-proof] #2851 nnf-pos #2849 #2850
[mk-proof] #2852 mp~ #337 #2851 #332
[mk-app] #2853 = #332 #332
[mk-proof] #2287 refl #2853
[mk-app] #2853 ~ #389 #389
[mk-proof] #2287 refl #2853
[mk-lambda] #2288 null 3 #2287
[mk-proof] #2289 proof-bind #2288
[mk-app] #2039 ~ #394 #394
[mk-proof] #2040 nnf-pos #2289 #2039
[mk-proof] #2041 mp~ #399 #2040 #394
[mk-app] #2042 = #394 #394
[mk-proof] #2043 refl #2042
[mk-app] #2042 ~ #452 #452
[mk-proof] #2043 refl #2042
[mk-lambda] #2044 null 3 #2043
[mk-proof] #2045 proof-bind #2044
[mk-app] #2046 ~ #457 #457
[mk-proof] #2047 nnf-pos #2045 #2046
[mk-proof] #2048 mp~ #462 #2047 #457
[mk-app] #2049 = #457 #457
[mk-proof] #2050 refl #2049
[mk-app] #2049 ~ #497 #497
[mk-proof] #2050 refl #2049
[mk-lambda] #2051 null 3 #2050
[mk-proof] #2052 proof-bind #2051
[mk-app] #2053 ~ #502 #502
[mk-proof] #2054 nnf-pos #2052 #2053
[mk-proof] #2055 mp~ #507 #2054 #502
[mk-app] #2056 = #502 #502
[mk-proof] #2057 refl #2056
[mk-app] #2056 ~ #558 #558
[mk-proof] #2057 refl #2056
[mk-lambda] #2058 null 4 #2057
[mk-proof] #2059 proof-bind #2058
[mk-app] #2060 ~ #563 #563
[mk-proof] #2061 nnf-pos #2059 #2060
[mk-proof] #2062 mp~ #568 #2061 #563
[mk-app] #2063 = #563 #563
[mk-proof] #2064 refl #2063
[mk-app] #2063 ~ #640 #640
[mk-proof] #2064 refl #2063
[mk-lambda] #2065 null 2 #2064
[mk-proof] #2066 proof-bind #2065
[mk-app] #2067 ~ #643 #643
[mk-proof] #2068 nnf-pos #2066 #2067
[mk-proof] #2069 mp~ #648 #2068 #643
[mk-app] #2070 = #643 #643
[mk-proof] #2071 refl #2070
[mk-app] #2070 ~ #686 #686
[mk-proof] #2071 refl #2070
[mk-lambda] #2072 null 3 #2071
[mk-proof] #2073 proof-bind #2072
[mk-app] #2074 ~ #691 #691
[mk-proof] #2075 nnf-pos #2073 #2074
[mk-proof] #2076 mp~ #696 #2075 #691
[mk-app] #2077 = #691 #691
[mk-proof] #2078 refl #2077
[mk-app] #2077 ~ #765 #765
[mk-proof] #2078 refl #2077
[mk-lambda] #2079 null 2 #2078
[mk-proof] #2080 proof-bind #2079
[mk-app] #2081 ~ #768 #768
[mk-proof] #2082 nnf-pos #2080 #2081
[mk-proof] #2083 mp~ #773 #2082 #768
[inst-discovered] theory-solving 0x0 basic# ; #741
[mk-app] #2084 = #741 #741
[mk-proof] #2085 rewrite #2084
[instance] 0x0 #2084
[end-of-instance]
[mk-app] #2086 = #746 #746
[mk-proof] #2087 monotonicity #2085 #2086
[mk-app] #2088 = #752 #752
[mk-proof] #2089 monotonicity #2087 #2088
[mk-app] #2090 = #765 #765
[mk-proof] #2091 monotonicity #2089 #2090
[mk-app] #2092 = #768 #768
[mk-proof] #2094 refl #2092
[mk-app] #2092 ~ #837 #837
[mk-proof] #2094 refl #2092
[mk-lambda] #2095 null 3 #2094
[mk-proof] #2093 proof-bind #2095
[mk-app] #2096 ~ #842 #842
[mk-proof] #2097 nnf-pos #2093 #2096
[mk-proof] #2098 mp~ #847 #2097 #842
[mk-app] #2284 = #842 #842
[mk-proof] #2285 refl #2284
[mk-app] #2284 ~ #875 #875
[mk-proof] #2285 refl #2284
[mk-lambda] #2286 null 3 #2285
[mk-proof] #2809 proof-bind #2286
[mk-app] #2810 ~ #880 #880
[mk-proof] #2812 nnf-pos #2809 #2810
[mk-proof] #2813 mp~ #885 #2812 #880
[mk-app] #2815 = #880 #880
[mk-proof] #2816 refl #2815
[mk-app] #2815 ~ #910 #910
[mk-proof] #2816 refl #2815
[mk-lambda] #2820 null 3 #2816
[mk-proof] #2821 proof-bind #2820
[mk-app] #2825 ~ #915 #915
[mk-proof] #2826 nnf-pos #2821 #2825
[mk-proof] #2828 mp~ #920 #2826 #915
[mk-app] #2829 = #915 #915
[mk-proof] #2831 refl #2829
[mk-app] #2829 ~ #957 #957
[mk-proof] #2831 refl #2829
[mk-lambda] #2832 null 3 #2831
[mk-proof] #2834 proof-bind #2832
[mk-app] #2835 ~ #962 #962
[mk-proof] #2837 nnf-pos #2834 #2835
[mk-proof] #2838 mp~ #967 #2837 #962
[mk-app] #2839 = #962 #962
[mk-proof] #2840 refl #2839
[mk-app] #2839 ~ #979 #979
[mk-proof] #2840 refl #2839
[mk-lambda] #2841 null 3 #2840
[mk-proof] #1635 proof-bind #2841
[mk-app] #1636 ~ #984 #984
[mk-proof] #1637 nnf-pos #1635 #1636
[mk-proof] #2024 mp~ #989 #1637 #984
[mk-app] #2025 = #984 #984
[mk-proof] #2026 refl #2025
[mk-app] #2025 ~ #1004 #1004
[mk-proof] #2026 refl #2025
[mk-lambda] #2027 null 3 #2026
[mk-proof] #2028 proof-bind #2027
[mk-app] #2029 ~ #1009 #1009
[mk-proof] #2030 nnf-pos #2028 #2029
[mk-proof] #2031 mp~ #1014 #2030 #1009
[mk-app] #2032 = #1009 #1009
[mk-proof] #2034 refl #2032
[mk-app] #2032 ~ #1020 #1020
[mk-proof] #2034 refl #2032
[mk-lambda] #2035 null 2 #2034
[mk-proof] #2033 proof-bind #2035
[mk-app] #2036 ~ #1023 #1023
[mk-proof] #2037 nnf-pos #2033 #2036
[mk-proof] #2038 mp~ #1028 #2037 #1023
[mk-app] #2281 = #1023 #1023
[mk-proof] #2282 refl #2281
[mk-app] #2281 ~ #1034 #1034
[mk-proof] #2282 refl #2281
[mk-lambda] #2283 null 2 #2282
[mk-proof] #2441 proof-bind #2283
[mk-app] #2442 ~ #1037 #1037
[mk-proof] #2444 nnf-pos #2441 #2442
[mk-proof] #2445 mp~ #1042 #2444 #1037
[mk-app] #2793 = #1037 #1037
[mk-proof] #2794 refl #2793
[mk-app] #2793 ~ #1053 #1053
[mk-proof] #2794 refl #2793
[mk-lambda] #2796 null 2 #2794
[mk-proof] #2797 proof-bind #2796
[mk-app] #2799 ~ #1058 #1058
[mk-proof] #2800 nnf-pos #2797 #2799
[mk-proof] #2802 mp~ #1063 #2800 #1058
[mk-app] #2803 = #1058 #1058
[mk-proof] #2804 refl #2803
[mk-app] #2803 ~ #1071 #1071
[mk-proof] #2804 refl #2803
[mk-lambda] #2805 null 2 #2804
[mk-proof] #2806 proof-bind #2805
[mk-app] #1998 ~ #1076 #1076
[mk-proof] #1999 nnf-pos #2806 #1998
[mk-proof] #2000 mp~ #1081 #1999 #1076
[mk-app] #2001 = #1076 #1076
[mk-proof] #2002 refl #2001
[mk-app] #2001 ~ #1126 #1126
[mk-proof] #2002 refl #2001
[mk-lambda] #2003 null 2 #2002
[mk-proof] #2004 proof-bind #2003
[mk-app] #2005 ~ #1131 #1131
[mk-proof] #2006 nnf-pos #2004 #2005
[mk-proof] #2007 mp~ #1136 #2006 #1131
[mk-app] #2008 = #1131 #1131
[mk-proof] #2009 refl #2008
[mk-app] #2008 ~ #1160 #1160
[mk-proof] #2009 refl #2008
[mk-lambda] #2010 null 3 #2009
[mk-proof] #2011 proof-bind #2010
[mk-app] #2012 ~ #1165 #1165
[mk-proof] #2013 nnf-pos #2011 #2012
[mk-proof] #2014 mp~ #1170 #2013 #1165
[mk-app] #2015 = #1165 #1165
[mk-proof] #2016 refl #2015
[mk-app] #2015 ~ #1180 #1180
[mk-proof] #2016 refl #2015
[mk-lambda] #2017 null 2 #2016
[mk-proof] #2019 proof-bind #2017
[mk-app] #2020 ~ #1185 #1185
[mk-proof] #2018 nnf-pos #2019 #2020
[mk-proof] #2021 mp~ #1190 #2018 #1185
[mk-app] #2022 = #1185 #1185
[mk-proof] #2023 refl #2022
[mk-app] #2022 ~ #1289 #1289
[mk-proof] #2023 refl #2022
[mk-lambda] #2278 null 2 #2023
[mk-proof] #2279 proof-bind #2278
[mk-app] #2280 ~ #1294 #1294
[mk-proof] #2347 nnf-pos #2279 #2280
[mk-proof] #2348 mp~ #1299 #2347 #1294
[mk-app] #2384 = #1294 #1294
[mk-proof] #2385 refl #2384
[mk-app] #2384 ~ #1303 #1303
[mk-proof] #2385 refl #2384
[mk-lambda] #2775 null 2 #2385
[mk-proof] #2776 proof-bind #2775
[mk-app] #2778 ~ #1306 #1306
[mk-proof] #2779 nnf-pos #2776 #2778
[mk-proof] #2781 mp~ #1311 #2779 #1306
[mk-app] #2782 = #1306 #1306
[mk-proof] #2784 refl #2782
[mk-app] #2782 ~ #1315 #1315
[mk-proof] #2784 refl #2782
[mk-lambda] #2785 null 2 #2784
[mk-proof] #2787 proof-bind #2785
[mk-app] #2788 ~ #1317 #1317
[mk-proof] #2789 nnf-pos #2787 #2788
[mk-proof] #2790 mp~ #1318 #2789 #1317
[mk-app] #2791 = #1317 #1317
[mk-proof] #1973 refl #2791
[mk-app] #2791 ~ #1376 #1376
[mk-proof] #1973 refl #2791
[mk-lambda] #1974 null 2 #1973
[mk-proof] #1975 proof-bind #1974
[mk-app] #1976 ~ #1379 #1379
[mk-proof] #1977 nnf-pos #1975 #1976
[mk-proof] #1978 mp~ #1384 #1977 #1379
[mk-app] #1979 = #1379 #1379
[mk-proof] #1980 refl #1979
[mk-app] #1979 ~ #1438 #1438
[mk-proof] #1980 refl #1979
[mk-lambda] #1981 null 3 #1980
[mk-proof] #1982 proof-bind #1981
[mk-app] #1983 ~ #1443 #1443
[mk-proof] #1984 nnf-pos #1982 #1983
[mk-proof] #1985 mp~ #1448 #1984 #1443
[mk-app] #1986 = #1443 #1443
[mk-proof] #1987 refl #1986
[mk-app] #1986 ~ #1463 #1463
[mk-proof] #1987 refl #1986
[mk-lambda] #1988 null 3 #1987
[mk-proof] #1989 proof-bind #1988
[mk-app] #1990 ~ #1466 #1466
[mk-proof] #1991 nnf-pos #1989 #1990
[mk-proof] #1993 mp~ #1471 #1991 #1466
[mk-app] #1994 = #1466 #1466
[mk-proof] #1992 refl #1994
[mk-app] #1994 ~ #1475 #1475
[mk-proof] #1992 refl #1994
[mk-lambda] #1995 null 2 #1992
[mk-proof] #1996 proof-bind #1995
[mk-app] #1997 ~ #1477 #1477
[mk-proof] #2275 nnf-pos #1996 #1997
[mk-proof] #2276 mp~ #1478 #2275 #1477
[mk-app] #2277 = #1477 #1477
[mk-proof] #2759 refl #2277
[mk-app] #2277 ~ #1492 #1492
[mk-proof] #2759 refl #2277
[mk-lambda] #2760 null 2 #2759
[mk-proof] #2762 proof-bind #2760
[mk-app] #2763 ~ #1495 #1495
[mk-proof] #2765 nnf-pos #2762 #2763
[mk-proof] #2766 mp~ #1500 #2765 #1495
[mk-app] #2768 = #1495 #1495
[mk-proof] #2769 refl #2768
[mk-app] #2768 ~ #1539 #1539
[mk-proof] #2769 refl #2768
[mk-lambda] #2770 null 3 #2769
[mk-proof] #2771 proof-bind #2770
[mk-app] #2772 ~ #1546 #1546
[mk-proof] #1954 nnf-pos #2771 #2772
[mk-proof] #1964 mp~ #1551 #1954 #1546
[mk-app] #1965 = #1546 #1546
[mk-proof] #1966 refl #1965
[mk-app] #2084 = #43 #43
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #50 #50
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #57 #57
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #63 #63
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #70 #70
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #76 #76
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #82 #82
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #88 #88
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #95 #95
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #101 #101
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #108 #108
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #114 #114
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #124 #124
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #132 #132
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #143 #143
[mk-proof] #2085 refl #2084
[mk-app] #2084 = #154 #154
[mk-proof] #2085 refl #2084
[mk-app] #2084 or #135 #157
[mk-app] #2085 not #2084
[inst-discovered] theory-solving 0x0 basic# ; #160
[mk-app] #2086 = #160 #2085
[mk-proof] #2087 rewrite #2086
[instance] 0x0 #2086
[end-of-instance]
[mk-app] #2088 not #2085
[mk-app] #2089 = #187 #2088
[mk-proof] #2090 monotonicity #2087 #2089
[inst-discovered] theory-solving 0x0 basic# ; #2088
[mk-app] #2091 = #2088 #2084
[mk-proof] #1965 rewrite #2091
[instance] 0x0 #2091
[end-of-instance]
[mk-app] #1966 = #187 #2084
[mk-proof] #1968 trans #2090 #1965 #1966
[mk-app] #1969 or #2084 #177
[mk-app] #1967 = #188 #1969
[mk-proof] #1970 monotonicity #1968 #1967
[mk-app] #1971 or #135 #157 #177
[inst-discovered] theory-solving 0x0 basic# ; #1969
[mk-app] #1972 = #1969 #1971
[mk-proof] #2272 rewrite #1972
[instance] 0x0 #1972
[end-of-instance]
[mk-app] #2273 = #188 #1971
[mk-proof] #2274 trans #1970 #2272 #2273
[mk-quant] #2741 k!150 2 #167 #1971
[attach-var-names] #2741 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2742 null 2 #2274
[mk-proof] #2750 proof-bind #2742
[mk-app] #2751 = #193 #2741
[mk-proof] #2752 quant-intro #2750 #2751
[mk-proof] #2753 mp #2118 #2752 #2741
[mk-app] #2754 not #207
[mk-app] #2755 not #210
[mk-app] #2756 or #2754 #2755
[mk-app] #1955 not #2756
[inst-discovered] theory-solving 0x0 basic# ; #213
[mk-app] #1956 = #213 #1955
[mk-proof] #1957 rewrite #1956
[instance] 0x0 #1956
[end-of-instance]
[mk-quant] #1959 k!156 2 #204 #1955
[attach-var-names] #1959 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1960 null 2 #1957
[mk-proof] #1958 proof-bind #1960
[mk-app] #1961 = #216 #1959
[mk-proof] #1962 quant-intro #1958 #1961
[mk-proof] #1963 mp #2295 #1962 #1959
[mk-app] #2269 = #224 #224
[mk-proof] #2270 refl #2269
[mk-app] #2269 = #237 #237
[mk-proof] #2270 refl #2269
[mk-app] #2269 = #263 #263
[mk-proof] #2270 refl #2269
[mk-app] #2269 or #157 #270 #294 #619
[mk-app] #2270 not #2269
[inst-discovered] theory-solving 0x0 basic# ; #318
[mk-app] #2271 = #318 #2270
[mk-proof] #2743 rewrite #2271
[instance] 0x0 #2271
[end-of-instance]
[mk-app] #2744 not #2270
[mk-app] #2745 = #326 #2744
[mk-proof] #2746 monotonicity #2743 #2745
[inst-discovered] theory-solving 0x0 basic# ; #2744
[mk-app] #2747 = #2744 #2269
[mk-proof] #2748 rewrite #2747
[instance] 0x0 #2747
[end-of-instance]
[mk-app] #2749 = #326 #2269
[mk-proof] #2266 trans #2746 #2748 #2749
[mk-app] #2267 or #2269 #281
[mk-app] #2268 = #327 #2267
[mk-proof] #2263 monotonicity #2266 #2268
[mk-app] #2264 or #157 #270 #281 #294 #619
[inst-discovered] theory-solving 0x0 basic# ; #2267
[mk-app] #2265 = #2267 #2264
[mk-proof] #1936 rewrite #2265
[instance] 0x0 #2265
[end-of-instance]
[mk-app] #1937 = #327 #2264
[mk-proof] #1938 trans #2263 #1936 #1937
[mk-quant] #1939 k!179 3 #283 #284 #2264
[attach-var-names] #1939 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #1940 null 3 #1938
[mk-proof] #1941 proof-bind #1940
[mk-app] #1942 = #332 #1939
[mk-proof] #1943 quant-intro #1941 #1942
[mk-proof] #1944 mp #2852 #1943 #1939
[mk-app] #1945 or #157 #270 #299 #356
[mk-app] #1946 not #1945
[inst-discovered] theory-solving 0x0 basic# ; #380
[mk-app] #1947 = #380 #1946
[mk-proof] #1949 rewrite #1947
[instance] 0x0 #1947
[end-of-instance]
[mk-app] #1950 not #1946
[mk-app] #1948 = #388 #1950
[mk-proof] #1951 monotonicity #1949 #1948
[inst-discovered] theory-solving 0x0 basic# ; #1950
[mk-app] #1952 = #1950 #1945
[mk-proof] #1953 rewrite #1952
[instance] 0x0 #1952
[end-of-instance]
[mk-app] #2260 = #388 #1945
[mk-proof] #2261 trans #1951 #1953 #2260
[mk-app] #2262 not #345
[mk-app] #2725 not #347
[mk-app] #2726 or #2262 #2725
[mk-app] #2727 not #2726
[inst-discovered] theory-solving 0x0 basic# ; #348
[mk-app] #2728 = #348 #2727
[mk-proof] #2421 rewrite #2728
[instance] 0x0 #2728
[end-of-instance]
[mk-app] #2422 or #1945 #2727
[mk-app] #2730 = #389 #2422
[mk-proof] #2731 monotonicity #2261 #2421 #2730
[mk-app] #2733 or #157 #270 #299 #356 #2727
[inst-discovered] theory-solving 0x0 basic# ; #2422
[mk-app] #2734 = #2422 #2733
[mk-proof] #2736 rewrite #2734
[instance] 0x0 #2734
[end-of-instance]
[mk-app] #2737 = #389 #2733
[mk-proof] #2738 trans #2731 #2736 #2737
[mk-quant] #2739 k!193 3 #283 #2733
[attach-var-names] #2739 (|n| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2740 null 3 #2738
[mk-proof] #1878 proof-bind #2740
[mk-app] #1879 = #394 #2739
[mk-proof] #1880 quant-intro #1878 #1879
[mk-proof] #1922 mp #2041 #1880 #2739
[mk-app] #1923 or #157 #270 #419 #619
[mk-app] #1924 not #1923
[inst-discovered] theory-solving 0x0 basic# ; #443
[mk-app] #1884 = #443 #1924
[mk-proof] #1925 rewrite #1884
[instance] 0x0 #1884
[end-of-instance]
[mk-app] #1926 not #1924
[mk-app] #1927 = #451 #1926
[mk-proof] #1928 monotonicity #1925 #1927
[inst-discovered] theory-solving 0x0 basic# ; #1926
[mk-app] #1929 = #1926 #1923
[mk-proof] #1931 rewrite #1929
[instance] 0x0 #1929
[end-of-instance]
[mk-app] #1932 = #451 #1923
[mk-proof] #1930 trans #1928 #1931 #1932
[mk-app] #1933 not #406
[mk-app] #1934 not #409
[mk-app] #1935 or #1933 #1934
[mk-app] #2257 not #1935
[inst-discovered] theory-solving 0x0 basic# ; #410
[mk-app] #2258 = #410 #2257
[mk-proof] #2259 rewrite #2258
[instance] 0x0 #2258
[end-of-instance]
[mk-app] #2689 or #1923 #2257
[mk-app] #2690 = #452 #2689
[mk-proof] #2691 monotonicity #1930 #2259 #2690
[mk-app] #2692 or #157 #270 #419 #619 #2257
[inst-discovered] theory-solving 0x0 basic# ; #2689
[mk-app] #2718 = #2689 #2692
[mk-proof] #2719 rewrite #2718
[instance] 0x0 #2718
[end-of-instance]
[mk-app] #2720 = #452 #2692
[mk-proof] #2721 trans #2691 #2719 #2720
[mk-quant] #2722 k!207 3 #412 #2692
[attach-var-names] #2722 (|m| ; |Int|) (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2723 null 3 #2721
[mk-proof] #2724 proof-bind #2723
[mk-app] #1896 = #457 #2722
[mk-proof] #1897 quant-intro #2724 #1896
[mk-proof] #1898 mp #2048 #1897 #2722
[mk-app] #1899 not #475
[mk-app] #1900 or #1899 #481
[mk-app] #1901 not #1900
[inst-discovered] theory-solving 0x0 basic# ; #490
[mk-app] #1902 = #490 #1901
[mk-proof] #1903 rewrite #1902
[instance] 0x0 #1902
[end-of-instance]
[mk-app] #1904 not #1901
[mk-app] #1905 = #496 #1904
[mk-proof] #1906 monotonicity #1903 #1905
[inst-discovered] theory-solving 0x0 basic# ; #1904
[mk-app] #1907 = #1904 #1900
[mk-proof] #1908 rewrite #1907
[instance] 0x0 #1907
[end-of-instance]
[mk-app] #1909 = #496 #1900
[mk-proof] #1910 trans #1906 #1908 #1909
[mk-app] #1911 or #1900 #468
[mk-app] #1912 = #497 #1911
[mk-proof] #1913 monotonicity #1910 #1912
[mk-app] #1914 or #468 #481 #1899
[inst-discovered] theory-solving 0x0 basic# ; #1911
[mk-app] #1915 = #1911 #1914
[mk-proof] #1917 rewrite #1915
[instance] 0x0 #1915
[end-of-instance]
[mk-app] #1918 = #497 #1914
[mk-proof] #1916 trans #1913 #1917 #1918
[mk-quant] #1919 k!214 3 #470 #471 #1914
[attach-var-names] #1919 (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1920 null 3 #1916
[mk-proof] #1921 proof-bind #1920
[mk-app] #2254 = #502 #1919
[mk-proof] #2255 quant-intro #1921 #2254
[mk-proof] #2256 mp #2055 #2255 #1919
[mk-app] #2408 or #619 #532
[mk-app] #2409 not #2408
[inst-discovered] theory-solving 0x0 basic# ; #542
[mk-app] #2411 = #542 #2409
[mk-proof] #2412 rewrite #2411
[instance] 0x0 #2411
[end-of-instance]
[mk-app] #2701 not #2409
[mk-app] #2702 = #557 #2701
[mk-proof] #2704 monotonicity #2412 #2702
[inst-discovered] theory-solving 0x0 basic# ; #2701
[mk-app] #2705 = #2701 #2408
[mk-proof] #2707 rewrite #2705
[instance] 0x0 #2705
[end-of-instance]
[mk-app] #2708 = #557 #2408
[mk-proof] #2710 trans #2704 #2707 #2708
[mk-app] #2711 not #545
[mk-app] #2713 not #548
[mk-app] #2714 or #2711 #2713
[mk-app] #2715 not #2714
[inst-discovered] theory-solving 0x0 basic# ; #551
[mk-app] #2716 = #551 #2715
[mk-proof] #2717 rewrite #2716
[instance] 0x0 #2716
[end-of-instance]
[mk-app] #1881 or #2408 #2715
[mk-app] #1882 = #558 #1881
[mk-proof] #1883 monotonicity #2710 #2717 #1882
[mk-app] #1885 or #532 #619 #2715
[inst-discovered] theory-solving 0x0 basic# ; #1881
[mk-app] #1886 = #1881 #1885
[mk-proof] #1887 rewrite #1886
[instance] 0x0 #1886
[end-of-instance]
[mk-app] #1888 = #558 #1885
[mk-proof] #1889 trans #1883 #1887 #1888
[mk-quant] #1891 k!223 4 #524 #525 #1885
[attach-var-names] #1891 (|n| ; |Int|) (|v| ; |Int|) (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1892 null 4 #1889
[mk-proof] #1890 proof-bind #1892
[mk-app] #1893 = #563 #1891
[mk-proof] #1894 quant-intro #1890 #1893
[mk-proof] #1895 mp #2062 #1894 #1891
[mk-app] #2251 not #593
[mk-app] #2252 not #608
[mk-app] #2253 or #2251 #2252
[mk-app] #2693 not #2253
[inst-discovered] theory-solving 0x0 basic# ; #613
[mk-app] #2694 = #613 #2693
[mk-proof] #2695 rewrite #2694
[instance] 0x0 #2694
[end-of-instance]
[mk-app] #2696 or #619 #2693
[mk-app] #2697 = #620 #2696
[mk-proof] #2698 monotonicity #2695 #2697
[mk-app] #2699 and #2696 #635
[mk-app] #1852 = #640 #2699
[mk-proof] #1853 monotonicity #2698 #1852
[mk-app] #1854 not #2696
[mk-app] #1855 not #635
[mk-app] #1856 or #1854 #1855
[mk-app] #1857 not #1856
[inst-discovered] theory-solving 0x0 basic# ; #2699
[mk-app] #1858 = #2699 #1857
[mk-proof] #1859 rewrite #1858
[instance] 0x0 #1858
[end-of-instance]
[mk-app] #1860 = #640 #1857
[mk-proof] #1861 trans #1853 #1859 #1860
[mk-quant] #1862 k!234 2 #582 #583 #1857
[attach-var-names] #1862 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1863 null 2 #1861
[mk-proof] #1864 proof-bind #1863
[mk-app] #1865 = #643 #1862
[mk-proof] #1866 quant-intro #1864 #1865
[mk-proof] #1867 mp #2069 #1866 #1862
[mk-app] #1868 or #619 #663 #294
[mk-app] #1869 not #1868
[inst-discovered] theory-solving 0x0 basic# ; #677
[mk-app] #1870 = #677 #1869
[mk-proof] #1871 rewrite #1870
[instance] 0x0 #1870
[end-of-instance]
[mk-app] #1873 not #1869
[mk-app] #1874 = #685 #1873
[mk-proof] #1872 monotonicity #1871 #1874
[inst-discovered] theory-solving 0x0 basic# ; #1873
[mk-app] #1875 = #1873 #1868
[mk-proof] #1876 rewrite #1875
[instance] 0x0 #1875
[end-of-instance]
[mk-app] #1877 = #685 #1868
[mk-proof] #2248 trans #1872 #1876 #1877
[mk-app] #2249 or #1868 #654
[mk-app] #2250 = #686 #2249
[mk-proof] #2664 monotonicity #2248 #2250
[mk-app] #2665 or #294 #619 #654 #663
[inst-discovered] theory-solving 0x0 basic# ; #2249
[mk-app] #2667 = #2249 #2665
[mk-proof] #2668 rewrite #2667
[instance] 0x0 #2667
[end-of-instance]
[mk-app] #2671 = #686 #2665
[mk-proof] #2672 trans #2664 #2668 #2671
[mk-quant] #2675 k!241 3 #656 #657 #2665
[attach-var-names] #2675 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2676 null 3 #2672
[mk-proof] #2678 proof-bind #2676
[mk-app] #2679 = #691 #2675
[mk-proof] #2681 quant-intro #2678 #2679
[mk-proof] #2682 mp #2076 #2681 #2675
[inst-discovered] theory-solving 0x0 basic# ; #741
[mk-app] #2684 = #741 #741
[mk-proof] #2685 rewrite #2684
[instance] 0x0 #2684
[end-of-instance]
[mk-app] #2686 = #746 #746
[mk-proof] #2687 monotonicity #2685 #2686
[mk-app] #2688 not #733
[mk-app] #1817 not #741
[mk-app] #1818 or #1817 #2688
[mk-app] #1819 not #1818
[inst-discovered] theory-solving 0x0 basic# ; #746
[mk-app] #1820 = #746 #1819
[mk-proof] #1821 rewrite #1820
[instance] 0x0 #1820
[end-of-instance]
[mk-proof] #1822 trans #2687 #1821 #1820
[mk-app] #1823 or #619 #1819
[mk-app] #1824 = #752 #1823
[mk-proof] #1825 monotonicity #1822 #1824
[mk-app] #1826 and #1823 #760
[mk-app] #1827 = #765 #1826
[mk-proof] #1828 monotonicity #1825 #1827
[mk-app] #1829 not #1823
[mk-app] #1830 not #760
[mk-app] #1831 or #1829 #1830
[mk-app] #1832 not #1831
[inst-discovered] theory-solving 0x0 basic# ; #1826
[mk-app] #1833 = #1826 #1832
[mk-proof] #1834 rewrite #1833
[instance] 0x0 #1833
[end-of-instance]
[mk-app] #1835 = #765 #1832
[mk-proof] #1836 trans #1828 #1834 #1835
[mk-quant] #1837 k!254 2 #709 #710 #1832
[attach-var-names] #1837 (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1838 null 2 #1836
[mk-proof] #1839 proof-bind #1838
[mk-app] #1840 = #768 #1837
[mk-proof] #1841 quant-intro #1839 #1840
[mk-proof] #1842 mp #2083 #1841 #1837
[mk-app] #1843 or #619 #791 #813
[mk-app] #1844 not #1843
[inst-discovered] theory-solving 0x0 basic# ; #828
[mk-app] #1845 = #828 #1844
[mk-proof] #1847 rewrite #1845
[instance] 0x0 #1845
[end-of-instance]
[mk-app] #1848 not #1844
[mk-app] #1846 = #836 #1848
[mk-proof] #1849 monotonicity #1847 #1846
[inst-discovered] theory-solving 0x0 basic# ; #1848
[mk-app] #1850 = #1848 #1843
[mk-proof] #1851 rewrite #1850
[instance] 0x0 #1850
[end-of-instance]
[mk-app] #2245 = #836 #1843
[mk-proof] #2246 trans #1849 #1851 #2245
[mk-app] #2247 not #781
[mk-app] #2631 not #785
[mk-app] #2632 or #2247 #2631
[mk-app] #2634 not #2632
[inst-discovered] theory-solving 0x0 basic# ; #786
[mk-app] #2635 = #786 #2634
[mk-proof] #2637 rewrite #2635
[instance] 0x0 #2635
[end-of-instance]
[mk-app] #2638 or #1843 #2634
[mk-app] #2640 = #837 #2638
[mk-proof] #2641 monotonicity #2246 #2637 #2640
[mk-app] #2644 or #619 #791 #813 #2634
[inst-discovered] theory-solving 0x0 basic# ; #2638
[mk-app] #2645 = #2638 #2644
[mk-proof] #2649 rewrite #2645
[instance] 0x0 #2645
[end-of-instance]
[mk-app] #2650 = #837 #2644
[mk-proof] #2652 trans #2641 #2649 #2650
[mk-quant] #2653 k!262 3 #788 #2644
[attach-var-names] #2653 (|j| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2655 null 3 #2652
[mk-proof] #2656 proof-bind #2655
[mk-app] #2658 = #842 #2653
[mk-proof] #2659 quant-intro #2656 #2658
[mk-proof] #2660 mp #2098 #2659 #2653
[mk-app] #2661 or #294 #666 #791
[mk-app] #2662 not #2661
[inst-discovered] theory-solving 0x0 basic# ; #866
[mk-app] #1770 = #866 #2662
[mk-proof] #1771 rewrite #1770
[instance] 0x0 #1770
[end-of-instance]
[mk-app] #1772 not #2662
[mk-app] #1773 = #874 #1772
[mk-proof] #1774 monotonicity #1771 #1773
[inst-discovered] theory-solving 0x0 basic# ; #1772
[mk-app] #1775 = #1772 #2661
[mk-proof] #1776 rewrite #1775
[instance] 0x0 #1775
[end-of-instance]
[mk-app] #1777 = #874 #2661
[mk-proof] #1778 trans #1774 #1776 #1777
[mk-app] #1779 not #852
[mk-app] #1780 not #854
[mk-app] #1781 or #1779 #1780
[mk-app] #1782 not #1781
[inst-discovered] theory-solving 0x0 basic# ; #855
[mk-app] #1783 = #855 #1782
[mk-proof] #1784 rewrite #1783
[instance] 0x0 #1783
[end-of-instance]
[mk-app] #1785 or #2661 #1782
[mk-app] #1786 = #875 #1785
[mk-proof] #1787 monotonicity #1778 #1784 #1786
[mk-app] #1788 or #294 #666 #791 #1782
[inst-discovered] theory-solving 0x0 basic# ; #1785
[mk-app] #1789 = #1785 #1788
[mk-proof] #1790 rewrite #1789
[instance] 0x0 #1789
[end-of-instance]
[mk-app] #1791 = #875 #1788
[mk-proof] #1792 trans #1787 #1790 #1791
[mk-quant] #1793 k!270 3 #857 #1788
[attach-var-names] #1793 (|i| ; |Int|) (|n| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1794 null 3 #1792
[mk-proof] #1795 proof-bind #1794
[mk-app] #1796 = #880 #1793
[mk-proof] #1797 quant-intro #1795 #1796
[mk-proof] #1798 mp #2813 #1797 #1793
[mk-app] #1799 or #896 #937
[mk-app] #1800 not #1799
[inst-discovered] theory-solving 0x0 basic# ; #903
[mk-app] #1801 = #903 #1800
[mk-proof] #1802 rewrite #1801
[instance] 0x0 #1801
[end-of-instance]
[mk-app] #1803 not #1800
[mk-app] #1804 = #909 #1803
[mk-proof] #1805 monotonicity #1802 #1804
[inst-discovered] theory-solving 0x0 basic# ; #1803
[mk-app] #1806 = #1803 #1799
[mk-proof] #1807 rewrite #1806
[instance] 0x0 #1806
[end-of-instance]
[mk-app] #1808 = #909 #1799
[mk-proof] #1809 trans #1805 #1807 #1808
[mk-app] #1810 or #1799 #891
[mk-app] #1812 = #910 #1810
[mk-proof] #1813 monotonicity #1809 #1812
[mk-app] #1811 or #891 #896 #937
[inst-discovered] theory-solving 0x0 basic# ; #1810
[mk-app] #1814 = #1810 #1811
[mk-proof] #1815 rewrite #1814
[instance] 0x0 #1814
[end-of-instance]
[mk-app] #1816 = #910 #1811
[mk-proof] #2242 trans #1813 #1815 #1816
[mk-quant] #2243 k!276 3 #893 #1811
[attach-var-names] #2243 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #2244 null 3 #2242
[mk-proof] #2597 proof-bind #2244
[mk-app] #2598 = #915 #2243
[mk-proof] #2600 quant-intro #2597 #2598
[mk-proof] #2601 mp #2828 #2600 #2243
[mk-app] #2602 or #896 #900 #356
[mk-app] #2603 not #2602
[inst-discovered] theory-solving 0x0 basic# ; #948
[mk-app] #2604 = #948 #2603
[mk-proof] #2605 rewrite #2604
[instance] 0x0 #2604
[end-of-instance]
[mk-app] #2606 not #2603
[mk-app] #2608 = #956 #2606
[mk-proof] #2609 monotonicity #2605 #2608
[inst-discovered] theory-solving 0x0 basic# ; #2606
[mk-app] #2611 = #2606 #2602
[mk-proof] #2612 rewrite #2611
[instance] 0x0 #2611
[end-of-instance]
[mk-app] #2615 = #956 #2602
[mk-proof] #2616 trans #2609 #2612 #2615
[mk-app] #2618 not #927
[mk-app] #2619 or #2262 #2618
[mk-app] #2621 not #2619
[inst-discovered] theory-solving 0x0 basic# ; #928
[mk-app] #2622 = #928 #2621
[mk-proof] #2624 rewrite #2622
[instance] 0x0 #2622
[end-of-instance]
[mk-app] #2625 or #2602 #2621
[mk-app] #2626 = #957 #2625
[mk-proof] #2627 monotonicity #2616 #2624 #2626
[mk-app] #2628 or #356 #896 #900 #2621
[inst-discovered] theory-solving 0x0 basic# ; #2625
[mk-app] #1744 = #2625 #2628
[mk-proof] #1745 rewrite #1744
[instance] 0x0 #1744
[end-of-instance]
[mk-app] #1746 = #957 #2628
[mk-proof] #1747 trans #2627 #1745 #1746
[mk-quant] #1748 k!286 3 #893 #2628
[attach-var-names] #1748 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1749 null 3 #1747
[mk-proof] #1750 proof-bind #1749
[mk-app] #1751 = #962 #1748
[mk-proof] #1752 quant-intro #1750 #1751
[mk-proof] #1753 mp #2838 #1752 #1748
[mk-app] #1754 or #1799 #971
[mk-app] #1755 = #979 #1754
[mk-proof] #1756 monotonicity #1809 #1755
[mk-app] #1757 or #896 #937 #971
[inst-discovered] theory-solving 0x0 basic# ; #1754
[mk-app] #1758 = #1754 #1757
[mk-proof] #1759 rewrite #1758
[instance] 0x0 #1758
[end-of-instance]
[mk-app] #1760 = #979 #1757
[mk-proof] #1761 trans #1756 #1759 #1760
[mk-quant] #1762 k!292 3 #973 #1757
[attach-var-names] #1762 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1763 null 3 #1761
[mk-proof] #1765 proof-bind #1763
[mk-app] #1766 = #984 #1762
[mk-proof] #1764 quant-intro #1765 #1766
[mk-proof] #1767 mp #2024 #1764 #1762
[mk-app] #1768 or #896 #900
[mk-app] #1769 not #1768
[inst-discovered] theory-solving 0x0 basic# ; #997
[mk-app] #2239 = #997 #1769
[mk-proof] #2240 rewrite #2239
[instance] 0x0 #2239
[end-of-instance]
[mk-app] #2241 not #1769
[mk-app] #2577 = #1003 #2241
[mk-proof] #2578 monotonicity #2240 #2577
[inst-discovered] theory-solving 0x0 basic# ; #2241
[mk-app] #2580 = #2241 #1768
[mk-proof] #2581 rewrite #2580
[instance] 0x0 #2580
[end-of-instance]
[mk-app] #2584 = #1003 #1768
[mk-proof] #2585 trans #2578 #2581 #2584
[mk-app] #2587 not #992
[mk-app] #2588 or #2262 #2587
[mk-app] #2590 not #2588
[inst-discovered] theory-solving 0x0 basic# ; #993
[mk-app] #2591 = #993 #2590
[mk-proof] #2592 rewrite #2591
[instance] 0x0 #2591
[end-of-instance]
[mk-app] #2593 or #1768 #2590
[mk-app] #2594 = #1004 #2593
[mk-proof] #1705 monotonicity #2585 #2592 #2594
[mk-app] #1706 or #896 #900 #2590
[inst-discovered] theory-solving 0x0 basic# ; #2593
[mk-app] #1707 = #2593 #1706
[mk-proof] #1708 rewrite #1707
[instance] 0x0 #1707
[end-of-instance]
[mk-app] #1709 = #1004 #1706
[mk-proof] #1710 trans #1705 #1708 #1709
[mk-quant] #1711 k!300 3 #973 #1706
[attach-var-names] #1711 (|n| ; |Int|) (|t| ; |Seq<Int>|) (|s| ; |Seq<Int>|)
[mk-lambda] #1712 null 3 #1710
[mk-proof] #1713 proof-bind #1712
[mk-app] #1714 = #1009 #1711
[mk-proof] #1715 quant-intro #1713 #1714
[mk-proof] #1716 mp #2031 #1715 #1711
[mk-app] #1717 = #1023 #1023
[mk-proof] #1718 refl #1717
[mk-app] #1717 = #1037 #1037
[mk-proof] #1718 refl #1717
[mk-app] #1717 = #1058 #1058
[mk-proof] #1718 refl #1717
[mk-app] #1717 = #1076 #1076
[mk-proof] #1718 refl #1717
[mk-app] #1717 not #1095
[mk-app] #1718 not #1087
[mk-app] #1719 or #1103 #1717 #1718
[mk-app] #1720 not #1719
[inst-discovered] theory-solving 0x0 basic# ; #1117
[mk-app] #1721 = #1117 #1720
[mk-proof] #1722 rewrite #1721
[instance] 0x0 #1721
[end-of-instance]
[mk-app] #1723 or #1125 #1720
[mk-app] #1724 = #1126 #1723
[mk-proof] #1725 monotonicity #1722 #1724
[mk-quant] #1726 k!326 2 #1091 #1723
[attach-var-names] #1726 (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1727 null 2 #1725
[mk-proof] #1728 proof-bind #1727
[mk-app] #1729 = #1131 #1726
[mk-proof] #1730 quant-intro #1728 #1729
[mk-proof] #1731 mp #2007 #1730 #1726
[mk-app] #1732 not #1137
[mk-app] #1733 or #294 #619 #1732
[mk-app] #1734 not #1733
[inst-discovered] theory-solving 0x0 basic# ; #1151
[mk-app] #1735 = #1151 #1734
[mk-proof] #1736 rewrite #1735
[instance] 0x0 #1735
[end-of-instance]
[mk-app] #1737 not #1734
[mk-app] #1739 = #1159 #1737
[mk-proof] #1740 monotonicity #1736 #1739
[inst-discovered] theory-solving 0x0 basic# ; #1737
[mk-app] #1738 = #1737 #1733
[mk-proof] #1741 rewrite #1738
[instance] 0x0 #1738
[end-of-instance]
[mk-app] #1742 = #1159 #1733
[mk-proof] #1743 trans #1740 #1741 #1742
[mk-app] #2236 or #1733 #1140
[mk-app] #2237 = #1160 #2236
[mk-proof] #2238 monotonicity #1743 #2237
[mk-app] #2547 or #294 #619 #1140 #1732
[inst-discovered] theory-solving 0x0 basic# ; #2236
[mk-app] #2548 = #2236 #2547
[mk-proof] #2550 rewrite #2548
[instance] 0x0 #2548
[end-of-instance]
[mk-app] #2551 = #1160 #2547
[mk-proof] #2554 trans #2238 #2550 #2551
[mk-quant] #2555 k!332 3 #1142 #2547
[attach-var-names] #2555 (|i| ; |Int|) (|x| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #2557 null 3 #2554
[mk-proof] #2558 proof-bind #2557
[mk-app] #2560 = #1165 #2555
[mk-proof] #2561 quant-intro #2558 #2560
[mk-proof] #2563 mp #2014 #2561 #2555
[mk-app] #2564 or #619 #419
[mk-app] #2565 not #2564
[inst-discovered] theory-solving 0x0 basic# ; #429
[mk-app] #2566 = #429 #2565
[mk-proof] #2568 rewrite #2566
[instance] 0x0 #2566
[end-of-instance]
[mk-app] #2569 not #2565
[mk-app] #2571 = #1179 #2569
[mk-proof] #2572 monotonicity #2568 #2571
[inst-discovered] theory-solving 0x0 basic# ; #2569
[mk-app] #2573 = #2569 #2564
[mk-proof] #2574 rewrite #2573
[instance] 0x0 #2573
[end-of-instance]
[mk-app] #2575 = #1179 #2564
[mk-proof] #1687 trans #2572 #2574 #2575
[mk-app] #1688 or #2564 #1171
[mk-app] #1689 = #1180 #1688
[mk-proof] #1690 monotonicity #1687 #1689
[mk-app] #1691 or #419 #619 #1171
[inst-discovered] theory-solving 0x0 basic# ; #1688
[mk-app] #1692 = #1688 #1691
[mk-proof] #1693 rewrite #1692
[instance] 0x0 #1692
[end-of-instance]
[mk-app] #1694 = #1180 #1691
[mk-proof] #1695 trans #1690 #1693 #1694
[mk-quant] #1696 k!338 2 #1173 #1691
[attach-var-names] #1696 (|i| ; |Int|) (|s| ; |Seq<Int>|)
[mk-lambda] #1697 null 2 #1695
[mk-proof] #1698 proof-bind #1697
[mk-app] #1700 = #1185 #1696
[mk-proof] #1701 quant-intro #1698 #1700
[mk-proof] #1699 mp #2021 #1701 #1696
[mk-app] #1702 or #1194 #1195
[mk-app] #1703 not #1702
[inst-discovered] theory-solving 0x0 basic# ; #1193
[mk-app] #1704 = #1193 #1703
[mk-proof] #2233 rewrite #1704
[instance] 0x0 #1704
[end-of-instance]
[mk-app] #2234 or #1191 #1192 #1196
[mk-app] #2235 not #2234
[inst-discovered] theory-solving 0x0 basic# ; #1220
[mk-app] #2500 = #1220 #2235
[mk-proof] #2501 rewrite #2500
[instance] 0x0 #2500
[end-of-instance]
[mk-app] #2503 not #1202
[mk-app] #2504 not #1224
[mk-app] #2506 or #1191 #1192 #1197 #1207 #1232 #2503 #2504
[mk-app] #2507 not #2506
[inst-discovered] theory-solving 0x0 basic# ; #1278
[mk-app] #2509 = #1278 #2507
[mk-proof] #2510 rewrite #2509
[instance] 0x0 #2509
[end-of-instance]
[mk-app] #2513 or #1703 #2235 #2507
[mk-app] #2514 = #1289 #2513
[mk-proof] #2516 monotonicity #2233 #2501 #2510 #2514
[mk-quant] #2517 k!363 2 #1217 #2513
[attach-var-names] #2517 (|s1| ; |Seq<Int>|) (|s0| ; |Seq<Int>|)
[mk-lambda] #2520 null 2 #2516
[mk-proof] #2521 proof-bind #2520
[mk-app] #2523 = #1294 #2517
[mk-proof] #2524 quant-intro #2521 #2523
[mk-proof] #2528 mp #2348 #2524 #2517
[mk-app] #2529 = #1306 #1306
[mk-proof] #2531 refl #2529
[mk-app] #2529 = #1317 #1317
[mk-proof] #2531 refl #2529
[mk-app] #2529 not #1363
[mk-app] #2531 not #1371
[mk-app] #2532 or #2529 #2531
[mk-app] #2534 not #2532
[inst-discovered] theory-solving 0x0 basic# ; #1376
[mk-app] #2535 = #1376 #2534
[mk-proof] #2537 rewrite #2535
[instance] 0x0 #2535
[end-of-instance]
[mk-quant] #2538 $Seq[Int]_prog.ranged_seq_length 2 #1329 #2534
[attach-var-names] #2538 (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2540 null 2 #2537
[mk-proof] #2541 proof-bind #2540
[mk-app] #2542 = #1379 #2538
[mk-proof] #2543 quant-intro #2541 #2542
[mk-proof] #2544 mp #1978 #2543 #2538
[mk-app] #1669 or #619 #1410
[mk-app] #1670 not #1669
[inst-discovered] theory-solving 0x0 basic# ; #1418
[mk-app] #1671 = #1418 #1670
[mk-proof] #1672 rewrite #1671
[instance] 0x0 #1671
[end-of-instance]
[mk-app] #1673 not #1670
[mk-app] #1674 = #1437 #1673
[mk-proof] #1675 monotonicity #1672 #1674
[inst-discovered] theory-solving 0x0 basic# ; #1673
[mk-app] #1676 = #1673 #1669
[mk-proof] #1677 rewrite #1676
[instance] 0x0 #1676
[end-of-instance]
[mk-app] #1678 = #1437 #1669
[mk-proof] #1679 trans #1675 #1677 #1678
[mk-app] #1680 or #1669 #1427
[mk-app] #1682 = #1438 #1680
[mk-proof] #1683 monotonicity #1679 #1682
[mk-app] #1681 or #619 #1410 #1427
[inst-discovered] theory-solving 0x0 basic# ; #1680
[mk-app] #1684 = #1680 #1681
[mk-proof] #1685 rewrite #1684
[instance] 0x0 #1684
[end-of-instance]
[mk-app] #1686 = #1438 #1681
[mk-proof] #2230 trans #1683 #1685 #1686
[mk-quant] #2231 $Seq[Int]_prog.ranged_seq_index 3 #1393 #1681
[attach-var-names] #2231 (|j| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2232 null 3 #2230
[mk-proof] #2474 proof-bind #2232
[mk-app] #2475 = #1443 #2231
[mk-proof] #2477 quant-intro #2474 #2475
[mk-proof] #2478 mp #1985 #2477 #2231
[mk-app] #2480 not #1456
[mk-app] #2481 or #2480 #663
[mk-app] #2483 not #2481
[inst-discovered] theory-solving 0x0 basic# ; #1460
[mk-app] #2484 = #1460 #2483
[mk-proof] #2487 rewrite #2484
[instance] 0x0 #2484
[end-of-instance]
[mk-app] #2488 = #1449 #2483
[mk-app] #2490 = #1463 #2488
[mk-proof] #2491 monotonicity #2487 #2490
[mk-quant] #2493 $Seq[Int]_prog.ranged_seq_contains 3 #1453 #2488
[attach-var-names] #2493 (|v| ; |Int|) (|max| ; |Int|) (|min_| ; |Int|)
[mk-lambda] #2494 null 3 #2491
[mk-proof] #2495 proof-bind #2494
[mk-app] #2496 = #1466 #2493
[mk-proof] #2497 quant-intro #2495 #2496
[mk-proof] #1638 mp #1993 #2497 #2493
[mk-app] #1639 = #1477 #1477
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1495 #1495
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1546 #1546
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #43 #43
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2912 #1640 #43
[mk-app] #1639 = #50 #50
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2124 #1640 #50
[mk-app] #1639 = #57 #57
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2156 #1640 #57
[mk-app] #1639 = #63 #63
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2937 #1640 #63
[mk-app] #1639 = #70 #70
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2307 #1640 #70
[mk-app] #1639 = #76 #76
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2926 #1640 #76
[mk-app] #1639 = #82 #82
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2143 #1640 #82
[mk-app] #1639 = #88 #88
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2150 #1640 #88
[mk-app] #1639 = #95 #95
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2909 #1640 #95
[mk-app] #1639 = #101 #101
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2134 #1640 #101
[mk-app] #1639 = #108 #108
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2881 #1640 #108
[mk-app] #1639 = #114 #114
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2891 #1640 #114
[mk-app] #1639 = #124 #124
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2902 #1640 #124
[mk-app] #1639 = #132 #132
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #133 #1640 #132
[mk-app] #1639 = #143 #143
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2103 #1640 #143
[mk-app] #1639 = #154 #154
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2110 #1640 #154
[mk-app] #1639 = #2741 #2741
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2753 #1640 #2741
[mk-app] #1639 = #1959 #1959
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1963 #1640 #1959
[mk-app] #1639 = #224 #224
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2865 #1640 #224
[mk-app] #1639 = #237 #237
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2875 #1640 #237
[mk-app] #1639 = #263 #263
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2843 #1640 #263
[mk-app] #1639 = #1939 #1939
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1944 #1640 #1939
[mk-app] #1639 = #2739 #2739
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1922 #1640 #2739
[mk-app] #1639 = #2722 #2722
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1898 #1640 #2722
[mk-app] #1639 = #1919 #1919
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2256 #1640 #1919
[mk-app] #1639 = #1891 #1891
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1895 #1640 #1891
[mk-app] #1639 = #1862 #1862
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1867 #1640 #1862
[mk-app] #1639 = #2675 #2675
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2682 #1640 #2675
[mk-app] #1639 = #1837 #1837
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1842 #1640 #1837
[mk-app] #1639 = #2653 #2653
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2660 #1640 #2653
[mk-app] #1639 = #1793 #1793
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1798 #1640 #1793
[mk-app] #1639 = #2243 #2243
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2601 #1640 #2243
[mk-app] #1639 = #1748 #1748
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1753 #1640 #1748
[mk-app] #1639 = #1762 #1762
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1767 #1640 #1762
[mk-app] #1639 = #1711 #1711
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1716 #1640 #1711
[mk-app] #1639 = #1023 #1023
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2038 #1640 #1023
[mk-app] #1639 = #1037 #1037
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2445 #1640 #1037
[mk-app] #1639 = #1058 #1058
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2802 #1640 #1058
[mk-app] #1639 = #1076 #1076
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2000 #1640 #1076
[mk-app] #1639 = #1726 #1726
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1731 #1640 #1726
[mk-app] #1639 = #2555 #2555
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2563 #1640 #2555
[mk-app] #1639 = #1696 #1696
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1699 #1640 #1696
[mk-app] #1639 = #2517 #2517
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2528 #1640 #2517
[mk-app] #1639 = #1306 #1306
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2781 #1640 #1306
[mk-app] #1639 = #1317 #1317
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2790 #1640 #1317
[mk-app] #1639 = #2538 #2538
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2544 #1640 #2538
[mk-app] #1639 = #2231 #2231
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2478 #1640 #2231
[mk-app] #1639 = #2493 #2493
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1638 #1640 #2493
[mk-app] #1639 = #1477 #1477
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2276 #1640 #1477
[mk-app] #1639 = #1495 #1495
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #2766 #1640 #1495
[mk-app] #1639 = #1546 #1546
[mk-proof] #1640 rewrite #1639
[mk-proof] #1641 mp #1964 #1640 #1546
[mk-app] #1639 = #43 #43
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #50 #50
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #57 #57
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #63 #63
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #70 #70
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #76 #76
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #82 #82
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #88 #88
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #95 #95
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #101 #101
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #108 #108
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #114 #114
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #124 #124
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #132 #132
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #143 #143
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #154 #154
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2741 #2741
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1959 #1959
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #224 #224
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #237 #237
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #263 #263
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1939 #1939
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2739 #2739
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2722 #2722
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1919 #1919
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1891 #1891
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1862 #1862
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2675 #2675
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1837 #1837
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2653 #2653
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1793 #1793
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2243 #2243
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1748 #1748
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1762 #1762
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1711 #1711
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1023 #1023
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1037 #1037
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1058 #1058
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1076 #1076
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1726 #1726
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2555 #2555
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1696 #1696
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2517 #2517
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1306 #1306
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1317 #1317
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2538 #2538
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2231 #2231
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2493 #2493
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1477 #1477
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1495 #1495
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1546 #1546
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #43 #43
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #50 #50
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #57 #57
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #63 #63
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #70 #70
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #76 #76
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #82 #82
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #88 #88
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #95 #95
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #101 #101
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #108 #108
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #114 #114
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #124 #124
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #132 #132
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #143 #143
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #154 #154
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2741 #2741
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1959 #1959
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #224 #224
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #237 #237
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #263 #263
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1939 #1939
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2739 #2739
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2722 #2722
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1919 #1919
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1891 #1891
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1862 #1862
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2675 #2675
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1837 #1837
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2653 #2653
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1793 #1793
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2243 #2243
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1748 #1748
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1762 #1762
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1711 #1711
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1023 #1023
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1037 #1037
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1058 #1058
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1076 #1076
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1726 #1726
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2555 #2555
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1696 #1696
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2517 #2517
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1306 #1306
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1317 #1317
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2538 #2538
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2231 #2231
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2493 #2493
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1477 #1477
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1495 #1495
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #1546 #1546
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #43 #43
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #50 #50
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #57 #57
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #63 #63
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #70 #70
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #76 #76
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #82 #82
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #88 #88
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #95 #95
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #101 #101
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #108 #108
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #114 #114
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #124 #124
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #132 #132
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #143 #143
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #154 #154
[mk-proof] #1640 refl #1639
[mk-app] #1639 = #2741 #2741
[mk-proof] #1640 refl #1639
[inst-discovered] theory-solving 0x0 basic# ; #2756
[mk-app] #1639 = #2756 #2756
[mk-proof] #1640 rewrite #1639
[instance] 0x0 #1639
[end-of-instance]
[mk-app] #1641 = #1955 #1955
[mk-proof] #1642 monotonicity #1640 #1641
[mk-app] #1643 = #1959 #1959
[mk-proof] #1644 refl #1643
[mk-app] #1643 = #224 #224
[mk-proof] #1644 refl #1643
[mk-app] #1643 = #237 #237
[mk-proof] #1644 refl #1643
[mk-app] #1643 = #263 #263
[mk-proof] #1644 refl #1643
[inst-discovered] theory-solving 0x0 basic# ; #2264
[mk-app] #1643 = #2264 #2264
[mk-proof] #1644 rewrite #1643
[instance] 0x0 #1643
[end-of-instance]
[mk-app] #1645 = #1939 #1939
[mk-proof] #1646 refl #1645
[inst-discovered] theory-solving 0x0 basic# ; #2726
[mk-app] #1645 = #2726 #2726
[mk-proof] #1646 rewrite #1645
[instance] 0x0 #1645
[end-of-instance]
[mk-app] #1647 = #2727 #2727
[mk-proof] #1648 monotonicity #1646 #1647
[mk-app] #1649 = #2733 #2733
[mk-proof] #1650 monotonicity #1648 #1649
[inst-discovered] theory-solving 0x0 basic# ; #2733
[mk-proof] #1651 rewrite #1649
[instance] 0x0 #1649
[end-of-instance]
[mk-proof] #1652 trans #1650 #1651 #1649
[mk-app] #1653 = #2739 #2739
[mk-proof] #1654 refl #1653
[inst-discovered] theory-solving 0x0 basic# ; #1935
[mk-app] #1653 = #1935 #1935
[mk-proof] #1654 rewrite #1653
[instance] 0x0 #1653
[end-of-instance]
[mk-app] #1655 = #2257 #2257
[mk-proof] #1656 monotonicity #1654 #1655
[mk-app] #1657 = #2692 #2692
[mk-proof] #1658 monotonicity #1656 #1657
[inst-discovered] theory-solving 0x0 basic# ; #2692
[mk-proof] #1659 rewrite #1657
[instance] 0x0 #1657
[end-of-instance]
[mk-proof] #1660 trans #1658 #1659 #1657
[mk-app] #1661 = #2722 #2722
[mk-proof] #1662 refl #1661
[inst-discovered] theory-solving 0x0 basic# ; #1914
[mk-app] #1661 = #1914 #1914
[mk-proof] #1662 rewrite #1661
[instance] 0x0 #1661
[end-of-instance]
[mk-app] #1664 = #1919 #1919
[mk-proof] #1665 refl #1664
[inst-discovered] theory-solving 0x0 basic# ; #1885
[mk-app] #1664 = #1885 #1885
[mk-proof] #1665 rewrite #1664
[instance] 0x0 #1664
[end-of-instance]
[mk-app] #1663 = #1891 #1891
[mk-proof] #1666 refl #1663
[inst-discovered] theory-solving 0x0 basic# ; #2253
[mk-app] #1663 = #2253 #2253
[mk-proof] #1666 rewrite #1663
[instance] 0x0 #1663
[end-of-instance]
[mk-app] #1667 = #2693 #2693
[mk-proof] #1668 monotonicity #1666 #1667
[mk-app] #2227 = #2696 #2696
[mk-proof] #2228 monotonicity #1668 #2227
[mk-app] #2229 = #1854 #1854
[mk-proof] #2447 monotonicity #2228 #2229
[mk-app] #2448 = #1856 #1856
[mk-proof] #2450 monotonicity #2447 #2448
[inst-discovered] theory-solving 0x0 basic# ; #1856
[mk-proof] #2451 rewrite #2448
[instance] 0x0 #2448
[end-of-instance]
[mk-proof] #2454 trans #2450 #2451 #2448
[mk-app] #2455 = #1857 #1857
[mk-proof] #2459 monotonicity #2454 #2455
[mk-app] #2460 = #1862 #1862
[mk-proof] #2462 refl #2460
[inst-discovered] theory-solving 0x0 basic# ; #2665
[mk-app] #2460 = #2665 #2665
[mk-proof] #2462 rewrite #2460
[instance] 0x0 #2460
[end-of-instance]
[mk-app] #2463 = #2675 #2675
[mk-proof] #2465 refl #2463
[mk-app] #2463 = #1817 #1817
[mk-proof] #2465 monotonicity #2685 #2463
[mk-app] #2466 = #1818 #1818
[mk-proof] #2468 monotonicity #2465 #2466
[mk-app] #2469 = #1819 #1819
[mk-proof] #2470 monotonicity #2468 #2469
[mk-app] #2471 = #1823 #1823
[mk-proof] #2472 monotonicity #2470 #2471
[mk-app] #1601 = #1829 #1829
[mk-proof] #1602 monotonicity #2472 #1601
[mk-app] #1603 = #1831 #1831
[mk-proof] #1604 monotonicity #1602 #1603
[inst-discovered] theory-solving 0x0 basic# ; #1831
[mk-proof] #1605 rewrite #1603
[instance] 0x0 #1603
[end-of-instance]
[mk-proof] #1606 trans #1604 #1605 #1603
[mk-app] #1607 = #1832 #1832
[mk-proof] #1608 monotonicity #1606 #1607
[mk-app] #1609 = #1837 #1837
[mk-proof] #1610 refl #1609
[inst-discovered] theory-solving 0x0 basic# ; #2632
[mk-app] #1609 = #2632 #2632
[mk-proof] #1610 rewrite #1609
[instance] 0x0 #1609
[end-of-instance]
[mk-app] #1611 = #2634 #2634
[mk-proof] #1612 monotonicity #1610 #1611
[mk-app] #1613 = #2644 #2644
[mk-proof] #1614 monotonicity #1612 #1613
[inst-discovered] theory-solving 0x0 basic# ; #2644
[mk-proof] #1615 rewrite #1613
[instance] 0x0 #1613
[end-of-instance]
[mk-proof] #1616 trans #1614 #1615 #1613
[mk-app] #1617 = #2653 #2653
[mk-proof] #1618 refl #1617
[inst-discovered] theory-solving 0x0 basic# ; #1788
[mk-app] #1617 = #1788 #1788
[mk-proof] #1618 rewrite #1617
[instance] 0x0 #1617
[end-of-instance]
[mk-app] #1619 = #1793 #1793
[mk-proof] #1620 refl #1619
[inst-discovered] theory-solving 0x0 basic# ; #1811
[mk-app] #1619 = #1811 #1811
[mk-proof] #1620 rewrite #1619
[instance] 0x0 #1619
[end-of-instance]
[mk-app] #1621 = #2243 #2243
[mk-proof] #1622 refl #1621
[inst-discovered] theory-solving 0x0 basic# ; #2628
[mk-app] #1621 = #2628 #2628
[mk-proof] #1622 rewrite #1621
[instance] 0x0 #1621
[end-of-instance]
[mk-app] #1623 = #1748 #1748
[mk-proof] #1624 refl #1623
[inst-discovered] theory-solving 0x0 basic# ; #1757
[mk-app] #1623 = #1757 #1757
[mk-proof] #1624 rewrite #1623
[instance] 0x0 #1623
[end-of-instance]
[mk-app] #1625 = #1762 #1762
[mk-proof] #1626 refl #1625
[inst-discovered] theory-solving 0x0 basic# ; #1706
[mk-app] #1625 = #1706 #1706
[mk-proof] #1626 rewrite #1625
[instance] 0x0 #1625
[end-of-instance]
[mk-app] #1627 = #1711 #1711
[mk-proof] #1628 refl #1627
[mk-app] #1627 = #1023 #1023
[mk-proof] #1628 refl #1627
[mk-app] #1627 = #1037 #1037
[mk-proof] #1628 refl #1627
[mk-app] #1627 = #1058 #1058
[mk-proof] #1628 refl #1627
[mk-app] #1627 = #1076 #1076
[mk-proof] #1628 refl #1627
[inst-discovered] theory-solving 0x0 basic# ; #1719
[mk-app] #1627 = #1719 #1719
[mk-proof] #1628 rewrite #1627
[instance] 0x0 #1627
[end-of-instance]
[mk-app] #1630 = #1720 #1720
[mk-proof] #1631 monotonicity #1628 #1630
[mk-app] #1629 = #1723 #1723
[mk-proof] #1632 monotonicity #1631 #1629
[mk-app] #1633 = #1726 #1726
[mk-proof] #1634 refl #1633
[inst-discovered] theory-solving 0x0 basic# ; #2547
[mk-app] #1633 = #2547 #2547
[mk-proof] #1634 rewrite #1633
[instance] 0x0 #1633
[end-of-instance]
[mk-app] #2224 = #2555 #2555
[mk-proof] #2225 refl #2224
[inst-discovered] theory-solving 0x0 basic# ; #1691
[mk-app] #2224 = #1691 #1691
[mk-proof] #2225 rewrite #2224
[instance] 0x0 #2224
[end-of-instance]
[mk-app] #2226 = #1696 #1696
[mk-proof] #2414 refl #2226
[inst-discovered] theory-solving 0x0 basic# ; #2506
[mk-app] #2226 = #2506 #2506
[mk-proof] #2414 rewrite #2226
[instance] 0x0 #2226
[end-of-instance]
[mk-app] #2415 = #2507 #2507
[mk-proof] #2417 monotonicity #2414 #2415
[mk-app] #2418 = #2513 #2513
[mk-proof] #2426 monotonicity #2417 #2418
[mk-app] #2427 = #2517 #2517
[mk-proof] #2429 refl #2427
[mk-app] #2427 = #1306 #1306
[mk-proof] #2429 refl #2427
[mk-app] #2427 = #1317 #1317
[mk-proof] #2429 refl #2427
[inst-discovered] theory-solving 0x0 basic# ; #2532
[mk-app] #2427 = #2532 #2532
[mk-proof] #2429 rewrite #2427
[instance] 0x0 #2427
[end-of-instance]
[mk-app] #2430 = #2534 #2534
[mk-proof] #2432 monotonicity #2429 #2430
[mk-app] #2433 = #2538 #2538
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2231 #2231
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2493 #2493
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1477 #1477
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1495 #1495
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1546 #1546
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #43 #43
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #50 #50
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #57 #57
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #63 #63
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #70 #70
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #76 #76
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #82 #82
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #88 #88
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #95 #95
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #101 #101
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #108 #108
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #114 #114
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #124 #124
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #132 #132
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #143 #143
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #154 #154
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2741 #2741
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1959 #1959
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #224 #224
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #237 #237
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #263 #263
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1939 #1939
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2739 #2739
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2722 #2722
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1919 #1919
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1891 #1891
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1862 #1862
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2675 #2675
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1837 #1837
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2653 #2653
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1793 #1793
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2243 #2243
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1748 #1748
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1762 #1762
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1711 #1711
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1023 #1023
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1037 #1037
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1058 #1058
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1076 #1076
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1726 #1726
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2555 #2555
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1696 #1696
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2517 #2517
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1306 #1306
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1317 #1317
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2538 #2538
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2231 #2231
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #2493 #2493
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1477 #1477
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1495 #1495
[mk-proof] #2435 refl #2433
[mk-app] #2433 = #1546 #1546
[mk-proof] #2435 refl #2433
[assign] #43 justification -1: 
[assign] #50 justification -1: 
[assign] #57 justification -1: 
[assign] #63 justification -1: 
[assign] #70 justification -1: 
[assign] #76 justification -1: 
[assign] #82 justification -1: 
[assign] #88 justification -1: 
[assign] #95 justification -1: 
[assign] #101 justification -1: 
[assign] #108 justification -1: 
[assign] #114 justification -1: 
[assign] #124 justification -1: 
[attach-enode] #130 0
[attach-enode] #131 0
[attach-enode] #36 0
[attach-enode] #132 0
[assign] #132 justification -1: 
[assign] #143 justification -1: 
[assign] #154 justification -1: 
[assign] #2741 justification -1: 
[assign] #1959 justification -1: 
[assign] #224 justification -1: 
[assign] #237 justification -1: 
[assign] #263 justification -1: 
[assign] #1939 justification -1: 
[assign] #2739 justification -1: 
[assign] #2722 justification -1: 
[assign] #1919 justification -1: 
[assign] #1891 justification -1: 
[assign] #1862 justification -1: 
[assign] #2675 justification -1: 
[assign] #1837 justification -1: 
[assign] #2653 justification -1: 
[assign] #1793 justification -1: 
[assign] #2243 justification -1: 
[assign] #1748 justification -1: 
[assign] #1762 justification -1: 
[assign] #1711 justification -1: 
[assign] #1023 justification -1: 
[assign] #1037 justification -1: 
[assign] #1058 justification -1: 
[assign] #1076 justification -1: 
[assign] #1726 justification -1: 
[assign] #2555 justification -1: 
[assign] #1696 justification -1: 
[assign] #2517 justification -1: 
[assign] #1306 justification -1: 
[assign] #1317 justification -1: 
[assign] #2538 justification -1: 
[assign] #2231 justification -1: 
[assign] #2493 justification -1: 
[assign] #1477 justification -1: 
[assign] #1495 justification -1: 
[assign] #1546 justification -1: 
[mk-app] #2226 = #43 #1
[mk-proof] #2414 iff-true #2912 #2226
[mk-app] #2415 = #50 #1
[mk-proof] #2417 iff-true #2124 #2415
[mk-app] #2418 = #57 #1
[mk-proof] #2426 iff-true #2156 #2418
[mk-app] #1627 = #63 #1
[mk-proof] #1628 iff-true #2937 #1627
[mk-app] #1630 = #70 #1
[mk-proof] #1631 iff-true #2307 #1630
[mk-app] #1663 = #76 #1
[mk-proof] #1666 iff-true #2926 #1663
[mk-app] #1667 = #82 #1
[mk-proof] #1668 iff-true #2143 #1667
[mk-app] #2227 = #88 #1
[mk-proof] #2228 iff-true #2150 #2227
[mk-app] #2229 = #95 #1
[mk-proof] #2447 iff-true #2909 #2229
[mk-app] #2448 = #101 #1
[mk-proof] #2450 iff-true #2134 #2448
[mk-app] #2451 = #108 #1
[mk-proof] #2454 iff-true #2881 #2451
[mk-app] #2455 = #114 #1
[mk-proof] #2459 iff-true #2891 #2455
[mk-app] #1617 = #124 #1
[mk-proof] #1618 iff-true #2902 #1617
[mk-app] #1645 = #143 #1
[mk-proof] #1646 iff-true #2103 #1645
[mk-app] #1647 = #154 #1
[mk-proof] #1648 iff-true #2110 #1647
[mk-app] #2463 = #2741 #1
[mk-proof] #2465 iff-true #2753 #2463
[mk-app] #2466 = #1959 #1
[mk-proof] #2468 iff-true #1963 #2466
[mk-app] #2469 = #224 #1
[mk-proof] #2470 iff-true #2865 #2469
[mk-app] #1621 = #237 #1
[mk-proof] #1622 iff-true #2875 #1621
[mk-app] #1653 = #263 #1
[mk-proof] #1654 iff-true #2843 #1653
[mk-app] #1655 = #1939 #1
[mk-proof] #1656 iff-true #1944 #1655
[mk-app] #1657 = #2739 #1
[mk-proof] #1658 iff-true #1922 #1657
[mk-app] #1659 = #2722 #1
[mk-proof] #1660 iff-true #1898 #1659
[mk-app] #2471 = #1919 #1
[mk-proof] #2472 iff-true #2256 #2471
[mk-app] #1609 = #1891 #1
[mk-proof] #1610 iff-true #1895 #1609
[mk-app] #1611 = #1862 #1
[mk-proof] #1612 iff-true #1867 #1611
[mk-app] #1643 = #2675 #1
[mk-proof] #1644 iff-true #2682 #1643
[mk-app] #1649 = #1837 #1
[mk-proof] #1650 iff-true #1842 #1649
[mk-app] #1651 = #2653 #1
[mk-proof] #1652 iff-true #2660 #1651
[mk-app] #2460 = #1793 #1
[mk-proof] #2462 iff-true #1798 #2460
[mk-app] #1623 = #2243 #1
[mk-proof] #1624 iff-true #2601 #1623
[mk-app] #1633 = #1748 #1
[mk-proof] #1634 iff-true #1753 #1633
[mk-app] #1619 = #1762 #1
[mk-proof] #1620 iff-true #1767 #1619
[mk-app] #2427 = #1711 #1
[mk-proof] #2429 iff-true #1716 #2427
[mk-app] #2430 = #1023 #1
[mk-proof] #2432 iff-true #2038 #2430
[mk-app] #1661 = #1037 #1
[mk-proof] #1662 iff-true #2445 #1661
[mk-app] #1629 = #1058 #1
[mk-proof] #1632 iff-true #2802 #1629
[mk-app] #1664 = #1076 #1
[mk-proof] #1665 iff-true #2000 #1664
[mk-app] #2224 = #1726 #1
[mk-proof] #2225 iff-true #1731 #2224
[mk-app] #1625 = #2555 #1
[mk-proof] #1626 iff-true #2563 #1625
[mk-app] #1613 = #1696 #1
[mk-proof] #1614 iff-true #1699 #1613
[mk-app] #1615 = #2517 #1
[mk-proof] #1616 iff-true #2528 #1615
[mk-app] #1601 = #1306 #1
[mk-proof] #1602 iff-true #2781 #1601
[mk-app] #1603 = #1317 #1
[mk-proof] #1604 iff-true #2790 #1603
[mk-app] #1605 = #2538 #1
[mk-proof] #1606 iff-true #2544 #1605
[mk-app] #1607 = #2231 #1
[mk-proof] #1608 iff-true #2478 #1607
[mk-app] #1639 = #2493 #1
[mk-proof] #1640 iff-true #1638 #1639
[mk-app] #1641 = #1477 #1
[mk-proof] #1642 iff-true #2276 #1641
[mk-app] #2433 = #1495 #1
[mk-proof] #2435 iff-true #2766 #2433
[mk-app] #2436 = #1546 #1
[mk-proof] #2437 iff-true #1964 #2436
[eq-expl] #130 root
[new-match] 0x15d9277e0 #124 #118 #130 ; #131
[new-match] 0x15d927810 #143 #118 #130 ; #131
[mk-app] #2438 >= #131 #36
[mk-app] #2439 = #2438 #2438
[mk-proof] #1567 refl #2439
[mk-app] #1568 not #124
[mk-app] #1569 or #1568 #2438
[mk-proof] #1570 quant-inst #1569
[instance] 0x15d9277e0 #1570 ; 1
[assign] #2438 justification -1: p13
[end-of-instance]
[mk-app] #2439 <= #131 #36
[assign] #2439 justification -1: p14
[push] 0
[mk-app] #1567 x@1@01
[mk-app] #1571 $Ref.null
[mk-app] #1572 = #1567 #1571
[mk-app] #1573 not #1572
[mk-proof] #1574 asserted #1573
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[begin-check] 1
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1572 #2
[mk-proof] #1576 iff-false #1574 #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1572 #2
[mk-proof] #1576 iff-false #1574 #1575
[mk-app] #1575 ~ #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 rewrite #1575
[mk-proof] #1577 mp #1574 #1576 #1573
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[mk-app] #1575 = #1573 #1573
[mk-proof] #1576 refl #1575
[attach-enode] #1567 0
[attach-enode] #1571 0
[attach-enode] #1572 0
[assign] (not #1572) justification -1: 
[mk-app] #1575 = #1572 #2
[mk-proof] #1576 iff-false #1574 #1575
[mk-app] #1577 Seq<Int>!val!0
[mk-app] #1578 $Ref!val!0
[mk-app] #1579 $Ref!val!1
[push] 1
[mk-app] #1580 $t@3@01
[mk-app] #1581 $Snap.first #1580
[mk-app] #1582 $Snap.second #1580
[mk-app] #1583 $Snap.combine #1581 #1582
[mk-app] #1584 = #1580 #1583
[mk-proof] #1585 asserted #1584
[mk-app] #1586 = #1584 #1584
[mk-proof] #1587 refl #1586
[mk-app] #1586 $Snap.unit
[mk-app] #1587 = #1582 #1586
[mk-proof] #1588 asserted #1587
[mk-app] #1589 = #1587 #1587
[mk-proof] #1590 refl #1589
[mk-app] #1589 $SortWrappers.$SnapToSeq<Int> #1581
[mk-app] #1590 Seq_length #1589
[mk-app] #1591 $t@2@01
[mk-app] #1592 Seq_length #1591
[mk-app] #1593 + #1592 #151
[mk-app] #1594 = #1590 #1593
[mk-proof] #1596 asserted #1594
[mk-app] #1597 + #151 #1592
[inst-discovered] theory-solving 0x0 arith# ; #1593
[mk-app] #1595 = #1593 #1597
[mk-proof] #1598 rewrite #1595
[instance] 0x0 #1595
[end-of-instance]
[mk-app] #1599 = #1590 #1597
[mk-app] #1600 = #1594 #1599
[mk-proof] #2221 monotonicity #1598 #1600
[attach-meaning] #176 arith (- 1)
[mk-app] #2222 * #176 #1592
[mk-app] #2223 + #1590 #2222
[mk-app] #2387 = #2223 #151
[inst-discovered] theory-solving 0x0 arith# ; #1599
[mk-app] #2388 = #1599 #2387
[mk-proof] #2390 rewrite #2388
[instance] 0x0 #2388
[end-of-instance]
[mk-app] #2391 = #1594 #2387
[mk-proof] #2395 trans #2221 #2390 #2391
[mk-proof] #2396 mp #1596 #2395 #2387
[pop] 1 2
[push] 1
[mk-app] #1580 idx_zero@6@01
[mk-app] #1581 offset<Ptr32> #1567 #36
[mk-app] #1589 = #1580 #1581
[mk-proof] #1590 asserted #1589
[mk-app] #1591 = #1589 #1589
[mk-proof] #1592 refl #1591
[mk-app] #1591 idx_one@7@01
[mk-app] #1592 next<Ptr32> #1580
[mk-app] #1593 = #1591 #1592
[mk-proof] #1594 asserted #1593
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1581 #1580
[mk-proof] #1586 symm #1590 #1582
[mk-app] #1587 = #1593 #1593
[mk-proof] #1583 refl #1587
[mk-app] #1587 = #1592 #1591
[mk-proof] #1583 symm #1594 #1587
[mk-app] #1587 = #1593 #1593
[mk-proof] #1583 refl #1587
[mk-app] #1587 = #1592 #1591
[mk-proof] #1583 symm #1594 #1587
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1581 #1580
[mk-proof] #1586 symm #1590 #1582
[mk-app] #1582 ~ #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 ~ #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 rewrite #1582
[mk-proof] #1587 mp #1590 #1586 #1589
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 rewrite #1582
[mk-proof] #1587 mp #1594 #1586 #1593
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1589 #1589
[mk-proof] #1586 refl #1582
[mk-app] #1582 = #1593 #1593
[mk-proof] #1586 refl #1582
[attach-enode] #1580 0
[attach-enode] #1581 0
[attach-enode] #1589 0
[assign] #1589 justification -1: 
[attach-enode] #1591 0
[attach-enode] #1592 0
[attach-enode] #1593 0
[assign] #1593 justification -1: 
[mk-app] #1582 = #1581 #1580
[mk-proof] #1586 symm #1590 #1582
[mk-app] #1587 = #1592 #1591
[mk-proof] #1583 symm #1594 #1587
[eq-expl] #1567 root
[eq-expl] #36 root
[new-match] 0x15d927f60 #1477 #1476 #36 #1567 ; #1581
[eq-expl] #1580 lit #1589 ; #1581
[eq-expl] #1581 root
[new-match] 0x15d927f98 #1495 #1483 #36 #1567 ; #1592 (#1580 #1581)
[mk-app] #1584 offset_inj<Int> #1581 #1567
[mk-app] #1596 = #1584 #36
[mk-app] #1597 = #1596 #1596
[mk-proof] #1595 refl #1597
[mk-app] #1598 not #1477
[mk-app] #1599 or #1598 #1596
[mk-proof] #1600 quant-inst #1599
[instance] 0x15d927f60 #1600 ; 1
[attach-enode] #1584 1
[attach-enode] #1596 1
[assign] #1596 justification -1: p49
[end-of-instance]
[mk-app] #1597 next<Ptr32> #1581
[mk-app] #1595 + #151 #36
[mk-app] #2221 offset<Ptr32> #1567 #1595
[mk-app] #2222 = #1597 #2221
[inst-discovered] theory-solving 0x0 arith# ; #1595
[mk-app] #2223 = #1595 #151
[mk-proof] #2387 rewrite #2223
[instance] 0x0 #2223
[end-of-instance]
[mk-app] #2388 offset<Ptr32> #1567 #151
[mk-app] #2390 = #2221 #2388
[mk-proof] #2391 monotonicity #2387 #2390
[mk-app] #2395 = #1597 #2388
[mk-app] #2396 = #2222 #2395
[mk-proof] #1588 monotonicity #2391 #2396
[mk-app] #1585 not #1495
[mk-app] #2398 or #1585 #2395
[mk-app] #2399 or #1585 #2222
[mk-proof] #2401 quant-inst #2399
[mk-app] #2402 = #2399 #2398
[mk-proof] #2403 monotonicity #1588 #2402
[mk-app] #2404 = #2398 #2398
[mk-proof] #2405 rewrite #2404
[mk-proof] #1562 trans #2403 #2405 #2402
[mk-proof] #1563 mp #2401 #1562 #2398
[instance] 0x15d927f98 #2401 ; 1
[attach-enode] #1597 1
[attach-enode] #151 1
[attach-enode] #2388 1
[attach-enode] #2395 1
[assign] #2395 justification -1: p50
[end-of-instance]
[eq-expl] #151 root
[new-match] 0x15d928410 #1477 #1476 #151 #1567 ; #2388
[mk-app] #1561 offset_inj<Int> #2388 #1567
[mk-app] #1564 = #1561 #151
[mk-app] #1565 = #1564 #1564
[mk-proof] #1566 refl #1565
[mk-app] #2218 or #1598 #1564
[mk-proof] #2219 quant-inst #2218
[instance] 0x15d928410 #2219 ; 2
[attach-enode] #1561 2
[attach-enode] #1564 2
[assign] #1564 justification -1: p49
[end-of-instance]
[push] 2
[mk-app] #1565 = #1580 #1591
[mk-app] #1566 not #1565
[mk-app] #2220 not #1566
[mk-proof] #2381 asserted #2220
[inst-discovered] theory-solving 0x0 basic# ; #2220
[mk-app] #2382 = #2220 #1565
[mk-proof] #2314 rewrite #2382
[instance] 0x0 #2382
[end-of-instance]
[mk-proof] #2323 mp #2381 #2314 #1565
[begin-check] 3
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1591 #1580
[mk-proof] #2315 symm #2323 #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1591 #1580
[mk-proof] #2315 symm #2323 #2324
[mk-app] #2324 ~ #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 rewrite #2324
[mk-proof] #2316 mp #2323 #2315 #1565
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[mk-app] #2324 = #1565 #1565
[mk-proof] #2315 refl #2324
[attach-enode] #1565 0
[assign] #1565 justification -1: 
[mk-app] #2324 = #1591 #1580
[mk-proof] #2315 symm #2323 #2324
[mk-proof] #2316 unit-resolution #2219 #2276 #1564
[mk-proof] #2215 unit-resolution #1563 #2766 #2395
[mk-app] #2216 = #2388 #1597
[mk-proof] #2217 symm #2215 #2216
[mk-app] #2371 = #1597 #1592
[mk-proof] #2372 monotonicity #1586 #2371
[mk-app] #2312 = #1592 #1597
[mk-proof] #2339 symm #2372 #2312
[mk-app] #2340 = #1581 #2388
[mk-proof] #2341 trans* #1586 #2323 #1594 #2339 #2215 #2340
[mk-proof] #2342 unit-resolution #1600 #2276 #1596
[mk-app] #2212 = #36 #1584
[mk-proof] #2213 symm #2342 #2212
[mk-app] #2214 = #1584 #1561
[mk-proof] #2335 monotonicity #2341 #2214
[mk-app] #2336 = #36 #151
[mk-proof] #2368 trans* #2213 #2335 #2316 #2336
[mk-app] #2363 = #2336 #2
[mk-proof] #2364 rewrite #2363
[mk-proof] #2365 mp #2368 #2364 #2
[pop] 1 3
[mk-proof] #2324 asserted #1566
[mk-app] #2315 = #1566 #1566
[mk-proof] #2216 refl #2315
[mk-app] #2315 Seq_singleton #36
[mk-app] #2216 Seq_length #2315
[mk-app] #2217 = #2216 #151
[mk-proof] #2366 asserted #2217
[mk-app] #2209 = #2217 #2217
[mk-proof] #2210 refl #2209
[mk-app] #2209 seq@8@01
[mk-app] #2210 $t@2@01
[mk-app] #2211 Seq_append #2210 #2315
[mk-app] #1552 = #2209 #2211
[mk-proof] #1553 asserted #1552
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1565 #2
[mk-proof] #1556 iff-false #2324 #1554
[mk-app] #1557 = #2217 #2217
[mk-proof] #1555 refl #1557
[mk-app] #1557 = #1552 #1552
[mk-proof] #1555 refl #1557
[mk-app] #1557 = #2211 #2209
[mk-proof] #1555 symm #1553 #1557
[mk-app] #1557 = #1552 #1552
[mk-proof] #1555 refl #1557
[mk-app] #1557 = #2211 #2209
[mk-proof] #1555 symm #1553 #1557
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1565 #2
[mk-proof] #1556 iff-false #2324 #1554
[mk-app] #1554 ~ #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 ~ #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 ~ #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 rewrite #1554
[mk-proof] #1557 mp #2324 #1556 #1566
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 rewrite #1554
[mk-proof] #1557 mp #2366 #1556 #2217
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 rewrite #1554
[mk-proof] #1557 mp #1553 #1556 #1552
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1566 #1566
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #2217 #2217
[mk-proof] #1556 refl #1554
[mk-app] #1554 = #1552 #1552
[mk-proof] #1556 refl #1554
[attach-enode] #1565 0
[assign] (not #1565) justification -1: 
[attach-enode] #2315 0
[attach-enode] #2216 0
[attach-enode] #2217 0
[assign] #2217 justification -1: 
[attach-enode] #2209 0
[attach-enode] #2210 0
[attach-enode] #2211 0
[attach-enode] #1552 0
[assign] #1552 justification -1: 
[mk-app] #1554 = #1565 #2
[mk-proof] #1556 iff-false #2324 #1554
[mk-app] #1557 = #2211 #2209
[mk-proof] #1555 symm #1553 #1557
[eq-expl] #2315 root
[new-match] 0x12c068e80 #124 #118 #2315 ; #2216
[new-match] 0x12c068eb0 #143 #118 #2315 ; #2216
[new-match] 0x12c068ee0 #154 #153 #36 ; #2315
[new-match] 0x12c068f10 #224 #153 #36 ; #2315
[eq-expl] #2210 root
[new-match] 0x12c068f40 #1959 #204 #2315 #2210 ; #2211
[mk-app] #1558 >= #2216 #36
[mk-app] #1559 = #1558 #1558
[mk-proof] #1560 refl #1559
[mk-app] #2206 or #1568 #1558
[mk-proof] #2207 quant-inst #2206
[instance] 0x12c068e80 #2207 ; 1
[assign] #1558 justification -1: p13
[end-of-instance]
[mk-app] #1559 = #2216 #36
[mk-app] #1560 not #1559
[mk-app] #2208 = #2315 #130
[mk-app] #2380 or #1560 #2208
[mk-app] #2321 = #2380 #2380
[mk-proof] #2377 refl #2321
[mk-app] #2378 not #143
[mk-app] #2328 or #2378 #1560 #2208
[mk-app] #2329 or #2378 #2380
[mk-proof] #2330 quant-inst #2329
[mk-app] #2331 = #2329 #2328
[mk-proof] #2332 rewrite #2331
[mk-proof] #2203 mp #2330 #2332 #2328
[instance] 0x12c068eb0 #2330 ; 1
[attach-enode] #1559 1
[mk-app] #2204 <= #2216 #36
[attach-enode] #2208 1
[end-of-instance]
[mk-app] #2321 Seq_index #2315 #36
[mk-app] #2377 = #2321 #36
[mk-app] #2205 = #2377 #2377
[mk-proof] #2200 refl #2205
[mk-app] #2201 not #224
[mk-app] #2202 or #2201 #2377
[mk-proof] #2197 quant-inst #2202
[instance] 0x12c068f10 #2197 ; 1
[attach-enode] #2321 1
[attach-enode] #2377 1
[assign] #2377 justification -1: p19
[end-of-instance]
[mk-app] #2205 = #2210 #130
[mk-app] #2200 not #2205
[mk-app] #2198 = #2211 #2315
[mk-app] #2199 or #2200 #2198
[mk-app] #2194 not #2199
[mk-app] #2195 not #2208
[mk-app] #2196 = #2211 #2210
[mk-app] #2318 or #2195 #2196
[mk-app] #2191 not #2318
[mk-app] #2192 or #2194 #2191
[mk-app] #2193 not #2192
[mk-app] #2188 = #2193 #2193
[mk-proof] #2189 refl #2188
[mk-app] #2190 not #1959
[mk-app] #2185 or #2190 #2193
[mk-proof] #2186 quant-inst #2185
[instance] 0x12c068f40 #2186 ; 1
[attach-enode] #2205 1
[attach-enode] #2198 1
[mk-app] #2187 or #2199 #2205
[mk-proof] #2182 def-axiom #2187
[mk-app] #2183 not #2198
[mk-app] #2184 or #2199 #2183
[mk-proof] #2179 def-axiom #2184
[mk-app] #2180 or #2194 #2200 #2198
[mk-proof] #2181 def-axiom #2180
[attach-enode] #2196 1
[mk-app] #2176 or #2318 #2208
[mk-proof] #2177 def-axiom #2176
[mk-app] #2178 not #2196
[mk-app] #2338 or #2318 #2178
[mk-proof] #2357 def-axiom #2338
[mk-app] #2359 or #2191 #2195 #2196
[mk-proof] #2360 def-axiom #2359
[mk-app] #2361 or #2192 #2199
[mk-proof] #2362 def-axiom #2361
[mk-app] #2317 or #2192 #2318
[mk-proof] #2173 def-axiom #2317
[mk-app] #2174 or #2193 #2194 #2191
[mk-proof] #2175 def-axiom #2174
[assign] (not #2192) justification -1: p18
[end-of-instance]
[assign] #2199 clause p70 p73
  (or (not (= $t@2@01 Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int))) 
  (or (not (or (not (= $t@2@01 Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int)))) (not (or (not (= (Seq_singleton 0::Int) Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01)))) 

[assign] #2318 clause p72 p73
  (or (not (= (Seq_singleton 0::Int) Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01)) 
  (or (not (or (not (= $t@2@01 Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int)))) (not (or (not (= (Seq_singleton 0::Int) Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01)))) 

[mk-app] #2188 <= #2216 #151
[mk-app] #2189 >= #2216 #151
[assign] #2188 justification -1: p61
[assign] #2189 justification -1: p61
[assign] (not #2204) justification -1: p75
[new-match] 0x12c069a30 #1696 #1173 #36 #2315 ; #2321
[new-match] 0x12c069a68 #2722 #412 #36 #2315 #2210 ; #2321 #2211 (#2315 #2315) (#2315 #2315)
[mk-app] #2170 * #176 #2216
[mk-app] #2171 + #36 #2170
[mk-app] #2172 >= #2171 #36
[mk-app] #2167 >= #36 #36
[mk-app] #2168 not #2167
[mk-app] #2169 Seq_contains_trigger #2315 #2321
[mk-app] #2164 or #2172 #2168 #2169
[inst-discovered] theory-solving 0x0 arith# ; #2171
[mk-app] #2165 = #2171 #2170
[mk-proof] #2166 rewrite #2165
[instance] 0x0 #2165
[end-of-instance]
[mk-app] #2161 >= #2170 #36
[mk-app] #2162 = #2172 #2161
[mk-proof] #2163 monotonicity #2166 #2162
[inst-discovered] theory-solving 0x0 arith# ; #2161
[mk-app] #2158 = #2161 #2204
[mk-proof] #2159 rewrite #2158
[instance] 0x0 #2158
[end-of-instance]
[mk-app] #2160 = #2172 #2204
[mk-proof] #2376 trans #2163 #2159 #2160
[inst-discovered] theory-solving 0x0 arith# ; #2167
[mk-app] #2349 = #2167 #1
[mk-proof] #2351 rewrite #2349
[instance] 0x0 #2349
[end-of-instance]
[mk-app] #2352 not #1
[mk-app] #2353 = #2168 #2352
[mk-proof] #2354 monotonicity #2351 #2353
[inst-discovered] theory-solving 0x0 basic# ; #2352
[mk-app] #2355 = #2352 #2
[mk-proof] #3592 rewrite #2355
[instance] 0x0 #2355
[end-of-instance]
[mk-app] #3593 = #2168 #2
[mk-proof] #3594 trans #2354 #3592 #3593
[mk-app] #3599 or #2204 #2 #2169
[mk-app] #4518 = #2164 #3599
[mk-proof] #4519 monotonicity #2376 #3594 #4518
[mk-app] #4520 or #2169 #2204
[inst-discovered] theory-solving 0x0 basic# ; #3599
[mk-app] #4523 = #3599 #4520
[mk-proof] #4526 rewrite #4523
[instance] 0x0 #4523
[end-of-instance]
[mk-app] #4507 = #2164 #4520
[mk-proof] #4512 trans #4519 #4526 #4507
[mk-app] #4481 not #1696
[mk-app] #4482 or #4481 #2169 #2204
[mk-app] #4483 or #4481 #2164
[mk-proof] #4484 quant-inst #4483
[mk-app] #4487 or #4481 #4520
[mk-app] #4458 = #4483 #4487
[mk-proof] #4459 monotonicity #4512 #4458
[mk-app] #3495 = #4487 #4482
[mk-proof] #3496 rewrite #3495
[mk-app] #4462 = #4483 #4482
[mk-proof] #4463 trans #4459 #3496 #4462
[mk-proof] #3501 mp #4484 #4463 #4482
[instance] 0x12c069a30 #4484 ; 2
[attach-enode] #2169 2
[assign] #2169 justification -1: p42 (not p65)
[end-of-instance]
[mk-app] #4466 Seq_length #2210
[mk-app] #4467 Seq_add #36 #4466
[mk-app] #4468 Seq_sub #4467 #4466
[mk-app] #4469 = #4468 #36
[mk-app] #4472 not #4469
[mk-app] #4475 Seq_index #2211 #4467
[mk-app] #4447 = #4475 #2321
[mk-app] #4452 not #4447
[mk-app] #3457 or #4472 #4452
[mk-app] #3458 not #3457
[mk-app] #4407 or #2208 #2205 #2172 #2168 #3458
[mk-app] #4422 or #4452 #4472
[inst-discovered] theory-solving 0x0 basic# ; #3457
[mk-app] #4427 = #3457 #4422
[mk-proof] #4392 rewrite #4427
[instance] 0x0 #4427
[end-of-instance]
[mk-app] #3432 not #4422
[mk-app] #3433 = #3458 #3432
[mk-proof] #3434 monotonicity #4392 #3433
[mk-app] #4393 or #2208 #2205 #2204 #2 #3432
[mk-app] #4394 = #4407 #4393
[mk-proof] #4395 monotonicity #2376 #3594 #3434 #4394
[mk-app] #4398 or #2204 #2205 #2208 #3432
[inst-discovered] theory-solving 0x0 basic# ; #4393
[mk-app] #4401 = #4393 #4398
[mk-proof] #3055 rewrite #4401
[instance] 0x0 #4401
[end-of-instance]
[mk-app] #3056 = #4407 #4398
[mk-proof] #3057 trans #4395 #3055 #3056
[mk-app] #4043 not #2722
[mk-app] #4373 or #4043 #2204 #2205 #2208 #3432
[mk-app] #4374 or #4043 #4407
[mk-proof] #4375 quant-inst #4374
[mk-app] #4381 or #4043 #4398
[mk-app] #4386 = #4374 #4381
[mk-proof] #4351 monotonicity #3057 #4386
[mk-app] #4356 = #4381 #4373
[mk-proof] #4329 rewrite #4356
[mk-app] #4330 = #4374 #4373
[mk-proof] #4331 trans #4351 #4329 #4330
[mk-proof] #4337 mp #4375 #4331 #4373
[instance] 0x12c069a68 #4375 ; 2
[attach-enode] #4466 2
[attach-enode] #4467 2
[attach-enode] #4475 2
[attach-enode] #4447 2
[attach-enode] #4468 2
[attach-enode] #4469 2
[mk-app] #4342 or #4422 #4447
[mk-proof] #4307 def-axiom #4342
[mk-app] #4312 or #4422 #4469
[mk-proof] #3366 def-axiom #4312
[mk-app] #3367 or #3432 #4452 #4472
[mk-proof] #3368 def-axiom #3367
[end-of-instance]
[assign] (not #1559) clause (not p64) p65
  (not (= (Seq_length (Seq_singleton 0::Int)) 0::Int)) 
  (<= (Seq_length (Seq_singleton 0::Int)) 0::Int) 

[push] 2
[mk-app] #4273 address<Int> #1580
[mk-app] #3379 mod #4273 #1507
[mk-app] #3380 = #3379 #36
[mk-app] #3381 not #3380
[mk-app] #4274 not #3381
[mk-proof] #4275 asserted #4274
[inst-discovered] theory-solving 0x0 basic# ; #4274
[mk-app] #4276 = #4274 #3380
[mk-proof] #4282 rewrite #4276
[instance] 0x0 #4276
[end-of-instance]
[mk-proof] #4287 mp #4275 #4282 #3380
[begin-check] 3
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 ~ #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 rewrite #3337
[mk-proof] #3339 mp #4287 #3338 #3380
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[mk-app] #3337 = #3380 #3380
[mk-proof] #3338 refl #3337
[attach-enode] #4273 0
[attach-enode] #1507 0
[attach-enode] #3379 0
[attach-enode] #3380 0
[mk-app] #3337 <= #3379 #36
[mk-app] #3338 >= #3379 #36
[assign] #3380 justification -1: 
[mk-app] #3339 div #4273 #1507
[mk-app] #4242 < #1507 #36
[mk-app] #4243 - #36 #1507
[mk-app] #4244 if #4242 #4243 #1507
[mk-app] #4245 - #4244 #151
[mk-app] #4251 <= #36 #1507
[mk-app] #4256 not #4251
[inst-discovered] theory-solving 0x0 arith# ; #4242
[mk-app] #4204 = #4242 #4256
[mk-proof] #4205 rewrite #4204
[instance] 0x0 #4204
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #4251
[mk-app] #4206 = #4251 #1
[mk-proof] #4207 rewrite #4206
[instance] 0x0 #4206
[end-of-instance]
[mk-app] #4211 = #4256 #2352
[mk-proof] #4217 monotonicity #4207 #4211
[inst-discovered] theory-solving 0x0 basic# ; #2352
[instance] 0x0 #2355
[end-of-instance]
[mk-app] #3296 = #4256 #2
[mk-proof] #3297 trans #4217 #3592 #3296
[mk-app] #3298 = #4242 #2
[mk-proof] #3303 trans #4205 #3297 #3298
[attach-meaning] #176 arith (- 1)
[mk-app] #4218 * #176 #1507
[mk-app] #4219 + #36 #4218
[inst-discovered] theory-solving 0x0 arith# ; #4243
[mk-app] #4220 = #4243 #4219
[mk-proof] #4225 rewrite #4220
[instance] 0x0 #4220
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4218
[mk-app] #3264 = #4218 #1527
[mk-proof] #3265 rewrite #3264
[instance] 0x0 #3264
[end-of-instance]
[mk-app] #3266 + #36 #1527
[mk-app] #4191 = #4219 #3266
[mk-proof] #4196 monotonicity #3265 #4191
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3266
[mk-app] #3214 = #3266 #1527
[mk-proof] #3215 rewrite #3214
[instance] 0x0 #3214
[end-of-instance]
[mk-app] #3216 = #4219 #1527
[mk-proof] #3221 trans #4196 #3215 #3216
[mk-app] #4151 = #4243 #1527
[mk-proof] #3230 trans #4225 #3221 #4151
[mk-app] #3231 if #2 #1527 #1507
[mk-app] #3236 = #4244 #3231
[mk-proof] #4152 monotonicity #3303 #3230 #3236
[inst-discovered] theory-solving 0x0 arith# ; #3231
[mk-app] #4153 = #3231 #1507
[mk-proof] #4154 rewrite #4153
[instance] 0x0 #4153
[end-of-instance]
[mk-app] #4157 = #4244 #1507
[mk-proof] #4163 trans #4152 #4154 #4157
[mk-app] #4164 - #1507 #151
[mk-app] #4165 = #4245 #4164
[mk-proof] #4166 monotonicity #4163 #4165
[attach-meaning] #176 arith (- 1)
[mk-app] #4171 * #176 #151
[mk-app] #3169 + #1507 #4171
[inst-discovered] theory-solving 0x0 arith# ; #4164
[mk-app] #3174 = #4164 #3169
[mk-proof] #3183 rewrite #3174
[instance] 0x0 #3174
[end-of-instance]
[mk-app] #3184 = #4245 #3169
[mk-proof] #3185 trans #4166 #3183 #3184
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4171
[mk-app] #3190 = #4171 #176
[mk-proof] #4131 rewrite #3190
[instance] 0x0 #3190
[end-of-instance]
[mk-app] #3193 + #1507 #176
[mk-app] #4132 = #3169 #3193
[mk-proof] #4133 monotonicity #4131 #4132
[mk-app] #4134 Int
[attach-meaning] #4134 arith 3
[inst-discovered] theory-solving 0x0 arith# ; #3193
[mk-app] #4140 = #3193 #4134
[mk-proof] #4145 rewrite #4140
[instance] 0x0 #4140
[end-of-instance]
[mk-app] #3131 = #3169 #4134
[mk-proof] #3132 trans #4133 #4145 #3131
[mk-app] #3133 = #4245 #4134
[mk-proof] #4094 trans #3185 #3132 #3133
[mk-app] #4109 = #1507 #36
[mk-app] #4114 * #1507 #3339
[mk-app] #3093 + #4114 #3379
[mk-app] #3094 = #3093 #4273
[mk-app] #3095 <= #3379 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4109
[mk-app] #4242 = #4109 #2
[mk-proof] #4204 rewrite #4242
[instance] 0x0 #4242
[end-of-instance]
[attach-enode] #3339 0
[attach-enode] #4114 0
[attach-enode] #3093 0
[attach-enode] #3094 0
[mk-app] #4205 or #4109 #3094
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4205
[assign] #3094 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4109
[mk-app] #4242 = #4109 #2
[mk-proof] #4204 rewrite #4242
[instance] 0x0 #4242
[end-of-instance]
[attach-enode] #3338 0
[mk-app] #4205 or #4109 #3338
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4205
[assign] #3338 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4109
[mk-app] #4242 = #4109 #2
[mk-proof] #4204 rewrite #4242
[instance] 0x0 #4242
[end-of-instance]
[attach-enode] #3095 0
[mk-app] #4205 or #4109 #3095
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4205
[assign] #3095 justification -1: true
[end-of-instance]
[assign] #3337 clause p81 (not p80)
  (<= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int) 
  (not (= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 

[eq-expl] #1580 lit #1589 ; #1581
[eq-expl] #1581 root
[new-match] 0x12c06a8d0 #1546 #1510 #36 #36 #1567 ; #4273 (#1580 #1581) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #4205 * #1507 #36
[mk-app] #3298 * #1527 #36
[mk-app] #3303 address<Int> #1581
[mk-app] #4243 * #176 #3303
[mk-app] #4220 + #4205 #3298 #4243 #3303
[mk-app] #4225 = #4220 #36
[inst-discovered] theory-solving 0x0 arith# ; #4205
[mk-app] #4109 = #4205 #36
[mk-proof] #4242 rewrite #4109
[instance] 0x0 #4109
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #3298
[mk-app] #4204 = #3298 #36
[mk-proof] #4151 rewrite #4204
[instance] 0x0 #4204
[end-of-instance]
[mk-app] #3230 + #36 #36 #4243 #3303
[mk-app] #4244 = #4220 #3230
[mk-proof] #3231 monotonicity #4242 #4151 #4244
[inst-discovered] theory-solving 0x0 arith# ; #3230
[mk-app] #3236 = #3230 #36
[mk-proof] #4152 rewrite #3236
[instance] 0x0 #3236
[end-of-instance]
[mk-proof] #4153 trans #3231 #4152 #4225
[mk-app] #4154 = #36 #36
[mk-app] #4157 = #4225 #4154
[mk-proof] #4163 monotonicity #4153 #4157
[inst-discovered] theory-solving 0x0 arith# ; #4154
[mk-app] #4245 = #4154 #1
[mk-proof] #4164 rewrite #4245
[instance] 0x0 #4245
[end-of-instance]
[mk-app] #4165 = #4225 #1
[mk-proof] #4166 trans #4163 #4164 #4165
[instance] 0x12c06a8d0 #4166 ; 0
[end-of-instance]
[decide-and-or] #2318 #2195
[push] 3
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 4
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[eq-expl] #4466 root
[new-match] 0x12c06a9b0 #263 #246 #4466 #4467 ; #4468
[eq-expl] #2211 root
[new-match] 0x12c06a9e8 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x12c06aa20 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aa60 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aaa0 #124 #118 #2210 ; #4466
[new-match] 0x12c06aad0 #143 #118 #2210 ; #4466
[new-match] 0x12c06ab00 #237 #229 #4466 #36 ; #4467
[mk-app] #3230 * #176 #4466
[mk-app] #4244 * #176 #4468
[mk-app] #3231 + #4467 #3230 #4244
[mk-app] #3236 = #3231 #36
[mk-app] #4152 + #3230 #4467 #4244
[inst-discovered] theory-solving 0x0 arith# ; #3231
[mk-app] #4153 = #3231 #4152
[mk-proof] #4154 rewrite #4153
[instance] 0x0 #4153
[end-of-instance]
[mk-app] #4157 = #4152 #36
[mk-app] #4163 = #3236 #4157
[mk-proof] #4245 monotonicity #4154 #4163
[attach-meaning] #176 arith (- 1)
[mk-app] #4164 * #176 #4467
[mk-app] #4165 + #4466 #4164 #4468
[mk-app] #4166 = #4165 #36
[inst-discovered] theory-solving 0x0 arith# ; #4157
[mk-app] #3174 = #4157 #4166
[mk-proof] #3183 rewrite #3174
[instance] 0x0 #3174
[end-of-instance]
[mk-app] #3184 = #3236 #4166
[mk-proof] #3185 trans #4245 #3183 #3184
[mk-app] #3133 not #263
[mk-app] #4094 or #3133 #4166
[mk-app] #4074 or #3133 #3236
[mk-proof] #4075 quant-inst #4074
[mk-app] #4076 = #4074 #4094
[mk-proof] #4077 monotonicity #3185 #4076
[mk-app] #4083 = #4094 #4094
[mk-proof] #4088 rewrite #4083
[mk-proof] #4044 trans #4077 #4088 #4076
[mk-proof] #4045 mp #4075 #4044 #4094
[instance] 0x12c06a9b0 #4075 ; 3
[attach-enode] #176 3
[attach-enode] #4164 3
[attach-enode] #4165 3
[attach-enode] #4166 3
[mk-app] #4046 <= #4165 #36
[mk-app] #4052 >= #4165 #36
[assign] #4166 justification -1: p21
[end-of-instance]
[mk-app] #4057 Seq_length #2211
[mk-app] #4021 * #176 #4057
[mk-app] #4026 + #4467 #4021
[mk-app] #2965 >= #4026 #36
[mk-app] #2966 >= #4467 #36
[mk-app] #2967 not #2966
[mk-app] #2972 Seq_contains_trigger #2211 #4475
[mk-app] #3995 or #2965 #2967 #2972
[mk-app] #3996 + #4021 #4467
[inst-discovered] theory-solving 0x0 arith# ; #4026
[mk-app] #3997 = #4026 #3996
[mk-proof] #3998 rewrite #3997
[instance] 0x0 #3997
[end-of-instance]
[mk-app] #4001 >= #3996 #36
[mk-app] #3984 = #2965 #4001
[mk-proof] #3989 monotonicity #3998 #3984
[attach-meaning] #176 arith (- 1)
[mk-app] #4590 + #4057 #4164
[mk-app] #3049 <= #4590 #36
[inst-discovered] theory-solving 0x0 arith# ; #4001
[mk-app] #3050 = #4001 #3049
[mk-proof] #3051 rewrite #3050
[instance] 0x0 #3050
[end-of-instance]
[mk-app] #3052 = #2965 #3049
[mk-proof] #3053 trans #3989 #3051 #3052
[mk-app] #3054 or #3049 #2967 #2972
[mk-app] #3058 = #3995 #3054
[mk-proof] #3059 monotonicity #3053 #3058
[mk-app] #3060 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3054
[mk-app] #3061 = #3054 #3060
[mk-proof] #3414 rewrite #3061
[instance] 0x0 #3061
[end-of-instance]
[mk-app] #3415 = #3995 #3060
[mk-proof] #3416 trans #3059 #3414 #3415
[mk-app] #3417 or #4481 #2967 #2972 #3049
[mk-app] #3418 or #4481 #3995
[mk-proof] #3419 quant-inst #3418
[mk-app] #3421 or #4481 #3060
[mk-app] #3422 = #3418 #3421
[mk-proof] #3420 monotonicity #3416 #3422
[mk-app] #3423 = #3421 #3417
[mk-proof] #3424 rewrite #3423
[mk-app] #3425 = #3418 #3417
[mk-proof] #3857 trans #3420 #3424 #3425
[mk-proof] #3858 mp #3419 #3857 #3417
[instance] 0x12c06a9e8 #3419 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3859 Seq_index #2210 #4467
[mk-app] #3860 = #4475 #3859
[mk-app] #3861 + #4467 #3230
[mk-app] #3862 >= #3861 #36
[mk-app] #3863 or #2208 #2205 #3860 #3862 #2967
[mk-app] #4362 + #3230 #4467
[inst-discovered] theory-solving 0x0 arith# ; #3861
[mk-app] #4363 = #3861 #4362
[mk-proof] #4364 rewrite #4363
[instance] 0x0 #4363
[end-of-instance]
[mk-app] #4365 >= #4362 #36
[mk-app] #4366 = #3862 #4365
[mk-proof] #4367 monotonicity #4364 #4366
[attach-meaning] #176 arith (- 1)
[mk-app] #4368 + #4466 #4164
[mk-app] #4369 <= #4368 #36
[inst-discovered] theory-solving 0x0 arith# ; #4365
[mk-app] #4370 = #4365 #4369
[mk-proof] #4371 rewrite #4370
[instance] 0x0 #4370
[end-of-instance]
[mk-app] #4372 = #3862 #4369
[mk-proof] #4376 trans #4367 #4371 #4372
[mk-app] #4377 or #2208 #2205 #3860 #4369 #2967
[mk-app] #4378 = #3863 #4377
[mk-proof] #4379 monotonicity #4376 #4378
[mk-app] #4380 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #4377
[mk-app] #4382 = #4377 #4380
[mk-proof] #4383 rewrite #4382
[instance] 0x0 #4382
[end-of-instance]
[mk-app] #4384 = #3863 #4380
[mk-proof] #4385 trans #4379 #4383 #4384
[mk-app] #4387 not #1939
[mk-app] #4388 or #4387 #2205 #2208 #2967 #3860 #4369
[mk-app] #4389 or #4387 #3863
[mk-proof] #4390 quant-inst #4389
[mk-app] #4391 or #4387 #4380
[mk-app] #4610 = #4389 #4391
[mk-proof] #4611 monotonicity #4385 #4610
[mk-app] #3519 = #4391 #4388
[mk-proof] #3520 rewrite #3519
[mk-app] #3521 = #4389 #4388
[mk-proof] #3522 trans #4611 #3520 #3521
[mk-proof] #3523 mp #4390 #3522 #4388
[instance] 0x12c06aa20 #4390 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3524 >= #4466 #36
[mk-app] #3525 = #3524 #3524
[mk-proof] #3526 refl #3525
[mk-app] #3527 or #1568 #3524
[mk-proof] #3528 quant-inst #3527
[instance] 0x12c06aaa0 #3528 ; 3
[assign] #3524 justification -1: p13
[end-of-instance]
[mk-app] #3525 = #4466 #36
[mk-app] #3526 not #3525
[mk-app] #3529 or #3526 #2205
[mk-app] #3530 = #3529 #3529
[mk-proof] #3531 refl #3530
[mk-app] #3532 or #2378 #3526 #2205
[mk-app] #3533 or #2378 #3529
[mk-proof] #3534 quant-inst #3533
[mk-app] #3535 = #3533 #3532
[mk-proof] #3536 rewrite #3535
[mk-proof] #3537 mp #3534 #3536 #3532
[instance] 0x12c06aad0 #3534 ; 3
[attach-enode] #3525 3
[mk-app] #3538 <= #4466 #36
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3530 + #36 #4466 #4164
[mk-app] #3531 = #3530 #36
[inst-discovered] theory-solving 0x0 arith# ; #3530
[mk-app] #3539 = #3530 #4368
[mk-proof] #3540 rewrite #3539
[instance] 0x0 #3539
[end-of-instance]
[mk-app] #3541 = #4368 #36
[mk-app] #3542 = #3531 #3541
[mk-proof] #3934 monotonicity #3540 #3542
[mk-app] #3935 not #237
[mk-app] #3936 or #3935 #3541
[mk-app] #3937 or #3935 #3531
[mk-proof] #3938 quant-inst #3937
[mk-app] #3939 = #3937 #3936
[mk-proof] #3940 monotonicity #3934 #3939
[mk-app] #4485 = #3936 #3936
[mk-proof] #4486 rewrite #4485
[mk-proof] #4488 trans #3940 #4486 #3939
[mk-proof] #4489 mp #3938 #4488 #3936
[instance] 0x12c06ab00 #3938 ; 3
[attach-enode] #3541 3
[mk-app] #4490 >= #4368 #36
[assign] #3541 justification -1: p20
[end-of-instance]
[assign] #4046 clause p86 (not p85)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #4052 clause p87 (not p85)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3538) clause (not p95) p94
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p92 (not p96)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #4490 clause p97 (not p96)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #4491 <= #4468 #36
[mk-app] #4492 >= #4468 #36
[assign] #4491 justification -1: p78
[assign] #4492 justification -1: p78
[assign] #2966 clause p88 (not p92) (not p93)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #3417 #2972
[push] 5
[assign] #2972 decision axiom
[mk-app] #1577 Seq<Int>!val!0
[mk-app] #1579 $Ref!val!0
[mk-app] #1578 $Ref!val!1
[mk-app] #4602 Ptr32!val!0
[mk-app] #4603 Ptr32!val!1
[mk-app] #2993 Seq<Int>!val!1
[mk-app] #2994 Seq<Int>!val!2
[mk-app] #2995 Seq<Int>!val!3
[mk-app] #2996 Int
[attach-meaning] #2996 arith 7720
[attach-meaning] #176 arith (- 1)
[mk-app] #2997 Int
[attach-meaning] #2997 arith 2
[pop] 3 6
[attach-enode] #176 0
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 3
[push] 2
[mk-app] #4273 address<Int> #1580
[mk-app] #3379 mod #4273 #1507
[mk-app] #3380 = #3379 #36
[mk-app] #3381 not #3380
[mk-proof] #4274 asserted #3381
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[begin-check] 3
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3380 #2
[mk-proof] #4276 iff-false #4274 #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3380 #2
[mk-proof] #4276 iff-false #4274 #4275
[mk-app] #4275 ~ #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 rewrite #4275
[mk-proof] #4282 mp #4274 #4276 #3381
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[mk-app] #4275 = #3381 #3381
[mk-proof] #4276 refl #4275
[attach-enode] #4273 0
[attach-enode] #1507 0
[attach-enode] #3379 0
[attach-enode] #3380 0
[mk-app] #4275 <= #3379 #36
[mk-app] #4276 >= #3379 #36
[assign] (not #3380) justification -1: 
[mk-app] #4282 div #4273 #1507
[mk-app] #4287 < #1507 #36
[mk-app] #3337 - #36 #1507
[mk-app] #3338 if #4287 #3337 #1507
[mk-app] #3339 - #3338 #151
[inst-discovered] theory-solving 0x0 arith# ; #4287
[mk-app] #4114 = #4287 #4256
[mk-proof] #3093 rewrite #4114
[instance] 0x0 #4114
[end-of-instance]
[mk-app] #3094 = #4287 #2
[mk-proof] #3095 trans #3093 #3297 #3094
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3337
[mk-app] #3133 = #3337 #4219
[mk-proof] #4074 rewrite #3133
[instance] 0x0 #3133
[end-of-instance]
[mk-app] #4075 = #3337 #1527
[mk-proof] #4152 trans #4074 #3221 #4075
[mk-app] #4153 if #2 #1527 #1507
[mk-app] #4154 = #3338 #4153
[mk-proof] #4157 monotonicity #3095 #4152 #4154
[inst-discovered] theory-solving 0x0 arith# ; #4153
[mk-app] #4163 = #4153 #1507
[mk-proof] #4245 rewrite #4163
[instance] 0x0 #4163
[end-of-instance]
[mk-app] #4165 = #3338 #1507
[mk-proof] #4166 trans #4157 #4245 #4165
[mk-app] #3174 - #1507 #151
[mk-app] #3183 = #3339 #3174
[mk-proof] #3184 monotonicity #4166 #3183
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3174
[mk-app] #3185 = #3174 #3169
[mk-proof] #4094 rewrite #3185
[instance] 0x0 #3185
[end-of-instance]
[mk-app] #4076 = #3339 #3169
[mk-proof] #4077 trans #3184 #4094 #4076
[mk-app] #4083 = #3339 #4134
[mk-proof] #4088 trans #4077 #3132 #4083
[mk-app] #4044 = #1507 #36
[mk-app] #4045 * #1507 #4282
[mk-app] #3418 + #4045 #3379
[mk-app] #3419 = #3418 #4273
[mk-app] #3054 <= #3379 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4044
[mk-app] #4287 = #4044 #2
[mk-proof] #4114 rewrite #4287
[instance] 0x0 #4287
[end-of-instance]
[attach-enode] #4282 0
[attach-enode] #4045 0
[attach-enode] #3418 0
[attach-enode] #3419 0
[mk-app] #3093 or #4044 #3419
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3093
[assign] #3419 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4044
[mk-app] #4287 = #4044 #2
[mk-proof] #4114 rewrite #4287
[instance] 0x0 #4287
[end-of-instance]
[attach-enode] #4276 0
[mk-app] #3093 or #4044 #4276
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3093
[assign] #4276 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4044
[mk-app] #4287 = #4044 #2
[mk-proof] #4114 rewrite #4287
[instance] 0x0 #4287
[end-of-instance]
[attach-enode] #3054 0
[mk-app] #3093 or #4044 #3054
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3093
[assign] #3054 justification -1: true
[end-of-instance]
[mk-app] #3093 = #3380 #2
[mk-proof] #3094 iff-false #4274 #3093
[assign] (not #4275) clause (not p81) p80 (not p82)
  (not (<= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 
  (= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int) 
  (not (>= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 

[new-match] 0x12c06a8b0 #1546 #1510 #36 #36 #1567 ; #4273 (#1580 #1581) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #3530 * #176 #3303
[mk-app] #3531 + #4205 #3298 #3530 #3303
[mk-app] #3526 = #3531 #36
[mk-app] #4044 + #36 #36 #3530 #3303
[mk-app] #4287 = #3531 #4044
[mk-proof] #4114 monotonicity #4242 #4151 #4287
[inst-discovered] theory-solving 0x0 arith# ; #4044
[mk-app] #3529 = #4044 #36
[mk-proof] #3524 rewrite #3529
[instance] 0x0 #3529
[end-of-instance]
[mk-proof] #3863 trans #4114 #3524 #3526
[mk-app] #3995 = #36 #36
[mk-app] #4244 = #3526 #3995
[mk-proof] #3231 monotonicity #3863 #4244
[inst-discovered] theory-solving 0x0 arith# ; #3995
[mk-app] #3236 = #3995 #1
[mk-proof] #4243 rewrite #3236
[instance] 0x0 #3236
[end-of-instance]
[mk-app] #4220 = #3526 #1
[mk-proof] #4225 trans #3231 #4243 #4220
[instance] 0x12c06a8b0 #4225 ; 0
[end-of-instance]
[decide-and-or] #2318 #2195
[push] 3
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 4
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[new-match] 0x12c06a990 #263 #246 #4466 #4467 ; #4468
[new-match] 0x12c06a9c8 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x12c06aa00 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aa40 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aa80 #124 #118 #2210 ; #4466
[new-match] 0x12c06aab0 #143 #118 #2210 ; #4466
[new-match] 0x12c06aae0 #237 #229 #4466 #36 ; #4467
[mk-app] #4044 * #176 #4468
[mk-app] #4287 + #4467 #3230 #4044
[mk-app] #4114 = #4287 #36
[mk-app] #3529 + #3230 #4467 #4044
[inst-discovered] theory-solving 0x0 arith# ; #4287
[mk-app] #3524 = #4287 #3529
[mk-proof] #3863 rewrite #3524
[instance] 0x0 #3524
[end-of-instance]
[mk-app] #3995 = #3529 #36
[mk-app] #4244 = #4114 #3995
[mk-proof] #3231 monotonicity #3863 #4244
[attach-meaning] #176 arith (- 1)
[mk-app] #3236 + #4466 #4164 #4468
[mk-app] #4243 = #3236 #36
[inst-discovered] theory-solving 0x0 arith# ; #3995
[mk-app] #4220 = #3995 #4243
[mk-proof] #4225 rewrite #4220
[instance] 0x0 #4220
[end-of-instance]
[mk-app] #3095 = #4114 #4243
[mk-proof] #3337 trans #3231 #4225 #3095
[mk-app] #3133 not #263
[mk-app] #4074 or #3133 #4243
[mk-app] #4075 or #3133 #4114
[mk-proof] #4152 quant-inst #4075
[mk-app] #3338 = #4075 #4074
[mk-proof] #4153 monotonicity #3337 #3338
[mk-app] #4154 = #4074 #4074
[mk-proof] #4157 rewrite #4154
[mk-proof] #4163 trans #4153 #4157 #3338
[mk-proof] #4245 mp #4152 #4163 #4074
[instance] 0x12c06a990 #4152 ; 3
[attach-enode] #176 3
[attach-enode] #4164 3
[attach-enode] #3236 3
[attach-enode] #4243 3
[mk-app] #4165 <= #3236 #36
[mk-app] #4166 >= #3236 #36
[assign] #4243 justification -1: p21
[end-of-instance]
[mk-app] #3339 or #2965 #2967 #2972
[mk-app] #3174 or #3049 #2967 #2972
[mk-app] #3183 = #3339 #3174
[mk-proof] #3184 monotonicity #3053 #3183
[mk-app] #3185 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3174
[mk-app] #4094 = #3174 #3185
[mk-proof] #4076 rewrite #4094
[instance] 0x0 #4094
[end-of-instance]
[mk-app] #4077 = #3339 #3185
[mk-proof] #4083 trans #3184 #4076 #4077
[mk-app] #4088 or #4481 #2967 #2972 #3049
[mk-app] #3058 or #4481 #3339
[mk-proof] #3059 quant-inst #3058
[mk-app] #3060 or #4481 #3185
[mk-app] #3061 = #3058 #3060
[mk-proof] #3414 monotonicity #4083 #3061
[mk-app] #3415 = #3060 #4088
[mk-proof] #3416 rewrite #3415
[mk-app] #3421 = #3058 #4088
[mk-proof] #3422 trans #3414 #3416 #3421
[mk-proof] #3420 mp #3059 #3422 #4088
[instance] 0x12c06a9c8 #3059 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3417 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3423 or #2208 #2205 #3860 #4369 #2967
[mk-app] #3424 = #3417 #3423
[mk-proof] #3425 monotonicity #4376 #3424
[mk-app] #3857 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3423
[mk-app] #3858 = #3423 #3857
[mk-proof] #4387 rewrite #3858
[instance] 0x0 #3858
[end-of-instance]
[mk-app] #4389 = #3417 #3857
[mk-proof] #4390 trans #3425 #4387 #4389
[mk-app] #4377 not #1939
[mk-app] #4378 or #4377 #2205 #2208 #2967 #3860 #4369
[mk-app] #4379 or #4377 #3417
[mk-proof] #4380 quant-inst #4379
[mk-app] #4382 or #4377 #3857
[mk-app] #4383 = #4379 #4382
[mk-proof] #4384 monotonicity #4390 #4383
[mk-app] #4385 = #4382 #4378
[mk-proof] #4391 rewrite #4385
[mk-app] #4610 = #4379 #4378
[mk-proof] #4611 trans #4384 #4391 #4610
[mk-proof] #4388 mp #4380 #4611 #4378
[instance] 0x12c06aa00 #4380 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3519 >= #4466 #36
[mk-app] #3520 = #3519 #3519
[mk-proof] #3521 refl #3520
[mk-app] #3522 or #1568 #3519
[mk-proof] #3523 quant-inst #3522
[instance] 0x12c06aa80 #3523 ; 3
[assign] #3519 justification -1: p13
[end-of-instance]
[mk-app] #3520 not #3525
[mk-app] #3521 or #3520 #2205
[mk-app] #3527 = #3521 #3521
[mk-proof] #3528 refl #3527
[mk-app] #3533 or #2378 #3520 #2205
[mk-app] #3534 or #2378 #3521
[mk-proof] #3532 quant-inst #3534
[mk-app] #3535 = #3534 #3533
[mk-proof] #3536 rewrite #3535
[mk-proof] #3537 mp #3532 #3536 #3533
[instance] 0x12c06aab0 #3532 ; 3
[attach-enode] #3525 3
[mk-app] #3935 <= #4466 #36
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3527 + #36 #4466 #4164
[mk-app] #3528 = #3527 #36
[inst-discovered] theory-solving 0x0 arith# ; #3527
[mk-app] #3937 = #3527 #4368
[mk-proof] #3938 rewrite #3937
[instance] 0x0 #3937
[end-of-instance]
[mk-app] #3539 = #4368 #36
[mk-app] #3540 = #3528 #3539
[mk-proof] #3541 monotonicity #3938 #3540
[mk-app] #3542 not #237
[mk-app] #3934 or #3542 #3539
[mk-app] #3936 or #3542 #3528
[mk-proof] #3939 quant-inst #3936
[mk-app] #3940 = #3936 #3934
[mk-proof] #4485 monotonicity #3541 #3940
[mk-app] #4486 = #3934 #3934
[mk-proof] #4488 rewrite #4486
[mk-proof] #4489 trans #4485 #4488 #3940
[mk-proof] #4046 mp #3939 #4489 #3934
[instance] 0x12c06aae0 #3939 ; 3
[attach-enode] #3539 3
[mk-app] #4052 >= #4368 #36
[assign] #3539 justification -1: p20
[end-of-instance]
[assign] #4165 clause p86 (not p85)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #4166 clause p87 (not p85)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3935) clause (not p95) p94
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p92 (not p96)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #4052 clause p97 (not p96)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #3538 <= #4468 #36
[mk-app] #4490 >= #4468 #36
[assign] #3538 justification -1: p78
[assign] #4490 justification -1: p78
[assign] #2966 clause p88 (not p92) (not p93)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #4088 #2972
[push] 5
[assign] #2972 decision axiom
[mk-app] #1577 Seq<Int>!val!0
[mk-app] #4603 $Ref!val!0
[mk-app] #1578 $Ref!val!1
[mk-app] #2995 Ptr32!val!0
[mk-app] #2994 Ptr32!val!1
[mk-app] #4602 Seq<Int>!val!1
[mk-app] #1579 Seq<Int>!val!2
[mk-app] #2996 Seq<Int>!val!3
[mk-app] #2993 Int
[attach-meaning] #2993 arith 2438
[attach-meaning] #176 arith (- 1)
[pop] 3 6
[attach-enode] #176 0
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 3
[push] 2
[mk-app] #4273 address<Int> #1580
[mk-app] #3379 mod #4273 #1507
[mk-app] #3380 = #3379 #36
[mk-proof] #3381 asserted #3380
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 ~ #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 rewrite #4274
[mk-proof] #3094 mp #3381 #3093 #3380
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[mk-app] #4274 = #3380 #3380
[mk-proof] #3093 refl #4274
[attach-enode] #4273 0
[attach-enode] #1507 0
[attach-enode] #3379 0
[attach-enode] #3380 0
[mk-app] #4274 <= #3379 #36
[mk-app] #3093 >= #3379 #36
[assign] #3380 justification -1: 
[mk-app] #3094 div #4273 #1507
[mk-app] #4275 < #1507 #36
[mk-app] #4276 - #36 #1507
[mk-app] #4282 if #4275 #4276 #1507
[mk-app] #4045 - #4282 #151
[inst-discovered] theory-solving 0x0 arith# ; #4275
[mk-app] #3418 = #4275 #4256
[mk-proof] #3419 rewrite #3418
[instance] 0x0 #3418
[end-of-instance]
[mk-app] #3054 = #4275 #2
[mk-proof] #3133 trans #3419 #3297 #3054
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4276
[mk-app] #4075 = #4276 #4219
[mk-proof] #4152 rewrite #4075
[instance] 0x0 #4075
[end-of-instance]
[mk-app] #3529 = #4276 #1527
[mk-proof] #3524 trans #4152 #3221 #3529
[mk-app] #3863 if #2 #1527 #1507
[mk-app] #3995 = #4282 #3863
[mk-proof] #4244 monotonicity #3133 #3524 #3995
[inst-discovered] theory-solving 0x0 arith# ; #3863
[mk-app] #3231 = #3863 #1507
[mk-proof] #3236 rewrite #3231
[instance] 0x0 #3231
[end-of-instance]
[mk-app] #4243 = #4282 #1507
[mk-proof] #4220 trans #4244 #3236 #4243
[mk-app] #4225 - #1507 #151
[mk-app] #3095 = #4045 #4225
[mk-proof] #3337 monotonicity #4220 #3095
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4225
[mk-app] #4074 = #4225 #3169
[mk-proof] #3338 rewrite #4074
[instance] 0x0 #4074
[end-of-instance]
[mk-app] #4153 = #4045 #3169
[mk-proof] #4154 trans #3337 #3338 #4153
[mk-app] #4157 = #4045 #4134
[mk-proof] #4163 trans #4154 #3132 #4157
[mk-app] #4245 = #1507 #36
[mk-app] #3058 * #1507 #3094
[mk-app] #3059 + #3058 #3379
[mk-app] #3174 = #3059 #4273
[mk-app] #3183 <= #3379 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4245
[mk-app] #4275 = #4245 #2
[mk-proof] #3418 rewrite #4275
[instance] 0x0 #4275
[end-of-instance]
[attach-enode] #3094 0
[attach-enode] #3058 0
[attach-enode] #3059 0
[attach-enode] #3174 0
[mk-app] #3419 or #4245 #3174
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3419
[assign] #3174 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4245
[mk-app] #4275 = #4245 #2
[mk-proof] #3418 rewrite #4275
[instance] 0x0 #4275
[end-of-instance]
[attach-enode] #3093 0
[mk-app] #3419 or #4245 #3093
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3419
[assign] #3093 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4245
[mk-app] #4275 = #4245 #2
[mk-proof] #3418 rewrite #4275
[instance] 0x0 #4275
[end-of-instance]
[attach-enode] #3183 0
[mk-app] #3419 or #4245 #3183
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3419
[assign] #3183 justification -1: true
[end-of-instance]
[assign] #4274 clause p81 (not p80)
  (<= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int) 
  (not (= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 

[new-match] 0x12c06a8d0 #1546 #1510 #36 #36 #1567 ; #4273 (#1580 #1581) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #4245 + #36 #36 #3530 #3303
[mk-app] #4275 = #3531 #4245
[mk-proof] #3418 monotonicity #4242 #4151 #4275
[inst-discovered] theory-solving 0x0 arith# ; #4245
[mk-app] #3419 = #4245 #36
[mk-proof] #3054 rewrite #3419
[instance] 0x0 #3419
[end-of-instance]
[mk-proof] #3133 trans #3418 #3054 #3526
[mk-app] #4276 = #36 #36
[mk-app] #4075 = #3526 #4276
[mk-proof] #4152 monotonicity #3133 #4075
[inst-discovered] theory-solving 0x0 arith# ; #4276
[mk-app] #3529 = #4276 #1
[mk-proof] #3524 rewrite #3529
[instance] 0x0 #3529
[end-of-instance]
[mk-app] #4282 = #3526 #1
[mk-proof] #3863 trans #4152 #3524 #4282
[instance] 0x12c06a8d0 #3863 ; 0
[end-of-instance]
[push] 3
[mk-app] #4245 address<Int> #1591
[mk-app] #4275 mod #4245 #2997
[mk-app] #3418 = #4275 #36
[mk-app] #3419 not #3418
[mk-proof] #3054 asserted #3419
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[begin-check] 4
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3418 #2
[mk-proof] #4276 iff-false #3054 #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3418 #2
[mk-proof] #4276 iff-false #3054 #3133
[mk-app] #3133 ~ #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 rewrite #3133
[mk-proof] #4075 mp #3054 #4276 #3419
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[mk-app] #3133 = #3419 #3419
[mk-proof] #4276 refl #3133
[attach-enode] #4245 0
[attach-enode] #2997 0
[attach-enode] #4275 0
[attach-enode] #3418 0
[mk-app] #3133 <= #4275 #36
[mk-app] #4276 >= #4275 #36
[assign] (not #3418) justification -1: 
[mk-app] #4075 div #4245 #2997
[mk-app] #4152 < #2997 #36
[mk-app] #3529 - #36 #2997
[mk-app] #3524 if #4152 #3529 #2997
[mk-app] #4282 - #3524 #151
[mk-app] #3863 <= #36 #2997
[mk-app] #3995 not #3863
[inst-discovered] theory-solving 0x0 arith# ; #4152
[mk-app] #4244 = #4152 #3995
[mk-proof] #3231 rewrite #4244
[instance] 0x0 #4244
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #3863
[mk-app] #3236 = #3863 #1
[mk-proof] #4243 rewrite #3236
[instance] 0x0 #3236
[end-of-instance]
[mk-app] #4220 = #3995 #2352
[mk-proof] #4045 monotonicity #4243 #4220
[inst-discovered] theory-solving 0x0 basic# ; #2352
[instance] 0x0 #2355
[end-of-instance]
[mk-app] #4225 = #3995 #2
[mk-proof] #3095 trans #4045 #3592 #4225
[mk-app] #3337 = #4152 #2
[mk-proof] #4074 trans #3231 #3095 #3337
[attach-meaning] #176 arith (- 1)
[mk-app] #3338 * #176 #2997
[mk-app] #4153 + #36 #3338
[inst-discovered] theory-solving 0x0 arith# ; #3529
[mk-app] #4154 = #3529 #4153
[mk-proof] #4157 rewrite #4154
[instance] 0x0 #4154
[end-of-instance]
[mk-app] #4163 Int
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3338
[mk-app] #3184 = #3338 #4163
[mk-proof] #3185 rewrite #3184
[instance] 0x0 #3184
[end-of-instance]
[mk-app] #4094 + #36 #4163
[mk-app] #4076 = #4153 #4094
[mk-proof] #4077 monotonicity #3185 #4076
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #4094
[mk-app] #4083 = #4094 #4163
[mk-proof] #3060 rewrite #4083
[instance] 0x0 #4083
[end-of-instance]
[mk-app] #3061 = #4153 #4163
[mk-proof] #3414 trans #4077 #3060 #3061
[mk-app] #4088 = #3529 #4163
[mk-proof] #3415 trans #4157 #3414 #4088
[mk-app] #3416 if #2 #4163 #2997
[mk-app] #3421 = #3524 #3416
[mk-proof] #3422 monotonicity #4074 #3415 #3421
[inst-discovered] theory-solving 0x0 arith# ; #3416
[mk-app] #3420 = #3416 #2997
[mk-proof] #4377 rewrite #3420
[instance] 0x0 #3420
[end-of-instance]
[mk-app] #4379 = #3524 #2997
[mk-proof] #4380 trans #3422 #4377 #4379
[mk-app] #3423 - #2997 #151
[mk-app] #3424 = #4282 #3423
[mk-proof] #3425 monotonicity #4380 #3424
[attach-meaning] #176 arith (- 1)
[mk-app] #3857 + #2997 #4171
[inst-discovered] theory-solving 0x0 arith# ; #3423
[mk-app] #3858 = #3423 #3857
[mk-proof] #4387 rewrite #3858
[instance] 0x0 #3858
[end-of-instance]
[mk-app] #4389 = #4282 #3857
[mk-proof] #4390 trans #3425 #4387 #4389
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4171
[instance] 0x0 #3190
[end-of-instance]
[mk-app] #4382 + #2997 #176
[mk-app] #4383 = #3857 #4382
[mk-proof] #4384 monotonicity #4131 #4383
[inst-discovered] theory-solving 0x0 arith# ; #4382
[mk-app] #4378 = #4382 #151
[mk-proof] #4385 rewrite #4378
[instance] 0x0 #4378
[end-of-instance]
[mk-app] #4391 = #3857 #151
[mk-proof] #4610 trans #4384 #4385 #4391
[mk-app] #4611 = #4282 #151
[mk-proof] #4388 trans #4390 #4610 #4611
[mk-app] #3522 = #2997 #36
[mk-app] #3523 * #2997 #4075
[mk-app] #3534 + #3523 #4275
[mk-app] #3532 = #3534 #4245
[mk-app] #3533 <= #4275 #151
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3522
[mk-app] #4152 = #3522 #2
[mk-proof] #4244 rewrite #4152
[instance] 0x0 #4152
[end-of-instance]
[attach-enode] #4075 0
[attach-enode] #3523 0
[attach-enode] #3534 0
[attach-enode] #3532 0
[mk-app] #3231 or #3522 #3532
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3231
[assign] #3532 justification -1: true
[end-of-instance]
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3522
[mk-app] #4152 = #3522 #2
[mk-proof] #4244 rewrite #4152
[instance] 0x0 #4152
[end-of-instance]
[attach-enode] #4276 0
[mk-app] #3231 or #3522 #4276
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3231
[assign] #4276 justification -1: true
[end-of-instance]
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3522
[mk-app] #4152 = #3522 #2
[mk-proof] #4244 rewrite #4152
[instance] 0x0 #4152
[end-of-instance]
[attach-enode] #3533 0
[mk-app] #3231 or #3522 #3533
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3231
[assign] #3533 justification -1: true
[end-of-instance]
[mk-app] #3231 = #3418 #2
[mk-proof] #3337 iff-false #3054 #3231
[assign] (not #3133) clause (not p86) p85 (not p87)
  (not (<= (mod (address<Int> idx_one@7@01) 2::Int) 0::Int)) 
  (= (mod (address<Int> idx_one@7@01) 2::Int) 0::Int) 
  (not (>= (mod (address<Int> idx_one@7@01) 2::Int) 0::Int)) 

[eq-expl] #1591 lit #1593 ; #1592
[eq-expl] #1592 root
[eq-expl] #2388 lit #2395 ; #1597
[eq-expl] #1597 cg (#1581 #1580) ; #1592
[new-match] 0x15c86f680 #1546 #1510 #36 #151 #1567 ; #4245 (#1591 #2388) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[new-match] 0x15c86f6c0 #1546 #1510 #151 #151 #1567 ; #4245 (#1591 #2388) #4245 (#1591 #2388) (#1567 #1567) (#1567 #1567)
[new-match] 0x15c86f700 #1546 #1510 #151 #36 #1567 ; #4245 (#1591 #2388) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #3527 * #1507 #151
[mk-app] #3528 address<Int> #2388
[mk-app] #3520 * #176 #3528
[mk-app] #3521 + #3527 #3298 #3520 #3303
[mk-app] #3519 = #3521 #36
[inst-discovered] theory-solving 0x0 arith# ; #3527
[mk-app] #3522 = #3527 #1507
[mk-proof] #4152 rewrite #3522
[instance] 0x0 #3522
[end-of-instance]
[mk-app] #4244 + #1507 #36 #3520 #3303
[mk-app] #3417 = #3521 #4244
[mk-proof] #3339 monotonicity #4152 #4151 #3417
[mk-app] #4044 + #1507 #3303 #3520
[inst-discovered] theory-solving 0x0 arith# ; #4244
[mk-app] #4287 = #4244 #4044
[mk-proof] #4114 rewrite #4287
[instance] 0x0 #4287
[end-of-instance]
[mk-app] #3530 = #3521 #4044
[mk-proof] #3531 trans #3339 #4114 #3530
[mk-app] #3526 = #4044 #36
[mk-app] #4074 = #3519 #3526
[mk-proof] #3529 monotonicity #3531 #4074
[attach-meaning] #1527 arith (- 4)
[mk-app] #4154 + #3303 #3520
[mk-app] #4157 = #4154 #1527
[inst-discovered] theory-solving 0x0 arith# ; #3526
[mk-app] #4088 = #3526 #4157
[mk-proof] #3415 rewrite #4088
[instance] 0x0 #4088
[end-of-instance]
[mk-app] #3524 = #3519 #4157
[mk-proof] #3416 trans #3529 #3415 #3524
[mk-app] #3421 not #1546
[mk-app] #3422 or #3421 #4157
[mk-app] #3420 or #3421 #3519
[mk-proof] #4377 quant-inst #3420
[mk-app] #4379 = #3420 #3422
[mk-proof] #4380 monotonicity #3416 #4379
[mk-app] #4282 = #3422 #3422
[mk-proof] #3423 rewrite #4282
[mk-proof] #3424 trans #4380 #3423 #4379
[mk-proof] #3425 mp #4377 #3424 #3422
[instance] 0x15c86f680 #4377 ; 2
[attach-enode] #3303 2
[attach-enode] #3528 2
[attach-enode] #176 2
[attach-enode] #3520 2
[attach-enode] #4154 2
[attach-enode] #1527 2
[attach-enode] #4157 2
[mk-app] #3858 <= #4154 #1527
[mk-app] #4387 >= #4154 #1527
[assign] #4157 justification -1: p51
[end-of-instance]
[mk-app] #4389 * #1527 #151
[mk-app] #4390 + #3527 #4389 #3520 #3528
[mk-app] #4611 = #4390 #36
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4389
[mk-app] #4388 = #4389 #1527
[mk-proof] #3535 rewrite #4388
[instance] 0x0 #4388
[end-of-instance]
[mk-app] #3536 + #1507 #1527 #3520 #3528
[mk-app] #3537 = #4390 #3536
[mk-proof] #3542 monotonicity #4152 #3535 #3537
[inst-discovered] theory-solving 0x0 arith# ; #3536
[mk-app] #3936 = #3536 #36
[mk-proof] #3939 rewrite #3936
[instance] 0x0 #3936
[end-of-instance]
[mk-proof] #3937 trans #3542 #3939 #4611
[mk-app] #3938 = #36 #36
[mk-app] #3539 = #4611 #3938
[mk-proof] #3540 monotonicity #3937 #3539
[inst-discovered] theory-solving 0x0 arith# ; #3938
[mk-app] #3541 = #3938 #1
[mk-proof] #3934 rewrite #3541
[instance] 0x0 #3541
[end-of-instance]
[mk-app] #3940 = #4611 #1
[mk-proof] #4485 trans #3540 #3934 #3940
[instance] 0x15c86f6c0 #4485 ; 1
[end-of-instance]
[mk-app] #3536 * #176 #3303
[mk-app] #3537 + #4205 #4389 #3536 #3528
[mk-app] #3542 = #3537 #36
[mk-app] #3936 + #36 #1527 #3536 #3528
[mk-app] #3939 = #3537 #3936
[mk-proof] #3937 monotonicity #4242 #3535 #3939
[attach-meaning] #1527 arith (- 4)
[mk-app] #3938 + #1527 #3536 #3528
[inst-discovered] theory-solving 0x0 arith# ; #3936
[mk-app] #3539 = #3936 #3938
[mk-proof] #3540 rewrite #3539
[instance] 0x0 #3539
[end-of-instance]
[mk-app] #3541 = #3537 #3938
[mk-proof] #3934 trans #3937 #3540 #3541
[mk-app] #3940 = #3938 #36
[mk-app] #4485 = #3542 #3940
[mk-proof] #4486 monotonicity #3934 #4485
[mk-app] #4488 + #3536 #3528
[attach-meaning] #176 arith (- 1)
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3940
[mk-app] #4488 = #3940 #4157
[mk-proof] #4489 rewrite #4488
[instance] 0x0 #4488
[end-of-instance]
[mk-app] #4046 = #3542 #4157
[mk-proof] #4165 trans #4486 #4489 #4046
[mk-app] #4166 or #3421 #3542
[mk-proof] #3935 quant-inst #4166
[mk-app] #4052 = #4166 #3422
[mk-proof] #3538 monotonicity #4165 #4052
[mk-proof] #4490 trans #3538 #3423 #4052
[mk-proof] #4491 mp #3935 #4490 #3422
[instance] 0x15c86f700 #3935 ; 2
[end-of-instance]
[assign] #3858 clause p91 (not p90)
  (<= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int) 
  (not (= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int)) 

[assign] #4387 clause p92 (not p90)
  (>= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int) 
  (not (= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int)) 

[mk-app] #4492 = #3059 #3303
[attach-meaning] #176 arith (- 1)
[mk-app] #2998 + #3059 #3536
[mk-app] #2999 <= #2998 #36
[mk-app] #3000 >= #2998 #36
[assign] #4492 justification -1: p83 p55
[attach-enode] #4492 0
[attach-enode] #3536 0
[attach-enode] #2998 0
[assign] #2999 justification -1: p93
[assign] #3000 justification -1: p93
[mk-app] #3001 = #3528 #3534
[attach-meaning] #176 arith (- 1)
[mk-app] #3002 * #176 #3534
[mk-app] #3003 + #3528 #3002
[mk-app] #3004 <= #3003 #36
[mk-app] #3005 >= #3003 #36
[assign] #3001 justification -1: p88 p56 p58 p55
[attach-enode] #3001 0
[attach-enode] #3002 0
[attach-enode] #3003 0
[assign] #3004 justification -1: p96
[assign] #3005 justification -1: p96
[decide-and-or] #2318 #2195
[push] 4
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 5
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[new-match] 0x15c870608 #263 #246 #4466 #4467 ; #4468
[new-match] 0x15c870640 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x15c870678 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x15c8706b8 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x15c8706f8 #124 #118 #2210 ; #4466
[new-match] 0x15c870728 #143 #118 #2210 ; #4466
[new-match] 0x15c870758 #237 #229 #4466 #36 ; #4467
[mk-app] #3006 * #176 #4468
[mk-app] #3007 + #4467 #3230 #3006
[mk-app] #3753 = #3007 #36
[mk-app] #3754 + #3230 #4467 #3006
[inst-discovered] theory-solving 0x0 arith# ; #3007
[mk-app] #3755 = #3007 #3754
[mk-proof] #3756 rewrite #3755
[instance] 0x0 #3755
[end-of-instance]
[mk-app] #3757 = #3754 #36
[mk-app] #3758 = #3753 #3757
[mk-proof] #3759 monotonicity #3756 #3758
[attach-meaning] #176 arith (- 1)
[mk-app] #4626 + #4466 #4164 #4468
[mk-app] #4627 = #4626 #36
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3690 = #3757 #4627
[mk-proof] #3691 rewrite #3690
[instance] 0x0 #3690
[end-of-instance]
[mk-app] #3692 = #3753 #4627
[mk-proof] #3693 trans #3759 #3691 #3692
[mk-app] #3694 not #263
[mk-app] #3695 or #3694 #4627
[mk-app] #3696 or #3694 #3753
[mk-proof] #4638 quant-inst #3696
[mk-app] #4639 = #3696 #3695
[mk-proof] #3426 monotonicity #3693 #4639
[mk-app] #3427 = #3695 #3695
[mk-proof] #3428 rewrite #3427
[mk-proof] #3429 trans #3426 #3428 #4639
[mk-proof] #3430 mp #4638 #3429 #3695
[instance] 0x15c870608 #4638 ; 3
[attach-enode] #4164 3
[attach-enode] #4626 3
[attach-enode] #4627 3
[mk-app] #3431 <= #4626 #36
[mk-app] #3435 >= #4626 #36
[assign] #4627 justification -1: p21
[end-of-instance]
[mk-app] #3436 or #2965 #2967 #2972
[mk-app] #3437 or #3049 #2967 #2972
[mk-app] #3438 = #3436 #3437
[mk-proof] #3439 monotonicity #3053 #3438
[mk-app] #3440 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3437
[mk-app] #3441 = #3437 #3440
[mk-proof] #3442 rewrite #3441
[instance] 0x0 #3441
[end-of-instance]
[mk-app] #3443 = #3436 #3440
[mk-proof] #3444 trans #3439 #3442 #3443
[mk-app] #3446 or #4481 #2967 #2972 #3049
[mk-app] #3447 or #4481 #3436
[mk-proof] #3445 quant-inst #3447
[mk-app] #3448 or #4481 #3440
[mk-app] #3449 = #3447 #3448
[mk-proof] #3450 monotonicity #3444 #3449
[mk-app] #3892 = #3448 #3446
[mk-proof] #3893 rewrite #3892
[mk-app] #3894 = #3447 #3446
[mk-proof] #3895 trans #3450 #3893 #3894
[mk-proof] #3896 mp #3445 #3895 #3446
[instance] 0x15c870640 #3445 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3897 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3898 or #2208 #2205 #3860 #4369 #2967
[mk-app] #4396 = #3897 #3898
[mk-proof] #4397 monotonicity #4376 #4396
[mk-app] #4399 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3898
[mk-app] #4400 = #3898 #4399
[mk-proof] #4402 rewrite #4400
[instance] 0x0 #4400
[end-of-instance]
[mk-app] #4403 = #3897 #4399
[mk-proof] #4404 trans #4397 #4402 #4403
[mk-app] #4405 not #1939
[mk-app] #4406 or #4405 #2205 #2208 #2967 #3860 #4369
[mk-app] #4544 or #4405 #3897
[mk-proof] #4545 quant-inst #4544
[mk-app] #3008 or #4405 #4399
[mk-app] #3009 = #4544 #3008
[mk-proof] #3010 monotonicity #4404 #3009
[mk-app] #3011 = #3008 #4406
[mk-proof] #3012 rewrite #3011
[mk-app] #3013 = #4544 #4406
[mk-proof] #3014 trans #3010 #3012 #3013
[mk-proof] #3015 mp #4545 #3014 #4406
[instance] 0x15c870678 #4545 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3016 >= #4466 #36
[mk-app] #3017 = #3016 #3016
[mk-proof] #3018 refl #3017
[mk-app] #3019 or #1568 #3016
[mk-proof] #3254 quant-inst #3019
[instance] 0x15c8706f8 #3254 ; 3
[assign] #3016 justification -1: p13
[end-of-instance]
[mk-app] #3017 not #3525
[mk-app] #3018 or #3017 #2205
[mk-app] #3255 = #3018 #3018
[mk-proof] #3256 refl #3255
[mk-app] #3257 or #2378 #3017 #2205
[mk-app] #3258 or #2378 #3018
[mk-proof] #3259 quant-inst #3258
[mk-app] #3260 = #3258 #3257
[mk-proof] #3261 rewrite #3260
[mk-proof] #3262 mp #3259 #3261 #3257
[instance] 0x15c870728 #3259 ; 3
[attach-enode] #3525 3
[mk-app] #3263 <= #4466 #36
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3255 + #36 #4466 #4164
[mk-app] #3256 = #3255 #36
[inst-discovered] theory-solving 0x0 arith# ; #3255
[mk-app] #3267 = #3255 #4368
[mk-proof] #3268 rewrite #3267
[instance] 0x0 #3267
[end-of-instance]
[mk-app] #3269 = #4368 #36
[mk-app] #3270 = #3256 #3269
[mk-proof] #3271 monotonicity #3268 #3270
[mk-app] #3272 not #237
[mk-app] #3273 or #3272 #3269
[mk-app] #3275 or #3272 #3256
[mk-proof] #3276 quant-inst #3275
[mk-app] #3274 = #3275 #3273
[mk-proof] #3277 monotonicity #3271 #3274
[mk-app] #3278 = #3273 #3273
[mk-proof] #3279 rewrite #3278
[mk-proof] #3802 trans #3277 #3279 #3274
[mk-proof] #3803 mp #3276 #3802 #3273
[instance] 0x15c870758 #3276 ; 3
[attach-enode] #3269 3
[mk-app] #3804 >= #4368 #36
[assign] #3269 justification -1: p20
[end-of-instance]
[assign] #3431 clause p100 (not p99)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #3435 clause p101 (not p99)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3263) clause (not p109) p108
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p106 (not p110)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #3804 clause p111 (not p110)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #3805 <= #4468 #36
[mk-app] #3806 >= #4468 #36
[assign] #3805 justification -1: p78
[assign] #3806 justification -1: p78
[assign] #2966 clause p102 (not p106) (not p107)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #3446 #2972
[push] 6
[assign] #2972 decision axiom
[mk-app] #3807 >= #4075 #36
[mk-app] #3808 not #3807
[mk-app] #4177 or #3807 #3808
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4177
[end-of-instance]
[push] 7
[assign] (not #3807) decision axiom
[mk-app] #3808 or #2 #3533
[mk-proof] #4177 th-lemma #3808
[mk-proof] #4178 unit-resolution #4177 #8 #3533
[mk-app] #4179 or #2 #4276
[mk-proof] #4180 th-lemma #4179
[mk-proof] #4181 unit-resolution #4180 #8 #4276
[mk-app] #4182 not #3133
[mk-app] #4183 not #4276
[mk-app] #4184 or #3418 #4182 #4183
[mk-proof] #4185 th-lemma #4184
[mk-proof] #4186 unit-resolution #4185 #3054 #4181 #4182
[mk-app] #4187 or #2 #3532
[mk-proof] #4188 th-lemma #4187
[mk-proof] #4189 unit-resolution #4188 #8 #3532
[mk-app] #4190 = #2388 #1597
[mk-proof] #4192 symm #2215 #4190
[mk-app] #4193 = #2388 #1591
[mk-proof] #4194 trans* #4192 #2372 #1583 #4193
[mk-app] #4195 = #3528 #4245
[mk-proof] #4197 monotonicity #4194 #4195
[mk-app] #4198 = #4245 #3534
[mk-proof] #4199 symm #4189 #4198
[mk-proof] #4200 trans* #4197 #4199 #3001
[mk-app] #4201 not #3001
[mk-app] #4578 or #4201 #3004
[mk-proof] #4579 th-lemma #4578
[mk-proof] #3732 unit-resolution #4579 #4200 #3004
[mk-app] #3733 or #4201 #3005
[mk-proof] #3734 th-lemma #3733
[mk-proof] #3735 unit-resolution #3734 #4200 #3005
[mk-proof] #3736 unit-resolution #3425 #1964 #4157
[mk-app] #3737 not #4157
[mk-app] #3738 or #3737 #3858
[mk-proof] #3999 th-lemma #3738
[mk-proof] #4000 unit-resolution #3999 #3736 #3858
[mk-app] #4002 or #3737 #4387
[mk-proof] #4003 th-lemma #4002
[mk-proof] #4004 unit-resolution #4003 #3736 #4387
[mk-app] #4005 not #3380
[mk-app] #4006 or #4005 #4274
[mk-proof] #4536 th-lemma #4006
[mk-proof] #4537 unit-resolution #4536 #3381 #4274
[mk-app] #3280 or #2 #3093
[mk-proof] #3281 th-lemma #3280
[mk-proof] #3282 unit-resolution #3281 #8 #3093
[mk-app] #3283 or #2 #3174
[mk-proof] #3284 th-lemma #3283
[mk-proof] #3285 unit-resolution #3284 #8 #3174
[mk-app] #3286 = #3303 #4273
[mk-proof] #3287 monotonicity #1586 #3286
[mk-app] #3288 = #4273 #3303
[mk-proof] #3289 symm #3287 #3288
[mk-proof] #3290 trans* #3285 #3289 #4492
[mk-app] #3291 not #4492
[mk-app] #3292 or #3291 #2999
[mk-proof] #3293 th-lemma #3292
[mk-proof] #3294 unit-resolution #3293 #3290 #2999
[mk-app] #3295 or #3291 #3000
[mk-proof] #3299 th-lemma #3295
[mk-proof] #3300 unit-resolution #3299 #3290 #3000
[mk-proof] #3301 th-lemma #3300 #3294 #3282 #4537 #4004 #4000 #3735 #3732 #4186 #4178 #2
[pop] 4 8
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 4
[mk-proof] #3231 asserted #3418
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 ~ #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 rewrite #3337
[mk-proof] #3935 mp #3231 #4166 #3418
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[mk-app] #3337 = #3418 #3418
[mk-proof] #4166 refl #3337
[attach-enode] #4245 0
[attach-enode] #2997 0
[attach-enode] #4275 0
[attach-enode] #3418 0
[assign] #3418 justification -1: 
[mk-app] #3337 < #2997 #36
[mk-app] #4166 - #36 #2997
[mk-app] #3935 if #3337 #4166 #2997
[mk-app] #3936 - #3935 #151
[inst-discovered] theory-solving 0x0 arith# ; #3337
[mk-app] #3939 = #3337 #3995
[mk-proof] #3937 rewrite #3939
[instance] 0x0 #3939
[end-of-instance]
[mk-app] #3938 = #3337 #2
[mk-proof] #3539 trans #3937 #3095 #3938
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4166
[mk-app] #3540 = #4166 #4153
[mk-proof] #3541 rewrite #3540
[instance] 0x0 #3540
[end-of-instance]
[mk-app] #3934 = #4166 #4163
[mk-proof] #3940 trans #3541 #3414 #3934
[mk-app] #4485 if #2 #4163 #2997
[mk-app] #4486 = #3935 #4485
[mk-proof] #4488 monotonicity #3539 #3940 #4486
[inst-discovered] theory-solving 0x0 arith# ; #4485
[mk-app] #4489 = #4485 #2997
[mk-proof] #4046 rewrite #4489
[instance] 0x0 #4489
[end-of-instance]
[mk-app] #4165 = #3935 #2997
[mk-proof] #4052 trans #4488 #4046 #4165
[mk-app] #3538 - #2997 #151
[mk-app] #4490 = #3936 #3538
[mk-proof] #4491 monotonicity #4052 #4490
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3538
[mk-app] #3694 = #3538 #3857
[mk-proof] #3696 rewrite #3694
[instance] 0x0 #3694
[end-of-instance]
[mk-app] #4638 = #3936 #3857
[mk-proof] #3754 trans #4491 #3696 #4638
[mk-app] #3755 = #3936 #151
[mk-proof] #3756 trans #3754 #4610 #3755
[mk-app] #3757 = #2997 #36
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3337 = #3757 #2
[mk-proof] #3939 rewrite #3337
[instance] 0x0 #3337
[end-of-instance]
[attach-enode] #4075 0
[attach-enode] #3523 0
[attach-enode] #3534 0
[attach-enode] #3532 0
[mk-app] #3937 or #3757 #3532
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3937
[assign] #3532 justification -1: true
[end-of-instance]
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3337 = #3757 #2
[mk-proof] #3939 rewrite #3337
[instance] 0x0 #3337
[end-of-instance]
[attach-enode] #4276 0
[mk-app] #3937 or #3757 #4276
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3937
[assign] #4276 justification -1: true
[end-of-instance]
[attach-meaning] #4163 arith (- 2)
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3337 = #3757 #2
[mk-proof] #3939 rewrite #3337
[instance] 0x0 #3337
[end-of-instance]
[attach-enode] #3533 0
[mk-app] #3937 or #3757 #3533
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3937
[assign] #3533 justification -1: true
[end-of-instance]
[assign] #3133 clause p86 (not p85)
  (<= (mod (address<Int> idx_one@7@01) 2::Int) 0::Int) 
  (not (= (mod (address<Int> idx_one@7@01) 2::Int) 0::Int)) 

[new-match] 0x15c86f628 #1546 #1510 #36 #151 #1567 ; #4245 (#1591 #2388) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[new-match] 0x15c86f668 #1546 #1510 #151 #151 #1567 ; #4245 (#1591 #2388) #4245 (#1591 #2388) (#1567 #1567) (#1567 #1567)
[new-match] 0x15c86f6a8 #1546 #1510 #151 #36 #1567 ; #4245 (#1591 #2388) #4273 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[inst-discovered] theory-solving 0x0 arith# ; #4244
[instance] 0x0 #4287
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3526
[instance] 0x0 #4088
[end-of-instance]
[instance] 0x15c86f628 #4377 ; 2
[attach-enode] #3303 2
[attach-enode] #3528 2
[attach-enode] #176 2
[attach-enode] #3520 2
[attach-enode] #4154 2
[attach-enode] #1527 2
[attach-enode] #4157 2
[assign] #4157 justification -1: p51
[end-of-instance]
[mk-app] #3757 + #1507 #1527 #3520 #3528
[mk-app] #3337 = #4390 #3757
[mk-proof] #3939 monotonicity #4152 #3535 #3337
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3937 = #3757 #36
[mk-proof] #3938 rewrite #3937
[instance] 0x0 #3937
[end-of-instance]
[mk-proof] #3539 trans #3939 #3938 #4611
[mk-app] #4166 = #36 #36
[mk-app] #3540 = #4611 #4166
[mk-proof] #3541 monotonicity #3539 #3540
[inst-discovered] theory-solving 0x0 arith# ; #4166
[mk-app] #3934 = #4166 #1
[mk-proof] #3940 rewrite #3934
[instance] 0x0 #3934
[end-of-instance]
[mk-app] #3935 = #4611 #1
[mk-proof] #4485 trans #3541 #3940 #3935
[instance] 0x15c86f668 #4485 ; 1
[end-of-instance]
[mk-app] #3757 + #36 #1527 #3536 #3528
[mk-app] #3337 = #3537 #3757
[mk-proof] #3939 monotonicity #4242 #3535 #3337
[attach-meaning] #1527 arith (- 4)
[mk-app] #3937 + #1527 #3536 #3528
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3938 = #3757 #3937
[mk-proof] #3539 rewrite #3938
[instance] 0x0 #3938
[end-of-instance]
[mk-app] #4166 = #3537 #3937
[mk-proof] #3540 trans #3939 #3539 #4166
[mk-app] #3541 = #3937 #36
[mk-app] #3934 = #3542 #3541
[mk-proof] #3940 monotonicity #3540 #3934
[mk-app] #3935 + #3536 #3528
[attach-meaning] #176 arith (- 1)
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3541
[mk-app] #3935 = #3541 #4157
[mk-proof] #4485 rewrite #3935
[instance] 0x0 #3935
[end-of-instance]
[mk-app] #4486 = #3542 #4157
[mk-proof] #4488 trans #3940 #4485 #4486
[mk-app] #4489 or #3421 #3542
[mk-proof] #4046 quant-inst #4489
[mk-app] #4165 = #4489 #3422
[mk-proof] #4052 monotonicity #4488 #4165
[mk-proof] #3936 trans #4052 #3423 #4165
[mk-proof] #3538 mp #4046 #3936 #3422
[instance] 0x15c86f6a8 #4046 ; 2
[end-of-instance]
[assign] #3858 clause p91 (not p90)
  (<= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int) 
  (not (= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int)) 

[assign] #4387 clause p92 (not p90)
  (>= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int) 
  (not (= (+ (address<Int> (offset<Ptr32> x@1@01 0::Int)) (* -1::Int (address<Int> (offset<Ptr32> x@1@01 1::Int)))) -4::Int)) 

[attach-meaning] #176 arith (- 1)
[assign] #4492 justification -1: p83 p55
[attach-enode] #4492 0
[attach-enode] #3536 0
[attach-enode] #2998 0
[assign] #2999 justification -1: p93
[assign] #3000 justification -1: p93
[attach-meaning] #176 arith (- 1)
[assign] #3001 justification -1: p88 p56 p58 p55
[attach-enode] #3001 0
[attach-enode] #3002 0
[attach-enode] #3003 0
[assign] #3004 justification -1: p96
[assign] #3005 justification -1: p96
[push] 3
[mk-app] #4490 mod #4245 #1507
[mk-app] #4491 = #4490 #36
[mk-app] #3694 not #4491
[mk-proof] #3696 asserted #3694
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[begin-check] 4
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #4491 #2
[mk-proof] #3754 iff-false #3696 #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #4491 #2
[mk-proof] #3754 iff-false #3696 #4638
[mk-app] #4638 ~ #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 rewrite #4638
[mk-proof] #3755 mp #3696 #3754 #3694
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[mk-app] #4638 = #3694 #3694
[mk-proof] #3754 refl #4638
[attach-enode] #4490 0
[attach-enode] #4491 0
[mk-app] #4638 <= #4490 #36
[mk-app] #3754 >= #4490 #36
[assign] (not #4491) justification -1: 
[mk-app] #3755 div #4245 #1507
[mk-app] #3756 < #1507 #36
[mk-app] #3758 - #36 #1507
[mk-app] #3759 if #3756 #3758 #1507
[mk-app] #4626 - #3759 #151
[inst-discovered] theory-solving 0x0 arith# ; #3756
[mk-app] #4627 = #3756 #4256
[mk-proof] #3690 rewrite #4627
[instance] 0x0 #4627
[end-of-instance]
[mk-app] #3691 = #3756 #2
[mk-proof] #3692 trans #3690 #3297 #3691
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3758
[mk-app] #3693 = #3758 #4219
[mk-proof] #3695 rewrite #3693
[instance] 0x0 #3693
[end-of-instance]
[mk-app] #4639 = #3758 #1527
[mk-proof] #3426 trans #3695 #3221 #4639
[mk-app] #3427 if #2 #1527 #1507
[mk-app] #3428 = #3759 #3427
[mk-proof] #3429 monotonicity #3692 #3426 #3428
[inst-discovered] theory-solving 0x0 arith# ; #3427
[mk-app] #3430 = #3427 #1507
[mk-proof] #3447 rewrite #3430
[instance] 0x0 #3430
[end-of-instance]
[mk-app] #3445 = #3759 #1507
[mk-proof] #3437 trans #3429 #3447 #3445
[mk-app] #3438 - #1507 #151
[mk-app] #3439 = #4626 #3438
[mk-proof] #3440 monotonicity #3437 #3439
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3438
[mk-app] #3441 = #3438 #3169
[mk-proof] #3442 rewrite #3441
[instance] 0x0 #3441
[end-of-instance]
[mk-app] #3443 = #4626 #3169
[mk-proof] #3444 trans #3440 #3442 #3443
[mk-app] #3448 = #4626 #4134
[mk-proof] #3449 trans #3444 #3132 #3448
[mk-app] #3450 = #1507 #36
[mk-app] #3446 * #1507 #3755
[mk-app] #3892 + #3446 #4490
[mk-app] #3893 = #3892 #4245
[mk-app] #3894 <= #4490 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3450
[mk-app] #3756 = #3450 #2
[mk-proof] #4627 rewrite #3756
[instance] 0x0 #3756
[end-of-instance]
[attach-enode] #3755 0
[attach-enode] #3446 0
[attach-enode] #3892 0
[attach-enode] #3893 0
[attach-meaning] #176 arith (- 1)
[mk-app] #3690 * #176 #4245
[mk-app] #3691 + #3892 #3690
[mk-app] #3692 <= #3691 #36
[mk-app] #3758 >= #3691 #36
[attach-enode] #3690 0
[attach-enode] #3691 0
[mk-app] #3693 or #3450 #3893
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3693
[assign] #3893 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3450
[mk-app] #3756 = #3450 #2
[mk-proof] #4627 rewrite #3756
[instance] 0x0 #3756
[end-of-instance]
[attach-enode] #3754 0
[mk-app] #3693 or #3450 #3754
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3693
[assign] #3754 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3450
[mk-app] #3756 = #3450 #2
[mk-proof] #4627 rewrite #3756
[instance] 0x0 #3756
[end-of-instance]
[attach-enode] #3894 0
[mk-app] #3693 or #3450 #3894
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3693
[assign] #3894 justification -1: true
[end-of-instance]
[mk-app] #3693 = #4491 #2
[mk-proof] #3695 iff-false #3696 #3693
[assign] (not #4638) clause (not p100) p99 (not p101)
  (not (<= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int)) 
  (= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int) 
  (not (>= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int)) 

[assign] #3692 clause p103 (not p102)
  (<= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[assign] #3758 clause p104 (not p102)
  (>= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[attach-meaning] #176 arith (- 1)
[mk-app] #3255 + #3534 #3690
[mk-app] #3256 <= #3255 #36
[mk-app] #3017 >= #3255 #36
[attach-enode] #3255 0
[assign] #3256 justification -1: p88
[assign] #3017 justification -1: p88
[decide-and-or] #2318 #2195
[push] 4
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 5
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[new-match] 0x14d0418e0 #263 #246 #4466 #4467 ; #4468
[new-match] 0x14d041918 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x14d041950 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d041990 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d0419d0 #124 #118 #2210 ; #4466
[new-match] 0x14d041a00 #143 #118 #2210 ; #4466
[new-match] 0x14d041a30 #237 #229 #4466 #36 ; #4467
[mk-app] #3018 * #176 #4468
[mk-app] #3016 + #4467 #3230 #3018
[mk-app] #3897 = #3016 #36
[mk-app] #3450 + #3230 #4467 #3018
[inst-discovered] theory-solving 0x0 arith# ; #3016
[mk-app] #3756 = #3016 #3450
[mk-proof] #4627 rewrite #3756
[instance] 0x0 #3756
[end-of-instance]
[mk-app] #3436 = #3450 #36
[mk-app] #3006 = #3897 #3436
[mk-proof] #3007 monotonicity #4627 #3006
[attach-meaning] #176 arith (- 1)
[mk-app] #3753 + #4466 #4164 #4468
[mk-app] #4390 = #3753 #36
[inst-discovered] theory-solving 0x0 arith# ; #3436
[mk-app] #4611 = #3436 #4390
[mk-proof] #4639 rewrite #4611
[instance] 0x0 #4611
[end-of-instance]
[mk-app] #3426 = #3897 #4390
[mk-proof] #3759 trans #3007 #4639 #3426
[mk-app] #3427 not #263
[mk-app] #3428 or #3427 #4390
[mk-app] #3429 or #3427 #3897
[mk-proof] #3430 quant-inst #3429
[mk-app] #3447 = #3429 #3428
[mk-proof] #3445 monotonicity #3759 #3447
[mk-app] #3437 = #3428 #3428
[mk-proof] #4626 rewrite #3437
[mk-proof] #3438 trans #3445 #4626 #3447
[mk-proof] #3439 mp #3430 #3438 #3428
[instance] 0x14d0418e0 #3430 ; 3
[attach-enode] #4164 3
[attach-enode] #3753 3
[attach-enode] #4390 3
[mk-app] #3440 <= #3753 #36
[mk-app] #3441 >= #3753 #36
[assign] #4390 justification -1: p21
[end-of-instance]
[mk-app] #3442 or #2965 #2967 #2972
[mk-app] #3443 or #3049 #2967 #2972
[mk-app] #3444 = #3442 #3443
[mk-proof] #3448 monotonicity #3053 #3444
[mk-app] #3449 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3443
[mk-app] #3895 = #3443 #3449
[mk-proof] #3896 rewrite #3895
[instance] 0x0 #3895
[end-of-instance]
[mk-app] #4405 = #3442 #3449
[mk-proof] #4544 trans #3448 #3896 #4405
[mk-app] #4545 or #4481 #2967 #2972 #3049
[mk-app] #3898 or #4481 #3442
[mk-proof] #4396 quant-inst #3898
[mk-app] #4397 or #4481 #3449
[mk-app] #4399 = #3898 #4397
[mk-proof] #4400 monotonicity #4544 #4399
[mk-app] #4402 = #4397 #4545
[mk-proof] #4403 rewrite #4402
[mk-app] #4404 = #3898 #4545
[mk-proof] #3008 trans #4400 #4403 #4404
[mk-proof] #3009 mp #4396 #3008 #4545
[instance] 0x14d041918 #4396 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3010 or #2208 #2205 #3860 #3862 #2967
[mk-app] #4406 or #2208 #2205 #3860 #4369 #2967
[mk-app] #3011 = #3010 #4406
[mk-proof] #3012 monotonicity #4376 #3011
[mk-app] #3013 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #4406
[mk-app] #3014 = #4406 #3013
[mk-proof] #3015 rewrite #3014
[instance] 0x0 #3014
[end-of-instance]
[mk-app] #3019 = #3010 #3013
[mk-proof] #3254 trans #3012 #3015 #3019
[mk-app] #3258 not #1939
[mk-app] #3259 or #3258 #2205 #2208 #2967 #3860 #4369
[mk-app] #3257 or #3258 #3010
[mk-proof] #3260 quant-inst #3257
[mk-app] #3261 or #3258 #3013
[mk-app] #3262 = #3257 #3261
[mk-proof] #3272 monotonicity #3254 #3262
[mk-app] #3275 = #3261 #3259
[mk-proof] #3276 rewrite #3275
[mk-app] #3267 = #3257 #3259
[mk-proof] #3268 trans #3272 #3276 #3267
[mk-proof] #3269 mp #3260 #3268 #3259
[instance] 0x14d041950 #3260 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3270 >= #4466 #36
[mk-app] #3271 = #3270 #3270
[mk-proof] #3273 refl #3271
[mk-app] #3274 or #1568 #3270
[mk-proof] #3277 quant-inst #3274
[instance] 0x14d0419d0 #3277 ; 3
[assign] #3270 justification -1: p13
[end-of-instance]
[mk-app] #3271 not #3525
[mk-app] #3273 or #3271 #2205
[mk-app] #3278 = #3273 #3273
[mk-proof] #3279 refl #3278
[mk-app] #3802 or #2378 #3271 #2205
[mk-app] #3803 or #2378 #3273
[mk-proof] #3431 quant-inst #3803
[mk-app] #3435 = #3803 #3802
[mk-proof] #3263 rewrite #3435
[mk-proof] #3804 mp #3431 #3263 #3802
[instance] 0x14d041a00 #3431 ; 3
[attach-enode] #3525 3
[mk-app] #3805 <= #4466 #36
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3278 + #36 #4466 #4164
[mk-app] #3279 = #3278 #36
[inst-discovered] theory-solving 0x0 arith# ; #3278
[mk-app] #3806 = #3278 #4368
[mk-proof] #3807 rewrite #3806
[instance] 0x0 #3806
[end-of-instance]
[mk-app] #2342 = #4368 #36
[mk-app] #2212 = #3279 #2342
[mk-proof] #2213 monotonicity #3807 #2212
[mk-app] #2220 not #237
[mk-app] #2381 or #2220 #2342
[mk-app] #2382 or #2220 #3279
[mk-proof] #2314 quant-inst #2382
[mk-app] #2323 = #2382 #2381
[mk-proof] #2312 monotonicity #2213 #2323
[mk-app] #2339 = #2381 #2381
[mk-proof] #2340 rewrite #2339
[mk-proof] #2341 trans #2312 #2340 #2323
[mk-proof] #2214 mp #2314 #2341 #2381
[instance] 0x14d041a30 #2314 ; 3
[attach-enode] #2342 3
[mk-app] #2335 >= #4368 #36
[assign] #2342 justification -1: p20
[end-of-instance]
[assign] #3440 clause p109 (not p108)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #3441 clause p110 (not p108)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3805) clause (not p118) p117
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p115 (not p119)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #2335 clause p120 (not p119)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #2316 <= #4468 #36
[mk-app] #2336 >= #4468 #36
[assign] #2316 justification -1: p78
[assign] #2336 justification -1: p78
[assign] #2966 clause p111 (not p115) (not p116)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #4545 #2972
[push] 6
[assign] #2972 decision axiom
[mk-app] #2368 >= #3755 #36
[mk-app] #2363 not #2368
[mk-app] #2364 or #2368 #2363
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #2364
[end-of-instance]
[push] 7
[assign] (not #2368) decision axiom
[mk-app] #2363 not #3532
[mk-app] #2364 or #2363 #3256
[mk-proof] #2365 th-lemma #2364
[mk-proof] #3302 unit-resolution #2365 #4189 #3256
[mk-app] #3304 or #2363 #3017
[mk-proof] #3305 th-lemma #3304
[mk-proof] #3306 unit-resolution #3305 #4189 #3017
[mk-app] #3307 or #2 #3893
[mk-proof] #3308 th-lemma #3307
[mk-proof] #3310 unit-resolution #3308 #8 #3893
[mk-app] #3311 not #3893
[mk-app] #3309 or #3311 #3692
[mk-proof] #3312 th-lemma #3309
[mk-proof] #3313 unit-resolution #3312 #3310 #3692
[mk-app] #3314 or #3311 #3758
[mk-proof] #3809 th-lemma #3314
[mk-proof] #3810 unit-resolution #3809 #3310 #3758
[mk-app] #3811 or #2 #3894
[mk-proof] #3812 th-lemma #3811
[mk-proof] #3813 unit-resolution #3812 #8 #3894
[mk-app] #3814 or #2 #3754
[mk-proof] #3815 th-lemma #3814
[mk-proof] #4202 unit-resolution #3815 #8 #3754
[mk-app] #4203 not #4638
[mk-app] #4208 not #3754
[mk-app] #4209 or #4491 #4203 #4208
[mk-proof] #4210 th-lemma #4209
[mk-proof] #4212 unit-resolution #4210 #3696 #4202 #4203
[mk-proof] #4213 th-lemma #4212 #3813 #3300 #3294 #3282 #4537 #4004 #4000 #3735 #3732 #3810 #3313 #3306 #3302 #2
[pop] 4 8
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 4
[push] 3
[mk-proof] #3693 asserted #4491
[mk-app] #3695 = #4491 #4491
[mk-proof] #3427 refl #3695
[pop] 1 4
[push] 3
[mk-app] #3693 not #3694
[mk-proof] #3695 asserted #3693
[inst-discovered] theory-solving 0x0 basic# ; #3693
[mk-app] #3427 = #3693 #4491
[mk-proof] #3429 rewrite #3427
[instance] 0x0 #3427
[end-of-instance]
[mk-proof] #3430 mp #3695 #3429 #4491
[begin-check] 4
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 ~ #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 rewrite #3450
[mk-proof] #4627 mp #3430 #3756 #4491
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[mk-app] #3450 = #4491 #4491
[mk-proof] #3756 refl #3450
[attach-enode] #4490 0
[attach-enode] #4491 0
[assign] #4491 justification -1: 
[mk-app] #3450 < #1507 #36
[mk-app] #3756 - #36 #1507
[mk-app] #4627 if #3450 #3756 #1507
[mk-app] #3436 - #4627 #151
[inst-discovered] theory-solving 0x0 arith# ; #3450
[mk-app] #3006 = #3450 #4256
[mk-proof] #3007 rewrite #3006
[instance] 0x0 #3006
[end-of-instance]
[mk-app] #3753 = #3450 #2
[mk-proof] #4390 trans #3007 #3297 #3753
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3756
[mk-app] #4611 = #3756 #4219
[mk-proof] #4639 rewrite #4611
[instance] 0x0 #4611
[end-of-instance]
[mk-app] #3426 = #3756 #1527
[mk-proof] #3759 trans #4639 #3221 #3426
[mk-app] #3428 if #2 #1527 #1507
[mk-app] #3447 = #4627 #3428
[mk-proof] #3445 monotonicity #4390 #3759 #3447
[inst-discovered] theory-solving 0x0 arith# ; #3428
[mk-app] #3437 = #3428 #1507
[mk-proof] #4626 rewrite #3437
[instance] 0x0 #3437
[end-of-instance]
[mk-app] #3438 = #4627 #1507
[mk-proof] #3439 trans #3445 #4626 #3438
[mk-app] #3898 - #1507 #151
[mk-app] #4396 = #3436 #3898
[mk-proof] #3443 monotonicity #3439 #4396
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3898
[mk-app] #3444 = #3898 #3169
[mk-proof] #3448 rewrite #3444
[instance] 0x0 #3444
[end-of-instance]
[mk-app] #3449 = #3436 #3169
[mk-proof] #3895 trans #3443 #3448 #3449
[mk-app] #3896 = #3436 #4134
[mk-proof] #4405 trans #3895 #3132 #3896
[mk-app] #4544 = #1507 #36
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4544
[mk-app] #3450 = #4544 #2
[mk-proof] #3006 rewrite #3450
[instance] 0x0 #3450
[end-of-instance]
[attach-enode] #3755 0
[attach-enode] #3446 0
[attach-enode] #3892 0
[attach-enode] #3893 0
[attach-meaning] #176 arith (- 1)
[attach-enode] #3690 0
[attach-enode] #3691 0
[mk-app] #3007 or #4544 #3893
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3007
[assign] #3893 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4544
[mk-app] #3450 = #4544 #2
[mk-proof] #3006 rewrite #3450
[instance] 0x0 #3450
[end-of-instance]
[attach-enode] #3754 0
[mk-app] #3007 or #4544 #3754
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3007
[assign] #3754 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4544
[mk-app] #3450 = #4544 #2
[mk-proof] #3006 rewrite #3450
[instance] 0x0 #3450
[end-of-instance]
[attach-enode] #3894 0
[mk-app] #3007 or #4544 #3894
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3007
[assign] #3894 justification -1: true
[end-of-instance]
[assign] #4638 clause p100 (not p99)
  (<= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int) 
  (not (= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int)) 

[assign] #3692 clause p103 (not p102)
  (<= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[assign] #3758 clause p104 (not p102)
  (>= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[attach-meaning] #176 arith (- 1)
[attach-enode] #3255 0
[assign] #3256 justification -1: p88
[assign] #3017 justification -1: p88
[decide-and-or] #2318 #2195
[push] 4
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 5
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[new-match] 0x14d041908 #263 #246 #4466 #4467 ; #4468
[new-match] 0x14d041940 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x14d041978 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d0419b8 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d0419f8 #124 #118 #2210 ; #4466
[new-match] 0x14d041a28 #143 #118 #2210 ; #4466
[new-match] 0x14d041a58 #237 #229 #4466 #36 ; #4467
[mk-app] #3278 * #176 #4468
[mk-app] #3279 + #4467 #3230 #3278
[mk-app] #3271 = #3279 #36
[mk-app] #4544 + #3230 #4467 #3278
[inst-discovered] theory-solving 0x0 arith# ; #3279
[mk-app] #3450 = #3279 #4544
[mk-proof] #3006 rewrite #3450
[instance] 0x0 #3450
[end-of-instance]
[mk-app] #3273 = #4544 #36
[mk-app] #3270 = #3271 #3273
[mk-proof] #3010 monotonicity #3006 #3270
[attach-meaning] #176 arith (- 1)
[mk-app] #3442 + #4466 #4164 #4468
[mk-app] #3018 = #3442 #36
[inst-discovered] theory-solving 0x0 arith# ; #3273
[mk-app] #3016 = #3273 #3018
[mk-proof] #3897 rewrite #3016
[instance] 0x0 #3016
[end-of-instance]
[mk-app] #3007 = #3271 #3018
[mk-proof] #3753 trans #3010 #3897 #3007
[mk-app] #4390 not #263
[mk-app] #3756 or #4390 #3018
[mk-app] #4611 or #4390 #3271
[mk-proof] #4639 quant-inst #4611
[mk-app] #3426 = #4611 #3756
[mk-proof] #3759 monotonicity #3753 #3426
[mk-app] #4627 = #3756 #3756
[mk-proof] #3428 rewrite #4627
[mk-proof] #3447 trans #3759 #3428 #3426
[mk-proof] #3445 mp #4639 #3447 #3756
[instance] 0x14d041908 #4639 ; 3
[attach-enode] #4164 3
[attach-enode] #3442 3
[attach-enode] #3018 3
[mk-app] #3437 <= #3442 #36
[mk-app] #4626 >= #3442 #36
[assign] #3018 justification -1: p21
[end-of-instance]
[mk-app] #3438 or #2965 #2967 #2972
[mk-app] #3439 or #3049 #2967 #2972
[mk-app] #3436 = #3438 #3439
[mk-proof] #3898 monotonicity #3053 #3436
[mk-app] #4396 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3439
[mk-app] #3443 = #3439 #4396
[mk-proof] #3444 rewrite #3443
[instance] 0x0 #3443
[end-of-instance]
[mk-app] #3448 = #3438 #4396
[mk-proof] #3449 trans #3898 #3444 #3448
[mk-app] #3895 or #4481 #2967 #2972 #3049
[mk-app] #3896 or #4481 #3438
[mk-proof] #4405 quant-inst #3896
[mk-app] #4397 or #4481 #4396
[mk-app] #4399 = #3896 #4397
[mk-proof] #4400 monotonicity #3449 #4399
[mk-app] #4545 = #4397 #3895
[mk-proof] #4402 rewrite #4545
[mk-app] #4403 = #3896 #3895
[mk-proof] #4404 trans #4400 #4402 #4403
[mk-proof] #3008 mp #4405 #4404 #3895
[instance] 0x14d041940 #4405 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3009 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3258 or #2208 #2205 #3860 #4369 #2967
[mk-app] #3257 = #3009 #3258
[mk-proof] #3260 monotonicity #4376 #3257
[mk-app] #4406 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3258
[mk-app] #3011 = #3258 #4406
[mk-proof] #3012 rewrite #3011
[instance] 0x0 #3011
[end-of-instance]
[mk-app] #3013 = #3009 #4406
[mk-proof] #3014 trans #3260 #3012 #3013
[mk-app] #3015 not #1939
[mk-app] #3019 or #3015 #2205 #2208 #2967 #3860 #4369
[mk-app] #3254 or #3015 #3009
[mk-proof] #3261 quant-inst #3254
[mk-app] #3262 or #3015 #4406
[mk-app] #3272 = #3254 #3262
[mk-proof] #3259 monotonicity #3014 #3272
[mk-app] #3275 = #3262 #3019
[mk-proof] #3276 rewrite #3275
[mk-app] #3267 = #3254 #3019
[mk-proof] #3268 trans #3259 #3276 #3267
[mk-proof] #3269 mp #3261 #3268 #3019
[instance] 0x14d041978 #3261 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3274 >= #4466 #36
[mk-app] #3277 = #3274 #3274
[mk-proof] #3803 refl #3277
[mk-app] #3431 or #1568 #3274
[mk-proof] #3802 quant-inst #3431
[instance] 0x14d0419f8 #3802 ; 3
[assign] #3274 justification -1: p13
[end-of-instance]
[mk-app] #3277 not #3525
[mk-app] #3803 or #3277 #2205
[mk-app] #3435 = #3803 #3803
[mk-proof] #3263 refl #3435
[mk-app] #3804 or #2378 #3277 #2205
[mk-app] #2220 or #2378 #3803
[mk-proof] #2382 quant-inst #2220
[mk-app] #2314 = #2220 #3804
[mk-proof] #3806 rewrite #2314
[mk-proof] #3807 mp #2382 #3806 #3804
[instance] 0x14d041a28 #2382 ; 3
[attach-enode] #3525 3
[mk-app] #2342 <= #4466 #36
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3435 + #36 #4466 #4164
[mk-app] #3263 = #3435 #36
[inst-discovered] theory-solving 0x0 arith# ; #3435
[mk-app] #2212 = #3435 #4368
[mk-proof] #2213 rewrite #2212
[instance] 0x0 #2212
[end-of-instance]
[mk-app] #2381 = #4368 #36
[mk-app] #2323 = #3263 #2381
[mk-proof] #2312 monotonicity #2213 #2323
[mk-app] #2339 not #237
[mk-app] #2340 or #2339 #2381
[mk-app] #2341 or #2339 #3263
[mk-proof] #2214 quant-inst #2341
[mk-app] #3440 = #2341 #2340
[mk-proof] #3441 monotonicity #2312 #3440
[mk-app] #3805 = #2340 #2340
[mk-proof] #2335 rewrite #3805
[mk-proof] #2316 trans #3441 #2335 #3440
[mk-proof] #2336 mp #2214 #2316 #2340
[instance] 0x14d041a58 #2214 ; 3
[attach-enode] #2381 3
[mk-app] #2368 >= #4368 #36
[assign] #2381 justification -1: p20
[end-of-instance]
[assign] #3437 clause p109 (not p108)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #4626 clause p110 (not p108)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #2342) clause (not p118) p117
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p115 (not p119)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #2368 clause p120 (not p119)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #4182 <= #4468 #36
[mk-app] #4183 >= #4468 #36
[assign] #4182 justification -1: p78
[assign] #4183 justification -1: p78
[assign] #2966 clause p111 (not p115) (not p116)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #3895 #2972
[push] 6
[assign] #2972 decision axiom
[mk-app] #1577 Seq<Int>!val!0
[mk-app] #2994 $Ref!val!0
[mk-app] #1578 $Ref!val!1
[mk-app] #2996 Ptr32!val!0
[mk-app] #1579 Ptr32!val!1
[mk-app] #2995 Seq<Int>!val!1
[mk-app] #4603 Seq<Int>!val!2
[mk-app] #2993 Seq<Int>!val!3
[mk-app] #4602 Int
[attach-meaning] #4602 arith 1143
[attach-meaning] #1527 arith (- 4)
[attach-meaning] #176 arith (- 1)
[attach-meaning] #176 arith (- 1)
[attach-meaning] #1527 arith (- 4)
[mk-app] #4184 Int
[attach-meaning] #4184 arith 5
[mk-app] #4185 Int
[attach-meaning] #4185 arith 6
[mk-app] #3419 Int
[attach-meaning] #3419 arith 7
[mk-app] #3054 Int
[attach-meaning] #3054 arith 8
[mk-app] #4179 Int
[attach-meaning] #4179 arith 9
[mk-app] #4180 Int
[attach-meaning] #4180 arith 10
[mk-app] #4181 Int
[attach-meaning] #4181 arith 11
[pop] 3 7
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 4
[push] 3
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[begin-check] 4
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #4491 #2
[mk-proof] #3695 iff-false #3696 #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #4491 #2
[mk-proof] #3695 iff-false #3696 #3693
[mk-app] #3693 ~ #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 rewrite #3693
[mk-proof] #3427 mp #3696 #3695 #3694
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[mk-app] #3693 = #3694 #3694
[mk-proof] #3695 refl #3693
[attach-enode] #4490 0
[attach-enode] #4491 0
[assign] (not #4491) justification -1: 
[mk-app] #3693 < #1507 #36
[mk-app] #3695 - #36 #1507
[mk-app] #3427 if #3693 #3695 #1507
[mk-app] #3429 - #3427 #151
[inst-discovered] theory-solving 0x0 arith# ; #3693
[mk-app] #3430 = #3693 #4256
[mk-proof] #4390 rewrite #3430
[instance] 0x0 #3430
[end-of-instance]
[mk-app] #4611 = #3693 #2
[mk-proof] #4639 trans #4390 #3297 #4611
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3695
[mk-app] #4544 = #3695 #4219
[mk-proof] #3450 rewrite #4544
[instance] 0x0 #4544
[end-of-instance]
[mk-app] #3006 = #3695 #1527
[mk-proof] #3273 trans #3450 #3221 #3006
[mk-app] #3270 if #2 #1527 #1507
[mk-app] #3010 = #3427 #3270
[mk-proof] #3442 monotonicity #4639 #3273 #3010
[inst-discovered] theory-solving 0x0 arith# ; #3270
[mk-app] #3018 = #3270 #1507
[mk-proof] #3016 rewrite #3018
[instance] 0x0 #3018
[end-of-instance]
[mk-app] #3897 = #3427 #1507
[mk-proof] #3007 trans #3442 #3016 #3897
[mk-app] #3753 - #1507 #151
[mk-app] #3756 = #3429 #3753
[mk-proof] #3426 monotonicity #3007 #3756
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3753
[mk-app] #3759 = #3753 #3169
[mk-proof] #4627 rewrite #3759
[instance] 0x0 #3759
[end-of-instance]
[mk-app] #3428 = #3429 #3169
[mk-proof] #3447 trans #3426 #4627 #3428
[mk-app] #3445 = #3429 #4134
[mk-proof] #3896 trans #3447 #3132 #3445
[mk-app] #4405 = #1507 #36
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4405
[mk-app] #3693 = #4405 #2
[mk-proof] #3430 rewrite #3693
[instance] 0x0 #3693
[end-of-instance]
[attach-enode] #3755 0
[attach-enode] #3446 0
[attach-enode] #3892 0
[attach-enode] #3893 0
[attach-meaning] #176 arith (- 1)
[attach-enode] #3690 0
[attach-enode] #3691 0
[mk-app] #4390 or #4405 #3893
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4390
[assign] #3893 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4405
[mk-app] #3693 = #4405 #2
[mk-proof] #3430 rewrite #3693
[instance] 0x0 #3693
[end-of-instance]
[attach-enode] #3754 0
[mk-app] #4390 or #4405 #3754
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4390
[assign] #3754 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4405
[mk-app] #3693 = #4405 #2
[mk-proof] #3430 rewrite #3693
[instance] 0x0 #3693
[end-of-instance]
[attach-enode] #3894 0
[mk-app] #4390 or #4405 #3894
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4390
[assign] #3894 justification -1: true
[end-of-instance]
[mk-app] #4390 = #4491 #2
[mk-proof] #4611 iff-false #3696 #4390
[assign] (not #4638) clause (not p100) p99 (not p101)
  (not (<= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int)) 
  (= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int) 
  (not (>= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int)) 

[assign] #3692 clause p103 (not p102)
  (<= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[assign] #3758 clause p104 (not p102)
  (>= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[attach-meaning] #176 arith (- 1)
[attach-enode] #3255 0
[assign] #3256 justification -1: p88
[assign] #3017 justification -1: p88
[decide-and-or] #2318 #2195
[push] 4
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 5
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[new-match] 0x14d0418e0 #263 #246 #4466 #4467 ; #4468
[new-match] 0x14d041918 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x14d041950 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d041990 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d0419d0 #124 #118 #2210 ; #4466
[new-match] 0x14d041a00 #143 #118 #2210 ; #4466
[new-match] 0x14d041a30 #237 #229 #4466 #36 ; #4467
[mk-app] #3435 * #176 #4468
[mk-app] #3263 + #4467 #3230 #3435
[mk-app] #3277 = #3263 #36
[mk-app] #4405 + #3230 #4467 #3435
[inst-discovered] theory-solving 0x0 arith# ; #3263
[mk-app] #3693 = #3263 #4405
[mk-proof] #3430 rewrite #3693
[instance] 0x0 #3693
[end-of-instance]
[mk-app] #3803 = #4405 #36
[mk-app] #3274 = #3277 #3803
[mk-proof] #3009 monotonicity #3430 #3274
[attach-meaning] #176 arith (- 1)
[mk-app] #3438 + #4466 #4164 #4468
[mk-app] #3278 = #3438 #36
[inst-discovered] theory-solving 0x0 arith# ; #3803
[mk-app] #3279 = #3803 #3278
[mk-proof] #3271 rewrite #3279
[instance] 0x0 #3279
[end-of-instance]
[mk-app] #4639 = #3277 #3278
[mk-proof] #3695 trans #3009 #3271 #4639
[mk-app] #4544 not #263
[mk-app] #3450 or #4544 #3278
[mk-app] #3006 or #4544 #3277
[mk-proof] #3273 quant-inst #3006
[mk-app] #3427 = #3006 #3450
[mk-proof] #3270 monotonicity #3695 #3427
[mk-app] #3010 = #3450 #3450
[mk-proof] #3442 rewrite #3010
[mk-proof] #3018 trans #3270 #3442 #3427
[mk-proof] #3016 mp #3273 #3018 #3450
[instance] 0x14d0418e0 #3273 ; 3
[attach-enode] #4164 3
[attach-enode] #3438 3
[attach-enode] #3278 3
[mk-app] #3897 <= #3438 #36
[mk-app] #3007 >= #3438 #36
[assign] #3278 justification -1: p21
[end-of-instance]
[mk-app] #3429 or #2965 #2967 #2972
[mk-app] #3753 or #3049 #2967 #2972
[mk-app] #3756 = #3429 #3753
[mk-proof] #3426 monotonicity #3053 #3756
[mk-app] #3759 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3753
[mk-app] #4627 = #3753 #3759
[mk-proof] #3428 rewrite #4627
[instance] 0x0 #4627
[end-of-instance]
[mk-app] #3447 = #3429 #3759
[mk-proof] #3445 trans #3426 #3428 #3447
[mk-app] #3896 or #4481 #2967 #2972 #3049
[mk-app] #3439 or #4481 #3429
[mk-proof] #3436 quant-inst #3439
[mk-app] #3898 or #4481 #3759
[mk-app] #4396 = #3439 #3898
[mk-proof] #3443 monotonicity #3445 #4396
[mk-app] #3444 = #3898 #3896
[mk-proof] #3448 rewrite #3444
[mk-app] #3449 = #3439 #3896
[mk-proof] #4397 trans #3443 #3448 #3449
[mk-proof] #4399 mp #3436 #4397 #3896
[instance] 0x14d041918 #3436 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #4400 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3895 or #2208 #2205 #3860 #4369 #2967
[mk-app] #4545 = #4400 #3895
[mk-proof] #4402 monotonicity #4376 #4545
[mk-app] #4403 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3895
[mk-app] #4404 = #3895 #4403
[mk-proof] #3008 rewrite #4404
[instance] 0x0 #4404
[end-of-instance]
[mk-app] #3015 = #4400 #4403
[mk-proof] #3254 trans #4402 #3008 #3015
[mk-app] #3261 not #1939
[mk-app] #3258 or #3261 #2205 #2208 #2967 #3860 #4369
[mk-app] #3257 or #3261 #4400
[mk-proof] #3260 quant-inst #3257
[mk-app] #4406 or #3261 #4403
[mk-app] #3011 = #3257 #4406
[mk-proof] #3012 monotonicity #3254 #3011
[mk-app] #3013 = #4406 #3258
[mk-proof] #3014 rewrite #3013
[mk-app] #3262 = #3257 #3258
[mk-proof] #3272 trans #3012 #3014 #3262
[mk-proof] #3259 mp #3260 #3272 #3258
[instance] 0x14d041950 #3260 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3019 >= #4466 #36
[mk-app] #3275 = #3019 #3019
[mk-proof] #3276 refl #3275
[mk-app] #3267 or #1568 #3019
[mk-proof] #3268 quant-inst #3267
[instance] 0x14d0419d0 #3268 ; 3
[assign] #3019 justification -1: p13
[end-of-instance]
[mk-app] #3275 not #3525
[mk-app] #3276 or #3275 #2205
[mk-app] #3269 = #3276 #3276
[mk-proof] #3431 refl #3269
[mk-app] #3802 or #2378 #3275 #2205
[mk-app] #2220 or #2378 #3276
[mk-proof] #2382 quant-inst #2220
[mk-app] #3804 = #2220 #3802
[mk-proof] #2314 rewrite #3804
[mk-proof] #3806 mp #2382 #2314 #3802
[instance] 0x14d041a00 #2382 ; 3
[attach-enode] #3525 3
[mk-app] #3807 <= #4466 #36
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3269 + #36 #4466 #4164
[mk-app] #3431 = #3269 #36
[inst-discovered] theory-solving 0x0 arith# ; #3269
[mk-app] #2339 = #3269 #4368
[mk-proof] #2341 rewrite #2339
[instance] 0x0 #2339
[end-of-instance]
[mk-app] #2214 = #4368 #36
[mk-app] #2212 = #3431 #2214
[mk-proof] #2213 monotonicity #2341 #2212
[mk-app] #2381 not #237
[mk-app] #2323 or #2381 #2214
[mk-app] #2312 or #2381 #3431
[mk-proof] #2340 quant-inst #2312
[mk-app] #3440 = #2312 #2323
[mk-proof] #3441 monotonicity #2213 #3440
[mk-app] #3805 = #2323 #2323
[mk-proof] #2335 rewrite #3805
[mk-proof] #2316 trans #3441 #2335 #3440
[mk-proof] #2336 mp #2340 #2316 #2323
[instance] 0x14d041a30 #2340 ; 3
[attach-enode] #2214 3
[mk-app] #3437 >= #4368 #36
[assign] #2214 justification -1: p20
[end-of-instance]
[assign] #3897 clause p109 (not p108)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #3007 clause p110 (not p108)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3807) clause (not p118) p117
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p115 (not p119)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #3437 clause p120 (not p119)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #4626 <= #4468 #36
[mk-app] #2342 >= #4468 #36
[assign] #4626 justification -1: p78
[assign] #2342 justification -1: p78
[assign] #2966 clause p111 (not p115) (not p116)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #3896 #2972
[push] 6
[assign] #2972 decision axiom
[mk-app] #2368 >= #3755 #36
[mk-app] #4182 not #2368
[mk-app] #4183 or #2368 #4182
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4183
[end-of-instance]
[push] 7
[assign] (not #2368) decision axiom
[mk-proof] #4182 th-lemma #4212 #3813 #3300 #3294 #3282 #4537 #3306 #3302 #4004 #4000 #3735 #3732 #3810 #3313 #2
[pop] 4 8
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 4
[push] 3
[mk-proof] #4390 asserted #4491
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 ~ #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 rewrite #4611
[mk-proof] #3006 mp #4390 #4544 #4491
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[mk-app] #4611 = #4491 #4491
[mk-proof] #4544 refl #4611
[attach-enode] #4490 0
[attach-enode] #4491 0
[assign] #4491 justification -1: 
[mk-app] #4611 < #1507 #36
[mk-app] #4544 - #36 #1507
[mk-app] #3006 if #4611 #4544 #1507
[mk-app] #3273 - #3006 #151
[inst-discovered] theory-solving 0x0 arith# ; #4611
[mk-app] #4405 = #4611 #4256
[mk-proof] #3693 rewrite #4405
[instance] 0x0 #4405
[end-of-instance]
[mk-app] #3430 = #4611 #2
[mk-proof] #3803 trans #3693 #3297 #3430
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4544
[mk-app] #3274 = #4544 #4219
[mk-proof] #3009 rewrite #3274
[instance] 0x0 #3274
[end-of-instance]
[mk-app] #3438 = #4544 #1527
[mk-proof] #3278 trans #3009 #3221 #3438
[mk-app] #3279 if #2 #1527 #1507
[mk-app] #3271 = #3006 #3279
[mk-proof] #4639 monotonicity #3803 #3278 #3271
[inst-discovered] theory-solving 0x0 arith# ; #3279
[mk-app] #3695 = #3279 #1507
[mk-proof] #3450 rewrite #3695
[instance] 0x0 #3695
[end-of-instance]
[mk-app] #3427 = #3006 #1507
[mk-proof] #3270 trans #4639 #3450 #3427
[mk-app] #3010 - #1507 #151
[mk-app] #3442 = #3273 #3010
[mk-proof] #3018 monotonicity #3270 #3442
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3010
[mk-app] #3016 = #3010 #3169
[mk-proof] #3439 rewrite #3016
[instance] 0x0 #3016
[end-of-instance]
[mk-app] #3436 = #3273 #3169
[mk-proof] #3753 trans #3018 #3439 #3436
[mk-app] #3756 = #3273 #4134
[mk-proof] #3426 trans #3753 #3132 #3756
[mk-app] #3759 = #1507 #36
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3759
[mk-app] #4611 = #3759 #2
[mk-proof] #4405 rewrite #4611
[instance] 0x0 #4611
[end-of-instance]
[attach-enode] #3755 0
[attach-enode] #3446 0
[attach-enode] #3892 0
[attach-enode] #3893 0
[attach-meaning] #176 arith (- 1)
[attach-enode] #3690 0
[attach-enode] #3691 0
[mk-app] #3693 or #3759 #3893
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3693
[assign] #3893 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3759
[mk-app] #4611 = #3759 #2
[mk-proof] #4405 rewrite #4611
[instance] 0x0 #4611
[end-of-instance]
[attach-enode] #3754 0
[mk-app] #3693 or #3759 #3754
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3693
[assign] #3754 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3759
[mk-app] #4611 = #3759 #2
[mk-proof] #4405 rewrite #4611
[instance] 0x0 #4611
[end-of-instance]
[attach-enode] #3894 0
[mk-app] #3693 or #3759 #3894
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3693
[assign] #3894 justification -1: true
[end-of-instance]
[assign] #4638 clause p100 (not p99)
  (<= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int) 
  (not (= (mod (address<Int> idx_one@7@01) 4::Int) 0::Int)) 

[assign] #3692 clause p103 (not p102)
  (<= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[assign] #3758 clause p104 (not p102)
  (>= (+ (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (* -1::Int (address<Int> idx_one@7@01))) 0::Int) 
  (not (= (+ (* 4::Int (div (address<Int> idx_one@7@01) 4::Int)) (mod (address<Int> idx_one@7@01) 4::Int)) (address<Int> idx_one@7@01))) 

[attach-meaning] #176 arith (- 1)
[attach-enode] #3255 0
[assign] #3256 justification -1: p88
[assign] #3017 justification -1: p88
[push] 4
[mk-app] #3693 Seq_length #2209
[mk-app] #3430 + #4466 #151
[mk-app] #3803 = #3693 #3430
[mk-app] #4544 not #3803
[mk-proof] #3274 asserted #4544
[mk-app] #3009 + #151 #4466
[inst-discovered] theory-solving 0x0 arith# ; #3430
[mk-app] #3438 = #3430 #3009
[mk-proof] #3278 rewrite #3438
[instance] 0x0 #3438
[end-of-instance]
[mk-app] #3006 = #3693 #3009
[mk-app] #3279 = #3803 #3006
[mk-proof] #3271 monotonicity #3278 #3279
[attach-meaning] #176 arith (- 1)
[mk-app] #4639 + #3693 #3230
[mk-app] #3695 = #4639 #151
[inst-discovered] theory-solving 0x0 arith# ; #3006
[mk-app] #3450 = #3006 #3695
[mk-proof] #3427 rewrite #3450
[instance] 0x0 #3450
[end-of-instance]
[mk-app] #3270 = #3803 #3695
[mk-proof] #3273 trans #3271 #3427 #3270
[mk-app] #3010 not #3695
[mk-app] #3442 = #4544 #3010
[mk-proof] #3018 monotonicity #3273 #3442
[mk-proof] #3016 mp #3274 #3018 #3010
[begin-check] 5
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3695 #2
[mk-proof] #3436 iff-false #3016 #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3695 #2
[mk-proof] #3436 iff-false #3016 #3439
[mk-app] #3439 ~ #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 rewrite #3439
[mk-proof] #3753 mp #3016 #3436 #3010
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[mk-app] #3439 = #3010 #3010
[mk-proof] #3436 refl #3439
[attach-enode] #3693 0
[attach-enode] #3230 0
[attach-enode] #4639 0
[attach-enode] #3695 0
[mk-app] #3439 <= #4639 #151
[mk-app] #3436 >= #4639 #151
[assign] (not #3695) justification -1: 
[mk-app] #3753 = #3695 #2
[mk-proof] #3756 iff-false #3016 #3753
[eq-expl] #2209 lit #1552 ; #2211
[new-match] 0x14d041bc8 #2741 #167 #2315 #2210 ; #3693 (#2209 #2211)
[new-match] 0x14d041c00 #124 #118 #2209 ; #3693
[new-match] 0x14d041c30 #143 #118 #2209 ; #3693
[new-match] 0x14d041c60 #124 #118 #2210 ; #4466
[new-match] 0x14d041c90 #143 #118 #2210 ; #4466
[mk-app] #3269 + #2216 #4021 #4466
[mk-app] #3431 = #3269 #36
[mk-app] #3275 or #2208 #2205 #3431
[mk-app] #3759 or #2205 #2208 #3431
[inst-discovered] theory-solving 0x0 basic# ; #3275
[mk-app] #4611 = #3275 #3759
[mk-proof] #4405 rewrite #4611
[instance] 0x0 #4611
[end-of-instance]
[mk-app] #3276 not #2741
[mk-app] #3019 or #3276 #2205 #2208 #3431
[mk-app] #4400 or #3276 #3275
[mk-proof] #3429 quant-inst #4400
[mk-app] #3435 or #3276 #3759
[mk-app] #3263 = #4400 #3435
[mk-proof] #3277 monotonicity #4405 #3263
[mk-app] #3426 = #3435 #3019
[mk-proof] #4627 rewrite #3426
[mk-app] #3428 = #4400 #3019
[mk-proof] #3447 trans #3277 #4627 #3428
[mk-proof] #3445 mp #3429 #3447 #3019
[instance] 0x14d041bc8 #3429 ; 1
[attach-enode] #4057 1
[attach-enode] #4021 1
[attach-enode] #3269 1
[attach-enode] #3431 1
[mk-app] #3898 <= #3269 #36
[mk-app] #4396 >= #3269 #36
[end-of-instance]
[mk-app] #3443 >= #4057 #36
[mk-app] #3896 = #3443 #3443
[mk-proof] #3444 refl #3896
[mk-app] #3448 or #1568 #3443
[mk-proof] #3449 quant-inst #3448
[instance] 0x14d041c00 #3449 ; 1
[assign] #3443 justification -1: p13
[end-of-instance]
[mk-app] #3896 = #4057 #36
[mk-app] #3444 not #3896
[mk-app] #4397 = #2211 #130
[mk-app] #4399 or #3444 #4397
[mk-app] #3261 = #4399 #4399
[mk-proof] #3257 refl #3261
[mk-app] #3260 or #2378 #3444 #4397
[mk-app] #3895 or #2378 #4399
[mk-proof] #4545 quant-inst #3895
[mk-app] #4402 = #3895 #3260
[mk-proof] #4403 rewrite #4402
[mk-proof] #4404 mp #4545 #4403 #3260
[instance] 0x14d041c30 #4545 ; 1
[attach-enode] #3896 1
[mk-app] #3008 <= #4057 #36
[attach-enode] #4397 1
[end-of-instance]
[mk-app] #3261 >= #4466 #36
[mk-app] #3257 = #3261 #3261
[mk-proof] #3015 refl #3257
[mk-app] #3254 or #1568 #3261
[mk-proof] #4406 quant-inst #3254
[instance] 0x14d041c60 #4406 ; 3
[assign] #3261 justification -1: p13
[end-of-instance]
[mk-app] #3257 not #3525
[mk-app] #3015 or #3257 #2205
[mk-app] #3011 = #3015 #3015
[mk-proof] #3012 refl #3011
[mk-app] #3258 or #2378 #3257 #2205
[mk-app] #3013 or #2378 #3015
[mk-proof] #3014 quant-inst #3013
[mk-app] #3262 = #3013 #3258
[mk-proof] #3272 rewrite #3262
[mk-proof] #3259 mp #3014 #3272 #3258
[instance] 0x14d041c90 #3014 ; 3
[attach-enode] #3525 3
[mk-app] #3267 <= #4466 #36
[end-of-instance]
[mk-app] #3011 = #3693 #4057
[attach-meaning] #176 arith (- 1)
[mk-app] #3012 + #3693 #4021
[mk-app] #3268 <= #3012 #36
[mk-app] #2220 >= #3012 #36
[assign] #3011 justification -1: p62
[attach-enode] #3011 0
[attach-enode] #3012 0
[assign] #3268 justification -1: p121
[assign] #2220 justification -1: p121
[decide-and-or] #2318 #2195
[push] 5
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 6
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #3431 clause p111 p68 p66
  (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] (not #3525) clause (not p119) p68
  (not (= (Seq_length $t@2@01) 0::Int)) 
  (= $t@2@01 Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #3898 clause p112 (not p111)
  (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 

[assign] #4396 clause p113 (not p111)
  (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 

[assign] (not #3267) clause (not p120) p119
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #3436 clause p110 (not p112) (not p75) (not p123)
  (>= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length $t@2@01))) 1::Int) 
  (not (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 
  (not (>= (Seq_length (Seq_singleton 0::Int)) 1::Int)) 
  (not (>= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 

[assign] #3439 clause p109 (not p113) (not p74) (not p122)
  (<= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length $t@2@01))) 1::Int) 
  (not (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 
  (not (<= (Seq_length (Seq_singleton 0::Int)) 1::Int)) 
  (not (<= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 

[assign] (not #3008) clause (not p116) (not p112) (not p63) p120
  (not (<= (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))) 0::Int)) 
  (not (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 
  (not (>= (Seq_length (Seq_singleton 0::Int)) 0::Int)) 
  (<= (Seq_length $t@2@01) 0::Int) 

[eq-expl] #4467 root
[new-match] 0x14d042af8 #263 #246 #4466 #4467 ; #4468
[new-match] 0x14d042b30 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x14d042b68 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d042ba8 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x14d042be8 #237 #229 #4466 #36 ; #4467
[mk-app] #2382 * #176 #4468
[mk-app] #3802 + #4467 #3230 #2382
[mk-app] #3804 = #3802 #36
[mk-app] #2314 + #3230 #4467 #2382
[inst-discovered] theory-solving 0x0 arith# ; #3802
[mk-app] #3806 = #3802 #2314
[mk-proof] #2381 rewrite #3806
[instance] 0x0 #3806
[end-of-instance]
[mk-app] #2312 = #2314 #36
[mk-app] #2340 = #3804 #2312
[mk-proof] #2339 monotonicity #2381 #2340
[attach-meaning] #176 arith (- 1)
[mk-app] #2341 + #4466 #4164 #4468
[mk-app] #2214 = #2341 #36
[inst-discovered] theory-solving 0x0 arith# ; #2312
[mk-app] #2212 = #2312 #2214
[mk-proof] #2213 rewrite #2212
[instance] 0x0 #2212
[end-of-instance]
[mk-app] #2323 = #3804 #2214
[mk-proof] #3440 trans #2339 #2213 #2323
[mk-app] #3441 not #263
[mk-app] #3805 or #3441 #2214
[mk-app] #2335 or #3441 #3804
[mk-proof] #2316 quant-inst #2335
[mk-app] #2336 = #2335 #3805
[mk-proof] #3897 monotonicity #3440 #2336
[mk-app] #3007 = #3805 #3805
[mk-proof] #3807 rewrite #3007
[mk-proof] #3437 trans #3897 #3807 #2336
[mk-proof] #4626 mp #2316 #3437 #3805
[instance] 0x14d042af8 #2316 ; 3
[attach-enode] #4164 3
[attach-enode] #2341 3
[attach-enode] #2214 3
[mk-app] #2342 <= #2341 #36
[mk-app] #2368 >= #2341 #36
[assign] #2214 justification -1: p21
[end-of-instance]
[mk-app] #4213 or #2965 #2967 #2972
[mk-app] #4183 or #3049 #2967 #2972
[mk-app] #4186 = #4213 #4183
[mk-proof] #3808 monotonicity #3053 #4186
[mk-app] #4177 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #4183
[mk-app] #4178 = #4183 #4177
[mk-proof] #3301 rewrite #4178
[instance] 0x0 #4178
[end-of-instance]
[mk-app] #4214 = #4213 #4177
[mk-proof] #4215 trans #3808 #3301 #4214
[mk-app] #4216 or #4481 #2967 #2972 #3049
[mk-app] #4221 or #4481 #4213
[mk-proof] #4222 quant-inst #4221
[mk-app] #4223 or #4481 #4177
[mk-app] #4224 = #4221 #4223
[mk-proof] #4226 monotonicity #4215 #4224
[mk-app] #4227 = #4223 #4216
[mk-proof] #4228 rewrite #4227
[mk-app] #4229 = #4221 #4216
[mk-proof] #4230 trans #4226 #4228 #4229
[mk-proof] #4580 mp #4222 #4230 #4216
[instance] 0x14d042b30 #4222 ; 3
[attach-enode] #2972 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #4581 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3664 or #2208 #2205 #3860 #4369 #2967
[mk-app] #3665 = #4581 #3664
[mk-proof] #3666 monotonicity #4376 #3665
[mk-app] #3667 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3664
[mk-app] #3668 = #3664 #3667
[mk-proof] #3669 rewrite #3668
[instance] 0x0 #3668
[end-of-instance]
[mk-app] #3682 = #4581 #3667
[mk-proof] #4634 trans #3666 #3669 #3682
[mk-app] #4635 not #1939
[mk-app] #3878 or #4635 #2205 #2208 #2967 #3860 #4369
[mk-app] #3879 or #4635 #4581
[mk-proof] #3880 quant-inst #3879
[mk-app] #3881 or #4635 #3667
[mk-app] #3882 = #3879 #3881
[mk-proof] #3883 monotonicity #4634 #3882
[mk-app] #3884 = #3881 #3878
[mk-proof] #4566 rewrite #3884
[mk-app] #4567 = #3879 #3878
[mk-proof] #2959 trans #3883 #4566 #4567
[mk-proof] #2960 mp #3880 #2959 #3878
[instance] 0x14d042b68 #3880 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #2961 + #36 #4466 #4164
[mk-app] #2962 = #2961 #36
[inst-discovered] theory-solving 0x0 arith# ; #2961
[mk-app] #2963 = #2961 #4368
[mk-proof] #2964 rewrite #2963
[instance] 0x0 #2963
[end-of-instance]
[mk-app] #2968 = #4368 #36
[mk-app] #2969 = #2962 #2968
[mk-proof] #2970 monotonicity #2964 #2969
[mk-app] #2971 not #237
[mk-app] #2973 or #2971 #2968
[mk-app] #2974 or #2971 #2962
[mk-proof] #2975 quant-inst #2974
[mk-app] #2976 = #2974 #2973
[mk-proof] #2977 monotonicity #2970 #2976
[mk-app] #3739 = #2973 #2973
[mk-proof] #3740 rewrite #3739
[mk-proof] #3741 trans #2977 #3740 #2976
[mk-proof] #3742 mp #2975 #3741 #2973
[instance] 0x14d042be8 #2975 ; 3
[attach-enode] #2968 3
[mk-app] #3743 >= #4368 #36
[assign] #2968 justification -1: p20
[end-of-instance]
[resolve-process] true
[resolve-lit] 0 (not #3439)
[resolve-lit] 0 (not #3436)
[resolve-process] (not #3439)
[resolve-lit] 0 (not #4396)
[resolve-process] (not #3436)
[resolve-lit] 0 (not #3898)
[resolve-process] (not #4396)
[resolve-lit] 0 (not #3431)
[resolve-process] (not #3898)
[mk-app] #3744 = #4057 #3693
[mk-proof] #3745 monotonicity #1555 #3744
[mk-proof] #4632 symm #3745 #3011
[mk-app] #4633 not #3011
[mk-app] #3657 or #4633 #2220
[mk-proof] #3658 th-lemma #3657
[mk-proof] #3659 unit-resolution #3658 #4632 #2220
[mk-app] #3660 not #2217
[mk-app] #3661 or #3660 #2189
[mk-proof] #3662 th-lemma #3661
[mk-proof] #3663 unit-resolution #3662 #2366 #2189
[mk-proof] #4558 hypothesis #3431
[mk-app] #4559 not #3431
[mk-app] #3112 or #4559 #3898
[mk-proof] #3113 th-lemma #3112
[mk-proof] #3114 unit-resolution #3113 #4558 #3898
[mk-app] #3115 not #2220
[mk-app] #3116 not #2189
[mk-app] #3117 not #3898
[mk-app] #3118 or #3436 #3115 #3116 #3117
[mk-proof] #3119 th-lemma #3118
[mk-proof] #3120 unit-resolution #3119 #3114 #3663 #3659 #3436
[mk-app] #3121 or #4633 #3268
[mk-proof] #3122 th-lemma #3121
[mk-proof] #3123 unit-resolution #3122 #4632 #3268
[mk-app] #3124 or #3660 #2188
[mk-proof] #3125 th-lemma #3124
[mk-proof] #3126 unit-resolution #3125 #2366 #2188
[mk-app] #3127 or #4559 #4396
[mk-proof] #3128 th-lemma #3127
[mk-proof] #3129 unit-resolution #3128 #4558 #4396
[mk-app] #3130 not #3268
[mk-app] #3134 not #2188
[mk-app] #3135 not #4396
[mk-app] #3136 or #3439 #3130 #3134 #3135
[mk-proof] #3137 th-lemma #3136
[mk-proof] #3138 unit-resolution #3137 #3129 #3126 #3123 #3439
[mk-app] #3139 not #3439
[mk-app] #3140 not #3436
[mk-app] #3142 or #3695 #3139 #3140
[mk-proof] #3143 th-lemma #3142
[mk-app] #3141 or #3139 #3140
[mk-proof] #3144 unit-resolution #3143 #3016 #3141
[mk-proof] #3145 unit-resolution #3144 #3138 #3120 #2
[mk-proof] #3146 lemma #3145 #4559
[conflict] (not #3431)
[pop] 2 7
[assign] (not #3431) justification -1: 
[decide-and-or] #2318 #2195
[push] 5
[assign] (not #2208) decision axiom
[assign] #2205 clause p68 p66 p111
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 
  (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 

[assign] #2198 clause p69 (not p68) (not p70)
  (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int)) 
  (not (= $t@2@01 Seq_empty)) 
  (not (or (not (= $t@2@01 Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int)))) 

[assign] #3525 justification -1: p14 p68
[assign] (not #4397) justification -1: (not p66) p69
[assign] (not #2196) justification -1: (not p66) p69 p68
[assign] (not #3896) justification -1: (not p64) p62 p69 p62
[mk-app] #3441 = #131 #4466
[attach-meaning] #176 arith (- 1)
[mk-app] #2335 + #131 #3230
[mk-app] #2316 <= #2335 #36
[mk-app] #2314 >= #2335 #36
[assign] #3441 justification -1: p68
[attach-enode] #3441 0
[attach-enode] #2335 0
[assign] #2316 justification -1: p124
[assign] #2314 justification -1: p124
[mk-app] #3806 = #2216 #3693
[attach-meaning] #176 arith (- 1)
[mk-app] #2381 * #176 #3693
[mk-app] #2312 + #2216 #2381
[mk-app] #2340 <= #2312 #36
[mk-app] #2339 >= #2312 #36
[assign] #3806 justification -1: p62 p69
[attach-enode] #3806 0
[attach-enode] #2381 0
[attach-enode] #2312 0
[assign] #2340 justification -1: p127
[assign] #2339 justification -1: p127
[eq-expl] #2210 lit #2205 ; #130
[eq-expl] #2315 lit #2198 ; #2211
[new-match] 0x14d043188 #1939 #283 #36 #2315 #2210 ; #2321 (#2315 #2211)
[new-match] 0x14d0431c8 #2739 #283 #36 #2315 #2210 ; #2321 (#2315 #2211)
[assign] #3267 clause p120 (not p119)
  (<= (Seq_length $t@2@01) 0::Int) 
  (not (= (Seq_length $t@2@01) 0::Int)) 

[assign] (not #3008) clause (not p116) p115
  (not (<= (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))) 0::Int)) 
  (= (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))) 0::Int) 

[assign] #3898 clause p112 (not p120) (not p122) (not p128)
  (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (not (<= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 
  (not (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length seq@8@01))) 0::Int)) 

[assign] #4396 clause p113 (not p129) (not p123) (not p118)
  (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length seq@8@01))) 0::Int)) 
  (not (>= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[resolve-process] true
[resolve-lit] 0 (not #4396)
[resolve-lit] 0 (not #3898)
[resolve-process] (not #4396)
[resolve-lit] 0 (not #2339)
[resolve-process] (not #3898)
[resolve-lit] 0 (not #3267)
[resolve-lit] 0 (not #2340)
[resolve-process] (not #3267)
[resolve-lit] 0 (not #3525)
[resolve-process] (not #2339)
[resolve-lit] 0 (not #3806)
[resolve-process] (not #2340)
[resolve-process] (not #3806)
[resolve-lit] 0 (not #2198)
[resolve-process] (not #3525)
[resolve-lit] 0 (not #2205)
[resolve-process] (not #2198)
[mk-proof] #2341 unit-resolution #2186 #1963 #2193
[mk-proof] #2214 unit-resolution #2362 #2341 #2199
[mk-proof] #2212 hypothesis #2205
[mk-proof] #2213 unit-resolution #2181 #2212 #2214 #2198
[mk-app] #2323 = #2315 #2211
[mk-proof] #3440 symm #2213 #2323
[mk-app] #3805 = #2209 #2315
[mk-proof] #2336 trans* #1553 #2213 #3805
[mk-app] #3897 = #3693 #2216
[mk-proof] #3007 monotonicity #2336 #3897
[mk-proof] #3807 symm #3007 #3806
[mk-app] #3437 not #3806
[mk-app] #4626 or #3437 #2340
[mk-proof] #4221 th-lemma #4626
[mk-proof] #4222 unit-resolution #4221 #3807 #2340
[mk-app] #4183 = #4466 #131
[mk-proof] #4186 monotonicity #2212 #4183
[mk-proof] #3808 trans* #4186 #133 #3525
[mk-app] #4177 or #3257 #3267
[mk-proof] #4178 th-lemma #4177
[mk-proof] #3301 unit-resolution #4178 #3808 #3267
[mk-app] #4214 not #2340
[mk-app] #4215 not #3267
[mk-app] #4223 or #3898 #4214 #3130 #4215
[mk-proof] #4224 th-lemma #4223
[mk-proof] #4226 unit-resolution #4224 #3301 #3123 #4222 #3898
[mk-proof] #4216 unit-resolution #4406 #2902 #3261
[mk-app] #4227 or #3437 #2339
[mk-proof] #4228 th-lemma #4227
[mk-proof] #4229 unit-resolution #4228 #3807 #2339
[mk-app] #4230 not #2339
[mk-app] #4580 not #3261
[mk-app] #4635 or #4396 #4230 #3115 #4580
[mk-proof] #3879 th-lemma #4635
[mk-proof] #3880 unit-resolution #3879 #4229 #3659 #4216 #4396
[mk-app] #3664 or #3431 #3117 #3135
[mk-proof] #3665 th-lemma #3664
[mk-proof] #3666 unit-resolution #3665 #3880 #4226 #3146 #2
[mk-proof] #3667 lemma #3666 #2200
[conflict] (not #2205)
[pop] 1 6
[attach-enode] #2381 0
[attach-enode] #2312 0
[assign] (not #2205) justification -1: 
[assign] #2208 clause p66 p68 p111
  (= (Seq_singleton 0::Int) Seq_empty) 
  (= $t@2@01 Seq_empty) 
  (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 

[assign] (not #3525) clause (not p119) p68
  (not (= (Seq_length $t@2@01) 0::Int)) 
  (= $t@2@01 Seq_empty) 

[assign] #2196 clause p71 (not p66) (not p72)
  (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01) 
  (not (= (Seq_singleton 0::Int) Seq_empty)) 
  (not (or (not (= (Seq_singleton 0::Int) Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01))) 

[assign] (not #3267) clause (not p120) p119
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[mk-proof] #3441 unit-resolution #3445 #2753 #3759
[mk-proof] #2335 unit-resolution #3441 #3667 #3146 #2208
[mk-app] #2316 = #151 #2216
[mk-proof] #2314 symm #2366 #2316
[mk-app] #2323 = #2216 #131
[mk-proof] #3440 monotonicity #2335 #2323
[mk-app] #3668 = #151 #36
[mk-proof] #3669 trans* #2314 #3440 #133 #3668
[mk-app] #3682 = #3668 #2
[mk-proof] #4634 rewrite #3682
[mk-proof] #3881 mp #3669 #4634 #2
[pop] 1 5
[mk-proof] #3753 asserted #3803
[inst-discovered] theory-solving 0x0 arith# ; #3430
[instance] 0x0 #3438
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3006
[instance] 0x0 #3450
[end-of-instance]
[mk-proof] #3756 mp #3753 #3273 #3695
[pop] 1 4
[pop] 1 3
[push] 2
[mk-app] #3418 address<Int> #1580
[mk-app] #4273 mod #3418 #1507
[mk-app] #3379 = #4273 #36
[mk-app] #3380 not #3379
[mk-proof] #3231 asserted #3380
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[pop] 1 3
[push] 2
[mk-app] #3418 address<Int> #1580
[mk-app] #4273 mod #3418 #1507
[mk-app] #3379 = #4273 #36
[mk-app] #3380 not #3379
[mk-proof] #3231 asserted #3380
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[begin-check] 3
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3379 #2
[mk-proof] #3421 iff-false #3231 #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3379 #2
[mk-proof] #3421 iff-false #3231 #3381
[mk-app] #3381 ~ #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 rewrite #3381
[mk-proof] #3519 mp #3231 #3421 #3380
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[mk-app] #3381 = #3380 #3380
[mk-proof] #3421 refl #3381
[attach-enode] #3418 0
[attach-enode] #1507 0
[attach-enode] #4273 0
[attach-enode] #3379 0
[mk-app] #3381 <= #4273 #36
[mk-app] #3421 >= #4273 #36
[assign] (not #3379) justification -1: 
[mk-app] #3519 div #3418 #1507
[mk-app] #3420 < #1507 #36
[mk-app] #4377 - #36 #1507
[mk-app] #3526 if #3420 #4377 #1507
[mk-app] #4074 - #3526 #151
[inst-discovered] theory-solving 0x0 arith# ; #3420
[mk-app] #3529 = #3420 #4256
[mk-proof] #4154 rewrite #3529
[instance] 0x0 #3529
[end-of-instance]
[mk-app] #4157 = #3420 #2
[mk-proof] #4088 trans #4154 #3297 #4157
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4377
[mk-app] #3415 = #4377 #4219
[mk-proof] #3524 rewrite #3415
[instance] 0x0 #3415
[end-of-instance]
[mk-app] #3416 = #4377 #1527
[mk-proof] #3422 trans #3524 #3221 #3416
[mk-app] #4379 if #2 #1527 #1507
[mk-app] #4380 = #3526 #4379
[mk-proof] #4282 monotonicity #4088 #3422 #4380
[inst-discovered] theory-solving 0x0 arith# ; #4379
[mk-app] #3423 = #4379 #1507
[mk-proof] #3424 rewrite #3423
[instance] 0x0 #3423
[end-of-instance]
[mk-app] #3425 = #3526 #1507
[mk-proof] #3537 trans #4282 #3424 #3425
[mk-app] #3542 - #1507 #151
[mk-app] #4489 = #4074 #3542
[mk-proof] #4046 monotonicity #3537 #4489
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3542
[mk-app] #3757 = #3542 #3169
[mk-proof] #3337 rewrite #3757
[instance] 0x0 #3757
[end-of-instance]
[mk-app] #3939 = #4074 #3169
[mk-proof] #3937 trans #4046 #3337 #3939
[mk-app] #3938 = #4074 #4134
[mk-proof] #3539 trans #3937 #3132 #3938
[mk-app] #4166 = #1507 #36
[mk-app] #3540 * #1507 #3519
[mk-app] #3541 + #3540 #4273
[mk-app] #3934 = #3541 #3418
[mk-app] #3940 <= #4273 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4166
[mk-app] #3420 = #4166 #2
[mk-proof] #3529 rewrite #3420
[instance] 0x0 #3420
[end-of-instance]
[attach-enode] #3519 0
[attach-enode] #3540 0
[attach-enode] #3541 0
[attach-enode] #3934 0
[mk-app] #4154 or #4166 #3934
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4154
[assign] #3934 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4166
[mk-app] #3420 = #4166 #2
[mk-proof] #3529 rewrite #3420
[instance] 0x0 #3420
[end-of-instance]
[attach-enode] #3421 0
[mk-app] #4154 or #4166 #3421
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4154
[assign] #3421 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4166
[mk-app] #3420 = #4166 #2
[mk-proof] #3529 rewrite #3420
[instance] 0x0 #3420
[end-of-instance]
[attach-enode] #3940 0
[mk-app] #4154 or #4166 #3940
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4154
[assign] #3940 justification -1: true
[end-of-instance]
[mk-app] #4154 = #3379 #2
[mk-proof] #4157 iff-false #3231 #4154
[assign] (not #3381) clause (not p81) p80 (not p82)
  (not (<= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 
  (= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int) 
  (not (>= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 

[new-match] 0x12c06a8b0 #1546 #1510 #36 #36 #1567 ; #3418 (#1580 #1581) #3418 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #2961 + #4205 #3298 #3536 #3303
[mk-app] #2962 = #2961 #36
[mk-app] #4581 + #36 #36 #3536 #3303
[mk-app] #4213 = #2961 #4581
[mk-proof] #2382 monotonicity #4242 #4151 #4213
[inst-discovered] theory-solving 0x0 arith# ; #4581
[mk-app] #4166 = #4581 #36
[mk-proof] #3420 rewrite #4166
[instance] 0x0 #4166
[end-of-instance]
[mk-proof] #3529 trans #2382 #3420 #2962
[mk-app] #3802 = #36 #36
[mk-app] #3804 = #2962 #3802
[mk-proof] #3015 monotonicity #3529 #3804
[inst-discovered] theory-solving 0x0 arith# ; #3802
[mk-app] #3444 = #3802 #1
[mk-proof] #4399 rewrite #3444
[instance] 0x0 #3444
[end-of-instance]
[mk-app] #3443 = #2962 #1
[mk-proof] #4088 trans #3015 #4399 #3443
[instance] 0x12c06a8b0 #4088 ; 0
[end-of-instance]
[decide-and-or] #2318 #2195
[push] 3
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 4
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4466 root
[new-match] 0x12c06a990 #263 #246 #4466 #4467 ; #4468
[new-match] 0x12c06a9c8 #1696 #1173 #4467 #2211 ; #4475
[eq-expl] #2210 root
[eq-expl] #2315 root
[new-match] 0x12c06aa00 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aa40 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aa80 #124 #118 #2210 ; #4466
[new-match] 0x12c06aab0 #143 #118 #2210 ; #4466
[new-match] 0x12c06aae0 #237 #229 #4466 #36 ; #4467
[mk-app] #4581 * #176 #4468
[mk-app] #4213 + #4467 #3230 #4581
[mk-app] #2382 = #4213 #36
[mk-app] #4166 + #3230 #4467 #4581
[inst-discovered] theory-solving 0x0 arith# ; #4213
[mk-app] #3420 = #4213 #4166
[mk-proof] #3529 rewrite #3420
[instance] 0x0 #3420
[end-of-instance]
[mk-app] #3802 = #4166 #36
[mk-app] #3804 = #2382 #3802
[mk-proof] #3015 monotonicity #3529 #3804
[attach-meaning] #176 arith (- 1)
[mk-app] #3444 + #4466 #4164 #4468
[mk-app] #4399 = #3444 #36
[inst-discovered] theory-solving 0x0 arith# ; #3802
[mk-app] #3443 = #3802 #4399
[mk-proof] #4088 rewrite #3443
[instance] 0x0 #3443
[end-of-instance]
[mk-app] #4377 = #2382 #4399
[mk-proof] #3415 trans #3015 #4088 #4377
[mk-app] #3524 not #263
[mk-app] #3416 or #3524 #4399
[mk-app] #3422 or #3524 #2382
[mk-proof] #3526 quant-inst #3422
[mk-app] #4379 = #3422 #3416
[mk-proof] #4380 monotonicity #3415 #4379
[mk-app] #4282 = #3416 #3416
[mk-proof] #3423 rewrite #4282
[mk-proof] #3424 trans #4380 #3423 #4379
[mk-proof] #3425 mp #3526 #3424 #3416
[instance] 0x12c06a990 #3526 ; 3
[attach-enode] #176 3
[attach-enode] #4164 3
[attach-enode] #3444 3
[attach-enode] #4399 3
[mk-app] #3537 <= #3444 #36
[mk-app] #4074 >= #3444 #36
[assign] #4399 justification -1: p21
[end-of-instance]
[mk-app] #3542 or #2965 #2967 #2972
[mk-app] #4489 or #3049 #2967 #2972
[mk-app] #4046 = #3542 #4489
[mk-proof] #3757 monotonicity #3053 #4046
[mk-app] #3337 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #4489
[mk-app] #3939 = #4489 #3337
[mk-proof] #3937 rewrite #3939
[instance] 0x0 #3939
[end-of-instance]
[mk-app] #3938 = #3542 #3337
[mk-proof] #3539 trans #3757 #3937 #3938
[mk-app] #3935 or #4481 #2967 #2972 #3049
[mk-app] #4485 or #4481 #3542
[mk-proof] #4486 quant-inst #4485
[mk-app] #4488 or #4481 #3337
[mk-app] #4165 = #4485 #4488
[mk-proof] #4052 monotonicity #3539 #4165
[mk-app] #3936 = #4488 #3935
[mk-proof] #3538 rewrite #3936
[mk-app] #4274 = #4485 #3935
[mk-proof] #3093 trans #4052 #3538 #4274
[mk-proof] #3094 mp #4486 #3093 #3935
[instance] 0x12c06a9c8 #4486 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3058 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3059 or #2208 #2205 #3860 #4369 #2967
[mk-app] #3174 = #3058 #3059
[mk-proof] #3183 monotonicity #4376 #3174
[mk-app] #3133 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3059
[mk-app] #4276 = #3059 #3133
[mk-proof] #4075 rewrite #4276
[instance] 0x0 #4276
[end-of-instance]
[mk-app] #3523 = #3058 #3133
[mk-proof] #3534 trans #3183 #4075 #3523
[mk-app] #3532 not #1939
[mk-app] #3533 or #3532 #2205 #2208 #2967 #3860 #4369
[mk-app] #3858 or #3532 #3058
[mk-proof] #4387 quant-inst #3858
[mk-app] #4492 or #3532 #3133
[mk-app] #2998 = #3858 #4492
[mk-proof] #2999 monotonicity #3534 #2998
[mk-app] #3000 = #4492 #3533
[mk-proof] #3001 rewrite #3000
[mk-app] #3002 = #3858 #3533
[mk-proof] #3003 trans #2999 #3001 #3002
[mk-proof] #3004 mp #4387 #3003 #3533
[instance] 0x12c06aa00 #4387 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3005 = #3261 #3261
[mk-proof] #3753 refl #3005
[instance] 0x12c06aa80 #4406 ; 3
[assign] #3261 justification -1: p13
[end-of-instance]
[mk-app] #3005 or #3257 #2205
[mk-app] #3753 = #3005 #3005
[mk-proof] #3756 refl #3753
[mk-app] #4390 or #2378 #3257 #2205
[mk-app] #4638 or #2378 #3005
[mk-proof] #3754 quant-inst #4638
[mk-app] #3755 = #4638 #4390
[mk-proof] #3446 rewrite #3755
[mk-proof] #3892 mp #3754 #3446 #4390
[instance] 0x12c06aab0 #3754 ; 3
[attach-enode] #3525 3
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #3753 + #36 #4466 #4164
[mk-app] #3756 = #3753 #36
[inst-discovered] theory-solving 0x0 arith# ; #3753
[mk-app] #3893 = #3753 #4368
[mk-proof] #3690 rewrite #3893
[instance] 0x0 #3893
[end-of-instance]
[mk-app] #3691 = #4368 #36
[mk-app] #3692 = #3756 #3691
[mk-proof] #3758 monotonicity #3690 #3692
[mk-app] #3894 not #237
[mk-app] #3255 or #3894 #3691
[mk-app] #3256 or #3894 #3756
[mk-proof] #3017 quant-inst #3256
[mk-app] #3448 = #3256 #3255
[mk-proof] #3449 monotonicity #3758 #3448
[mk-app] #3895 = #3255 #3255
[mk-proof] #4545 rewrite #3895
[mk-proof] #3260 trans #3449 #4545 #3448
[mk-proof] #4402 mp #3017 #3260 #3255
[instance] 0x12c06aae0 #3017 ; 3
[attach-enode] #3691 3
[mk-app] #4403 >= #4368 #36
[assign] #3691 justification -1: p20
[end-of-instance]
[assign] #3537 clause p86 (not p85)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #4074 clause p87 (not p85)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3267) clause (not p95) p94
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p92 (not p96)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #4403 clause p97 (not p96)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #4404 <= #4468 #36
[mk-app] #3013 >= #4468 #36
[assign] #4404 justification -1: p78
[assign] #3013 justification -1: p78
[assign] #2966 clause p88 (not p92) (not p93)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #3935 #2972
[push] 5
[assign] #2972 decision axiom
[mk-app] #1577 Seq<Int>!val!0
[mk-app] #1579 $Ref!val!0
[mk-app] #1578 $Ref!val!1
[mk-app] #2993 Ptr32!val!0
[mk-app] #4603 Ptr32!val!1
[mk-app] #2996 Seq<Int>!val!1
[mk-app] #2994 Seq<Int>!val!2
[mk-app] #4602 Seq<Int>!val!3
[mk-app] #2995 Int
[attach-meaning] #2995 arith 6284
[attach-meaning] #176 arith (- 1)
[pop] 3 6
[attach-enode] #176 0
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 3
[push] 2
[mk-app] #3418 address<Int> #1580
[mk-app] #4273 mod #3418 #1507
[mk-app] #3379 = #4273 #36
[mk-app] #3380 not #3379
[mk-app] #3231 not #3380
[mk-proof] #4154 asserted #3231
[inst-discovered] theory-solving 0x0 basic# ; #3231
[mk-app] #4157 = #3231 #3379
[mk-proof] #3381 rewrite #4157
[instance] 0x0 #4157
[end-of-instance]
[mk-proof] #3421 mp #4154 #3381 #3379
[begin-check] 3
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 ~ #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 rewrite #3519
[mk-proof] #3541 mp #3421 #3540 #3379
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[mk-app] #3519 = #3379 #3379
[mk-proof] #3540 refl #3519
[attach-enode] #3418 0
[attach-enode] #1507 0
[attach-enode] #4273 0
[attach-enode] #3379 0
[mk-app] #3519 <= #4273 #36
[mk-app] #3540 >= #4273 #36
[assign] #3379 justification -1: 
[mk-app] #3541 div #3418 #1507
[mk-app] #3934 < #1507 #36
[mk-app] #3940 - #36 #1507
[mk-app] #3524 if #3934 #3940 #1507
[mk-app] #3422 - #3524 #151
[inst-discovered] theory-solving 0x0 arith# ; #3934
[mk-app] #3526 = #3934 #4256
[mk-proof] #4166 rewrite #3526
[instance] 0x0 #3526
[end-of-instance]
[mk-app] #3420 = #3934 #2
[mk-proof] #3529 trans #4166 #3297 #3420
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3940
[mk-app] #3802 = #3940 #4219
[mk-proof] #3804 rewrite #3802
[instance] 0x0 #3802
[end-of-instance]
[mk-app] #3015 = #3940 #1527
[mk-proof] #3444 trans #3804 #3221 #3015
[mk-app] #4399 if #2 #1527 #1507
[mk-app] #3443 = #3524 #4399
[mk-proof] #4088 monotonicity #3529 #3444 #3443
[inst-discovered] theory-solving 0x0 arith# ; #4399
[mk-app] #4377 = #4399 #1507
[mk-proof] #3415 rewrite #4377
[instance] 0x0 #4377
[end-of-instance]
[mk-app] #3416 = #3524 #1507
[mk-proof] #4379 trans #4088 #3415 #3416
[mk-app] #4380 - #1507 #151
[mk-app] #4282 = #3422 #4380
[mk-proof] #3423 monotonicity #4379 #4282
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4380
[mk-app] #3424 = #4380 #3169
[mk-proof] #3425 rewrite #3424
[instance] 0x0 #3424
[end-of-instance]
[mk-app] #4485 = #3422 #3169
[mk-proof] #4486 trans #3423 #3425 #4485
[mk-app] #4489 = #3422 #4134
[mk-proof] #4046 trans #4486 #3132 #4489
[mk-app] #3757 = #1507 #36
[mk-app] #3337 * #1507 #3541
[mk-app] #3939 + #3337 #4273
[mk-app] #3937 = #3939 #3418
[mk-app] #3938 <= #4273 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3934 = #3757 #2
[mk-proof] #3526 rewrite #3934
[instance] 0x0 #3934
[end-of-instance]
[attach-enode] #3541 0
[attach-enode] #3337 0
[attach-enode] #3939 0
[attach-enode] #3937 0
[mk-app] #4166 or #3757 #3937
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4166
[assign] #3937 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3934 = #3757 #2
[mk-proof] #3526 rewrite #3934
[instance] 0x0 #3934
[end-of-instance]
[attach-enode] #3540 0
[mk-app] #4166 or #3757 #3540
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4166
[assign] #3540 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #3757
[mk-app] #3934 = #3757 #2
[mk-proof] #3526 rewrite #3934
[instance] 0x0 #3934
[end-of-instance]
[attach-enode] #3938 0
[mk-app] #4166 or #3757 #3938
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #4166
[assign] #3938 justification -1: true
[end-of-instance]
[assign] #3519 clause p81 (not p80)
  (<= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int) 
  (not (= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 

[new-match] 0x12c06a8d0 #1546 #1510 #36 #36 #1567 ; #3418 (#1580 #1581) #3418 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #3753 + #4205 #3298 #3536 #3303
[mk-app] #3756 = #3753 #36
[mk-app] #3005 + #36 #36 #3536 #3303
[mk-app] #3058 = #3753 #3005
[mk-proof] #3542 monotonicity #4242 #4151 #3058
[inst-discovered] theory-solving 0x0 arith# ; #3005
[mk-app] #3757 = #3005 #36
[mk-proof] #3934 rewrite #3757
[instance] 0x0 #3757
[end-of-instance]
[mk-proof] #3526 trans #3542 #3934 #3756
[mk-app] #4581 = #36 #36
[mk-app] #4213 = #3756 #4581
[mk-proof] #2382 monotonicity #3526 #4213
[inst-discovered] theory-solving 0x0 arith# ; #4581
[mk-app] #2961 = #4581 #1
[mk-proof] #2962 rewrite #2961
[instance] 0x0 #2961
[end-of-instance]
[mk-app] #4166 = #3756 #1
[mk-proof] #3420 trans #2382 #2962 #4166
[instance] 0x12c06a8d0 #3420 ; 0
[end-of-instance]
[decide-and-or] #2318 #2195
[push] 3
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 4
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[eq-expl] #4467 root
[new-match] 0x12c06a9b0 #263 #246 #4466 #4467 ; #4468
[new-match] 0x12c06a9e8 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x12c06aa20 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aa60 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x12c06aaa0 #124 #118 #2210 ; #4466
[new-match] 0x12c06aad0 #143 #118 #2210 ; #4466
[new-match] 0x12c06ab00 #237 #229 #4466 #36 ; #4467
[mk-app] #3005 * #176 #4468
[mk-app] #3058 + #4467 #3230 #3005
[mk-app] #3542 = #3058 #36
[mk-app] #3757 + #3230 #4467 #3005
[inst-discovered] theory-solving 0x0 arith# ; #3058
[mk-app] #3934 = #3058 #3757
[mk-proof] #3526 rewrite #3934
[instance] 0x0 #3934
[end-of-instance]
[mk-app] #4581 = #3757 #36
[mk-app] #4213 = #3542 #4581
[mk-proof] #2382 monotonicity #3526 #4213
[attach-meaning] #176 arith (- 1)
[mk-app] #2961 + #4466 #4164 #4468
[mk-app] #2962 = #2961 #36
[inst-discovered] theory-solving 0x0 arith# ; #4581
[mk-app] #4166 = #4581 #2962
[mk-proof] #3420 rewrite #4166
[instance] 0x0 #4166
[end-of-instance]
[mk-app] #3529 = #3542 #2962
[mk-proof] #3940 trans #2382 #3420 #3529
[mk-app] #3802 not #263
[mk-app] #3804 or #3802 #2962
[mk-app] #3015 or #3802 #3542
[mk-proof] #3444 quant-inst #3015
[mk-app] #3524 = #3015 #3804
[mk-proof] #4399 monotonicity #3940 #3524
[mk-app] #3443 = #3804 #3804
[mk-proof] #4088 rewrite #3443
[mk-proof] #4377 trans #4399 #4088 #3524
[mk-proof] #3415 mp #3444 #4377 #3804
[instance] 0x12c06a9b0 #3444 ; 3
[attach-enode] #176 3
[attach-enode] #4164 3
[attach-enode] #2961 3
[attach-enode] #2962 3
[mk-app] #3416 <= #2961 #36
[mk-app] #4379 >= #2961 #36
[assign] #2962 justification -1: p21
[end-of-instance]
[mk-app] #3422 or #2965 #2967 #2972
[mk-app] #4380 or #3049 #2967 #2972
[mk-app] #4282 = #3422 #4380
[mk-proof] #3423 monotonicity #3053 #4282
[mk-app] #3424 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #4380
[mk-app] #3425 = #4380 #3424
[mk-proof] #4485 rewrite #3425
[instance] 0x0 #3425
[end-of-instance]
[mk-app] #4486 = #3422 #3424
[mk-proof] #4489 trans #3423 #4485 #4486
[mk-app] #4046 or #4481 #2967 #2972 #3049
[mk-app] #3539 or #4481 #3422
[mk-proof] #4488 quant-inst #3539
[mk-app] #4165 or #4481 #3424
[mk-app] #4052 = #3539 #4165
[mk-proof] #3935 monotonicity #4489 #4052
[mk-app] #3936 = #4165 #4046
[mk-proof] #3538 rewrite #3936
[mk-app] #4274 = #3539 #4046
[mk-proof] #3093 trans #3935 #3538 #4274
[mk-proof] #3094 mp #4488 #3093 #4046
[instance] 0x12c06a9e8 #4488 ; 3
[attach-enode] #2972 3
[attach-enode] #4057 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3532 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3858 or #2208 #2205 #3860 #4369 #2967
[mk-app] #4387 = #3532 #3858
[mk-proof] #3059 monotonicity #4376 #4387
[mk-app] #3174 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3858
[mk-app] #3183 = #3858 #3174
[mk-proof] #3133 rewrite #3183
[instance] 0x0 #3183
[end-of-instance]
[mk-app] #4276 = #3532 #3174
[mk-proof] #4075 trans #3059 #3133 #4276
[mk-app] #3523 not #1939
[mk-app] #3534 or #3523 #2205 #2208 #2967 #3860 #4369
[mk-app] #4492 or #3523 #3532
[mk-proof] #2998 quant-inst #4492
[mk-app] #2999 or #3523 #3174
[mk-app] #3533 = #4492 #2999
[mk-proof] #3000 monotonicity #4075 #3533
[mk-app] #3001 = #2999 #3534
[mk-proof] #3002 rewrite #3001
[mk-app] #3003 = #4492 #3534
[mk-proof] #3004 trans #3000 #3002 #3003
[mk-proof] #4638 mp #2998 #3004 #3534
[instance] 0x12c06aa20 #2998 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #3754 = #3261 #3261
[mk-proof] #4390 refl #3754
[instance] 0x12c06aaa0 #4406 ; 3
[assign] #3261 justification -1: p13
[end-of-instance]
[mk-app] #3754 or #3257 #2205
[mk-app] #4390 = #3754 #3754
[mk-proof] #3755 refl #4390
[mk-app] #3446 or #2378 #3257 #2205
[mk-app] #3892 or #2378 #3754
[mk-proof] #3894 quant-inst #3892
[mk-app] #3256 = #3892 #3446
[mk-proof] #3017 rewrite #3256
[mk-proof] #3893 mp #3894 #3017 #3446
[instance] 0x12c06aad0 #3894 ; 3
[attach-enode] #3525 3
[assign] (not #3525) justification -1: p15 (not p68)
[end-of-instance]
[mk-app] #4390 + #36 #4466 #4164
[mk-app] #3755 = #4390 #36
[inst-discovered] theory-solving 0x0 arith# ; #4390
[mk-app] #3690 = #4390 #4368
[mk-proof] #3691 rewrite #3690
[instance] 0x0 #3690
[end-of-instance]
[mk-app] #3692 = #4368 #36
[mk-app] #3758 = #3755 #3692
[mk-proof] #3255 monotonicity #3691 #3758
[mk-app] #3448 not #237
[mk-app] #3449 or #3448 #3692
[mk-app] #3895 or #3448 #3755
[mk-proof] #4545 quant-inst #3895
[mk-app] #3260 = #3895 #3449
[mk-proof] #4402 monotonicity #3255 #3260
[mk-app] #3537 = #3449 #3449
[mk-proof] #4074 rewrite #3537
[mk-proof] #4403 trans #4402 #4074 #3260
[mk-proof] #4404 mp #4545 #4403 #3449
[instance] 0x12c06ab00 #4545 ; 3
[attach-enode] #3692 3
[mk-app] #3013 >= #4368 #36
[assign] #3692 justification -1: p20
[end-of-instance]
[assign] #3416 clause p86 (not p85)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] #4379 clause p87 (not p85)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01))) 0::Int)) 

[assign] (not #3267) clause (not p95) p94
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #4369 clause p92 (not p96)
  (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[assign] #3013 clause p97 (not p96)
  (>= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int) 
  (not (= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 

[mk-app] #3014 <= #4468 #36
[mk-app] #3258 >= #4468 #36
[assign] #3014 justification -1: p78
[assign] #3258 justification -1: p78
[assign] #2966 clause p88 (not p92) (not p93)
  (>= (Seq_add 0::Int (Seq_length $t@2@01)) 0::Int) 
  (not (<= (+ (Seq_length $t@2@01) (* -1::Int (Seq_add 0::Int (Seq_length $t@2@01)))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[decide-and-or] #4046 #2972
[push] 5
[assign] #2972 decision axiom
[mk-app] #1577 Seq<Int>!val!0
[mk-app] #4603 $Ref!val!0
[mk-app] #1578 $Ref!val!1
[mk-app] #4602 Ptr32!val!0
[mk-app] #2994 Ptr32!val!1
[mk-app] #2993 Seq<Int>!val!1
[mk-app] #1579 Seq<Int>!val!2
[mk-app] #2995 Seq<Int>!val!3
[mk-app] #2996 Int
[attach-meaning] #2996 arith 4680
[attach-meaning] #176 arith (- 1)
[pop] 3 6
[attach-enode] #176 0
[attach-enode] #4164 0
[attach-enode] #4368 0
[pop] 1 3
[push] 2
[mk-app] #3418 address<Int> #1580
[mk-app] #4273 mod #3418 #1507
[mk-app] #3379 = #4273 #36
[mk-app] #3380 not #3379
[mk-proof] #3231 asserted #3380
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3379 #2
[mk-proof] #4157 iff-false #3231 #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3379 #2
[mk-proof] #4157 iff-false #3231 #4154
[mk-app] #4154 ~ #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 rewrite #4154
[mk-proof] #3381 mp #3231 #4157 #3380
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[mk-app] #4154 = #3380 #3380
[mk-proof] #4157 refl #4154
[attach-enode] #3418 0
[attach-enode] #1507 0
[attach-enode] #4273 0
[attach-enode] #3379 0
[mk-app] #4154 <= #4273 #36
[mk-app] #4157 >= #4273 #36
[assign] (not #3379) justification -1: 
[mk-app] #3381 div #3418 #1507
[mk-app] #3421 < #1507 #36
[mk-app] #3519 - #36 #1507
[mk-app] #3540 if #3421 #3519 #1507
[mk-app] #3541 - #3540 #151
[inst-discovered] theory-solving 0x0 arith# ; #3421
[mk-app] #3337 = #3421 #4256
[mk-proof] #3939 rewrite #3337
[instance] 0x0 #3337
[end-of-instance]
[mk-app] #3937 = #3421 #2
[mk-proof] #3938 trans #3939 #3297 #3937
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3519
[mk-app] #3802 = #3519 #4219
[mk-proof] #3015 rewrite #3802
[instance] 0x0 #3802
[end-of-instance]
[mk-app] #3444 = #3519 #1527
[mk-proof] #3757 trans #3015 #3221 #3444
[mk-app] #3934 if #2 #1527 #1507
[mk-app] #3526 = #3540 #3934
[mk-proof] #4581 monotonicity #3938 #3757 #3526
[inst-discovered] theory-solving 0x0 arith# ; #3934
[mk-app] #4213 = #3934 #1507
[mk-proof] #2382 rewrite #4213
[instance] 0x0 #4213
[end-of-instance]
[mk-app] #2961 = #3540 #1507
[mk-proof] #2962 trans #4581 #2382 #2961
[mk-app] #4166 - #1507 #151
[mk-app] #3420 = #3541 #4166
[mk-proof] #3529 monotonicity #2962 #3420
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #4166
[mk-app] #3940 = #4166 #3169
[mk-proof] #3804 rewrite #3940
[instance] 0x0 #3940
[end-of-instance]
[mk-app] #3524 = #3541 #3169
[mk-proof] #4399 trans #3529 #3804 #3524
[mk-app] #3443 = #3541 #4134
[mk-proof] #4088 trans #4399 #3132 #3443
[mk-app] #4377 = #1507 #36
[mk-app] #3415 * #1507 #3381
[mk-app] #3539 + #3415 #4273
[mk-app] #4488 = #3539 #3418
[mk-app] #4380 <= #4273 #4134
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4377
[mk-app] #3421 = #4377 #2
[mk-proof] #3337 rewrite #3421
[instance] 0x0 #3421
[end-of-instance]
[attach-enode] #3381 0
[attach-enode] #3415 0
[attach-enode] #3539 0
[attach-enode] #4488 0
[mk-app] #3939 or #4377 #4488
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3939
[assign] #4488 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4377
[mk-app] #3421 = #4377 #2
[mk-proof] #3337 rewrite #3421
[instance] 0x0 #3421
[end-of-instance]
[attach-enode] #4157 0
[mk-app] #3939 or #4377 #4157
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3939
[assign] #4157 justification -1: true
[end-of-instance]
[attach-meaning] #1527 arith (- 4)
[inst-discovered] theory-solving 0x0 arith# ; #4377
[mk-app] #3421 = #4377 #2
[mk-proof] #3337 rewrite #3421
[instance] 0x0 #3421
[end-of-instance]
[attach-enode] #4380 0
[mk-app] #3939 or #4377 #4380
[inst-discovered] theory-solving 0x0 arith#
[instance] 0x0 #3939
[assign] #4380 justification -1: true
[end-of-instance]
[mk-app] #3939 = #3379 #2
[mk-proof] #3937 iff-false #3231 #3939
[assign] (not #4154) clause (not p81) p80 (not p82)
  (not (<= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 
  (= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int) 
  (not (>= (mod (address<Int> idx_zero@6@01) 4::Int) 0::Int)) 

[new-match] 0x12c06a8b0 #1546 #1510 #36 #36 #1567 ; #3418 (#1580 #1581) #3418 (#1580 #1581) (#1567 #1567) (#1567 #1567)
[mk-app] #3938 + #36 #36 #3536 #3303
[mk-app] #3519 = #3753 #3938
[mk-proof] #3802 monotonicity #4242 #4151 #3519
[inst-discovered] theory-solving 0x0 arith# ; #3938
[mk-app] #4377 = #3938 #36
[mk-proof] #3421 rewrite #4377
[instance] 0x0 #4377
[end-of-instance]
[mk-proof] #3337 trans #3802 #3421 #3756
[mk-app] #3015 = #36 #36
[mk-app] #3444 = #3756 #3015
[mk-proof] #3757 monotonicity #3337 #3444
[inst-discovered] theory-solving 0x0 arith# ; #3015
[mk-app] #3540 = #3015 #1
[mk-proof] #3934 rewrite #3540
[instance] 0x0 #3540
[end-of-instance]
[mk-app] #3526 = #3756 #1
[mk-proof] #4581 trans #3757 #3934 #3526
[instance] 0x12c06a8b0 #4581 ; 0
[end-of-instance]
[push] 3
[inst-discovered] theory-solving 0x0 arith# ; #3430
[instance] 0x0 #3438
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3006
[instance] 0x0 #3450
[end-of-instance]
[begin-check] 4
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3695 #2
[mk-proof] #3519 iff-false #3016 #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3695 #2
[mk-proof] #3519 iff-false #3016 #3938
[mk-app] #3938 ~ #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 rewrite #3938
[mk-proof] #3802 mp #3016 #3519 #3010
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[mk-app] #3938 = #3010 #3010
[mk-proof] #3519 refl #3938
[attach-enode] #3693 0
[attach-enode] #176 0
[attach-enode] #3230 0
[attach-enode] #4639 0
[attach-enode] #3695 0
[assign] (not #3695) justification -1: 
[mk-app] #3938 = #3695 #2
[mk-proof] #3519 iff-false #3016 #3938
[new-match] 0x15c86f150 #2741 #167 #2315 #2210 ; #3693 (#2209 #2211)
[new-match] 0x15c86f188 #124 #118 #2209 ; #3693
[new-match] 0x15c86f1b8 #143 #118 #2209 ; #3693
[new-match] 0x15c86f1e8 #124 #118 #2210 ; #4466
[new-match] 0x15c86f218 #143 #118 #2210 ; #4466
[inst-discovered] theory-solving 0x0 basic# ; #3275
[instance] 0x0 #4611
[end-of-instance]
[instance] 0x15c86f150 #3429 ; 1
[attach-enode] #4057 1
[attach-enode] #4021 1
[attach-enode] #3269 1
[attach-enode] #3431 1
[end-of-instance]
[mk-app] #4390 >= #4057 #36
[mk-app] #3755 = #4390 #4390
[mk-proof] #3754 refl #3755
[mk-app] #3532 or #1568 #4390
[mk-proof] #3422 quant-inst #3532
[instance] 0x15c86f188 #3422 ; 1
[assign] #4390 justification -1: p13
[end-of-instance]
[mk-app] #3755 not #3896
[mk-app] #3754 or #3755 #4397
[mk-app] #3005 = #3754 #3754
[mk-proof] #3058 refl #3005
[mk-app] #3542 or #2378 #3755 #4397
[mk-app] #3753 or #2378 #3754
[mk-proof] #3756 quant-inst #3753
[mk-app] #3802 = #3753 #3542
[mk-proof] #4377 rewrite #3802
[mk-proof] #3421 mp #3756 #4377 #3542
[instance] 0x15c86f1b8 #3756 ; 1
[attach-enode] #3896 1
[mk-app] #3337 <= #4057 #36
[attach-enode] #4397 1
[end-of-instance]
[mk-app] #3005 = #3261 #3261
[mk-proof] #3058 refl #3005
[instance] 0x15c86f1e8 #4406 ; 3
[assign] #3261 justification -1: p13
[end-of-instance]
[mk-app] #3005 or #3257 #2205
[mk-app] #3058 = #3005 #3005
[mk-proof] #3015 refl #3058
[mk-app] #3444 or #2378 #3257 #2205
[mk-app] #3757 or #2378 #3005
[mk-proof] #3540 quant-inst #3757
[mk-app] #3934 = #3757 #3444
[mk-proof] #3526 rewrite #3934
[mk-proof] #4581 mp #3540 #3526 #3444
[instance] 0x15c86f218 #3540 ; 3
[attach-enode] #3525 3
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[assign] #3011 justification -1: p62
[attach-enode] #3011 0
[attach-enode] #3012 0
[assign] #3268 justification -1: p98
[assign] #2220 justification -1: p98
[decide-and-or] #2318 #2195
[push] 4
[assign] (not #2208) decision axiom
[decide-and-or] #2199 #2200
[push] 5
[assign] (not #2205) decision axiom
[assign] (not #4422) clause (not p79) p68 p66
  (not (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int)))) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] #3431 clause p88 p68 p66
  (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 

[assign] (not #3525) clause (not p96) p68
  (not (= (Seq_length $t@2@01) 0::Int)) 
  (= $t@2@01 Seq_empty) 

[assign] #4447 clause p77 p79
  (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int)) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #4469 clause p78 p79
  (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int) 
  (or (not (= (Seq_index (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_add 0::Int (Seq_length $t@2@01))) (Seq_index (Seq_singleton 0::Int) 0::Int))) (not (= (Seq_sub (Seq_add 0::Int (Seq_length $t@2@01)) (Seq_length $t@2@01)) 0::Int))) 

[assign] #3898 clause p89 (not p88)
  (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 

[assign] #4396 clause p90 (not p88)
  (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 

[assign] (not #3267) clause (not p97) p96
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[assign] #3436 clause p87 (not p89) (not p75) (not p100)
  (>= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length $t@2@01))) 1::Int) 
  (not (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 
  (not (>= (Seq_length (Seq_singleton 0::Int)) 1::Int)) 
  (not (>= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 

[assign] #3439 clause p86 (not p90) (not p74) (not p99)
  (<= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length $t@2@01))) 1::Int) 
  (not (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 
  (not (<= (Seq_length (Seq_singleton 0::Int)) 1::Int)) 
  (not (<= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 

[assign] (not #3337) clause (not p93) (not p89) (not p63) p97
  (not (<= (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))) 0::Int)) 
  (not (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int)) 
  (not (>= (Seq_length (Seq_singleton 0::Int)) 0::Int)) 
  (<= (Seq_length $t@2@01) 0::Int) 

[eq-expl] #4467 root
[new-match] 0x15c870080 #263 #246 #4466 #4467 ; #4468
[new-match] 0x15c8700b8 #1696 #1173 #4467 #2211 ; #4475
[new-match] 0x15c8700f0 #1939 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x15c870130 #2739 #283 #4467 #2315 #2210 ; #4475 (#2211 #2211)
[new-match] 0x15c870170 #237 #229 #4466 #36 ; #4467
[mk-app] #3058 * #176 #4468
[mk-app] #3015 + #4467 #3230 #3058
[mk-app] #4213 = #3015 #36
[mk-app] #2382 + #3230 #4467 #3058
[inst-discovered] theory-solving 0x0 arith# ; #3015
[mk-app] #2961 = #3015 #2382
[mk-proof] #2962 rewrite #2961
[instance] 0x0 #2961
[end-of-instance]
[mk-app] #3541 = #2382 #36
[mk-app] #4166 = #4213 #3541
[mk-proof] #3420 monotonicity #2962 #4166
[attach-meaning] #176 arith (- 1)
[mk-app] #3529 + #4466 #4164 #4468
[mk-app] #3940 = #3529 #36
[inst-discovered] theory-solving 0x0 arith# ; #3541
[mk-app] #3804 = #3541 #3940
[mk-proof] #3524 rewrite #3804
[instance] 0x0 #3804
[end-of-instance]
[mk-app] #4399 = #4213 #3940
[mk-proof] #3443 trans #3420 #3524 #4399
[mk-app] #4088 not #263
[mk-app] #4282 or #4088 #3940
[mk-app] #3423 or #4088 #4213
[mk-proof] #3424 quant-inst #3423
[mk-app] #3425 = #3423 #4282
[mk-proof] #4485 monotonicity #3443 #3425
[mk-app] #4486 = #4282 #4282
[mk-proof] #4489 rewrite #4486
[mk-proof] #4165 trans #4485 #4489 #3425
[mk-proof] #4052 mp #3424 #4165 #4282
[instance] 0x15c870080 #3424 ; 3
[attach-enode] #4164 3
[attach-enode] #3529 3
[attach-enode] #3940 3
[mk-app] #3935 <= #3529 #36
[mk-app] #4046 >= #3529 #36
[assign] #3940 justification -1: p21
[end-of-instance]
[mk-app] #3936 or #2965 #2967 #2972
[mk-app] #3538 or #3049 #2967 #2972
[mk-app] #4274 = #3936 #3538
[mk-proof] #3093 monotonicity #3053 #4274
[mk-app] #3094 or #2967 #2972 #3049
[inst-discovered] theory-solving 0x0 basic# ; #3538
[mk-app] #3523 = #3538 #3094
[mk-proof] #4492 rewrite #3523
[instance] 0x0 #3523
[end-of-instance]
[mk-app] #2998 = #3936 #3094
[mk-proof] #3858 trans #3093 #4492 #2998
[mk-app] #4387 or #4481 #2967 #2972 #3049
[mk-app] #3059 or #4481 #3936
[mk-proof] #3174 quant-inst #3059
[mk-app] #3183 or #4481 #3094
[mk-app] #3133 = #3059 #3183
[mk-proof] #4276 monotonicity #3858 #3133
[mk-app] #4075 = #3183 #4387
[mk-proof] #2999 rewrite #4075
[mk-app] #3533 = #3059 #4387
[mk-proof] #3000 trans #4276 #2999 #3533
[mk-proof] #3534 mp #3174 #3000 #4387
[instance] 0x15c8700b8 #3174 ; 3
[attach-enode] #2972 3
[attach-enode] #4590 3
[end-of-instance]
[mk-app] #3001 or #2208 #2205 #3860 #3862 #2967
[mk-app] #3002 or #2208 #2205 #3860 #4369 #2967
[mk-app] #3003 = #3001 #3002
[mk-proof] #3004 monotonicity #4376 #3003
[mk-app] #4638 or #2205 #2208 #2967 #3860 #4369
[inst-discovered] theory-solving 0x0 basic# ; #3002
[mk-app] #3892 = #3002 #4638
[mk-proof] #3894 rewrite #3892
[instance] 0x0 #3892
[end-of-instance]
[mk-app] #3446 = #3001 #4638
[mk-proof] #3256 trans #3004 #3894 #3446
[mk-app] #3017 not #1939
[mk-app] #3893 or #3017 #2205 #2208 #2967 #3860 #4369
[mk-app] #3448 or #3017 #3001
[mk-proof] #3895 quant-inst #3448
[mk-app] #4545 or #3017 #4638
[mk-app] #3690 = #3448 #4545
[mk-proof] #3691 monotonicity #3256 #3690
[mk-app] #3692 = #4545 #3893
[mk-proof] #3758 rewrite #3692
[mk-app] #3255 = #3448 #3893
[mk-proof] #3449 trans #3691 #3758 #3255
[mk-proof] #3260 mp #3895 #3449 #3893
[instance] 0x15c8700f0 #3895 ; 3
[attach-enode] #3859 3
[attach-enode] #3860 3
[attach-enode] #4368 3
[end-of-instance]
[mk-app] #4402 + #36 #4466 #4164
[mk-app] #3537 = #4402 #36
[inst-discovered] theory-solving 0x0 arith# ; #4402
[mk-app] #4074 = #4402 #4368
[mk-proof] #4403 rewrite #4074
[instance] 0x0 #4074
[end-of-instance]
[mk-app] #4404 = #4368 #36
[mk-app] #3416 = #3537 #4404
[mk-proof] #4379 monotonicity #4403 #3416
[mk-app] #3013 not #237
[mk-app] #3014 or #3013 #4404
[mk-app] #3258 or #3013 #3537
[mk-proof] #3262 quant-inst #3258
[mk-app] #3272 = #3258 #3014
[mk-proof] #3259 monotonicity #4379 #3272
[mk-app] #3008 = #3014 #3014
[mk-proof] #3882 rewrite #3008
[mk-proof] #3883 trans #3259 #3882 #3272
[mk-proof] #3878 mp #3262 #3883 #3014
[instance] 0x15c870170 #3262 ; 3
[attach-enode] #4404 3
[mk-app] #3884 >= #4368 #36
[assign] #4404 justification -1: p20
[end-of-instance]
[resolve-process] true
[resolve-lit] 0 (not #3439)
[resolve-lit] 0 (not #3436)
[resolve-process] (not #3439)
[resolve-lit] 0 (not #4396)
[resolve-process] (not #3436)
[resolve-lit] 0 (not #3898)
[resolve-process] (not #4396)
[resolve-lit] 0 (not #3431)
[resolve-process] (not #3898)
[conflict] (not #3431)
[pop] 2 6
[assign] (not #3431) justification -1: 
[decide-and-or] #2318 #2195
[push] 4
[assign] (not #2208) decision axiom
[assign] #2205 clause p68 p66 p88
  (= $t@2@01 Seq_empty) 
  (= (Seq_singleton 0::Int) Seq_empty) 
  (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 

[assign] #2198 clause p69 (not p68) (not p70)
  (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int)) 
  (not (= $t@2@01 Seq_empty)) 
  (not (or (not (= $t@2@01 Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) (Seq_singleton 0::Int)))) 

[assign] #3525 justification -1: p14 p68
[assign] (not #4397) justification -1: (not p66) p69
[assign] (not #2196) justification -1: (not p66) p69 p68
[assign] (not #3896) justification -1: (not p64) p62 p69 p62
[mk-app] #4088 = #131 #4466
[attach-meaning] #176 arith (- 1)
[mk-app] #3423 + #131 #3230
[mk-app] #3424 <= #3423 #36
[mk-app] #2382 >= #3423 #36
[assign] #4088 justification -1: p68
[attach-enode] #4088 0
[attach-enode] #3423 0
[assign] #3424 justification -1: p101
[assign] #2382 justification -1: p101
[mk-app] #2961 = #2216 #3693
[attach-meaning] #176 arith (- 1)
[mk-app] #2962 * #176 #3693
[mk-app] #3541 + #2216 #2962
[mk-app] #4166 <= #3541 #36
[mk-app] #3420 >= #3541 #36
[assign] #2961 justification -1: p62 p69
[attach-enode] #2961 0
[attach-enode] #2962 0
[attach-enode] #3541 0
[assign] #4166 justification -1: p104
[assign] #3420 justification -1: p104
[eq-expl] #2210 lit #2205 ; #130
[eq-expl] #2315 lit #2198 ; #2211
[new-match] 0x15c870710 #1939 #283 #36 #2315 #2210 ; #2321 (#2315 #2211)
[new-match] 0x15c870750 #2739 #283 #36 #2315 #2210 ; #2321 (#2315 #2211)
[assign] #3267 clause p97 (not p96)
  (<= (Seq_length $t@2@01) 0::Int) 
  (not (= (Seq_length $t@2@01) 0::Int)) 

[assign] (not #3337) clause (not p93) p92
  (not (<= (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))) 0::Int)) 
  (= (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))) 0::Int) 

[assign] #3898 clause p89 (not p97) (not p99) (not p105)
  (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (not (<= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 
  (not (<= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length seq@8@01))) 0::Int)) 

[assign] #4396 clause p90 (not p106) (not p100) (not p95)
  (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 
  (not (>= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length seq@8@01))) 0::Int)) 
  (not (>= (+ (Seq_length seq@8@01) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int))))) 0::Int)) 
  (not (>= (Seq_length $t@2@01) 0::Int)) 

[resolve-process] true
[resolve-lit] 0 (not #4396)
[resolve-lit] 0 (not #3898)
[resolve-process] (not #4396)
[resolve-lit] 0 (not #3420)
[resolve-process] (not #3898)
[resolve-lit] 0 (not #3267)
[resolve-lit] 0 (not #4166)
[resolve-process] (not #3267)
[resolve-lit] 0 (not #3525)
[resolve-process] (not #3420)
[resolve-lit] 0 (not #2961)
[resolve-process] (not #4166)
[resolve-process] (not #2961)
[resolve-lit] 0 (not #2198)
[resolve-process] (not #3525)
[resolve-lit] 0 (not #2205)
[resolve-process] (not #2198)
[mk-proof] #3529 unit-resolution #2186 #1963 #2193
[mk-proof] #3940 unit-resolution #2362 #3529 #2199
[mk-proof] #3804 hypothesis #2205
[mk-proof] #3524 unit-resolution #2181 #3804 #3940 #2198
[mk-app] #4399 = #2315 #2211
[mk-proof] #3443 symm #3524 #4399
[mk-app] #4282 = #2209 #2315
[mk-proof] #3425 trans* #1553 #3524 #4282
[mk-app] #4485 = #3693 #2216
[mk-proof] #4486 monotonicity #3425 #4485
[mk-proof] #4489 symm #4486 #2961
[mk-app] #4165 not #2961
[mk-app] #4052 or #4165 #4166
[mk-proof] #3059 th-lemma #4052
[mk-proof] #3174 unit-resolution #3059 #4489 #4166
[mk-app] #3538 = #4466 #131
[mk-proof] #4274 monotonicity #3804 #3538
[mk-proof] #3093 trans* #4274 #133 #3525
[mk-app] #3094 or #3257 #3267
[mk-proof] #3523 th-lemma #3094
[mk-proof] #4492 unit-resolution #3523 #3093 #3267
[mk-app] #2998 not #4166
[mk-app] #3858 not #3267
[mk-app] #3183 or #3898 #2998 #3130 #3858
[mk-proof] #3133 th-lemma #3183
[mk-proof] #4276 unit-resolution #3133 #4492 #3123 #3174 #3898
[mk-proof] #4387 unit-resolution #4406 #2902 #3261
[mk-app] #4075 or #4165 #3420
[mk-proof] #2999 th-lemma #4075
[mk-proof] #3533 unit-resolution #2999 #4489 #3420
[mk-app] #3000 not #3420
[mk-app] #3534 not #3261
[mk-app] #3017 or #4396 #3000 #3115 #3534
[mk-proof] #3448 th-lemma #3017
[mk-proof] #3895 unit-resolution #3448 #3533 #3659 #4387 #4396
[mk-app] #3002 or #3431 #3117 #3135
[mk-proof] #3003 th-lemma #3002
[mk-proof] #3004 unit-resolution #3003 #3895 #4276 #3146 #2
[mk-proof] #4638 lemma #3004 #2200
[conflict] (not #2205)
[pop] 1 5
[attach-enode] #2962 0
[attach-enode] #3541 0
[assign] (not #2205) justification -1: 
[assign] #2208 clause p66 p68 p88
  (= (Seq_singleton 0::Int) Seq_empty) 
  (= $t@2@01 Seq_empty) 
  (= (+ (Seq_length (Seq_singleton 0::Int)) (* -1::Int (Seq_length (Seq_append $t@2@01 (Seq_singleton 0::Int)))) (Seq_length $t@2@01)) 0::Int) 

[assign] (not #3525) clause (not p96) p68
  (not (= (Seq_length $t@2@01) 0::Int)) 
  (= $t@2@01 Seq_empty) 

[assign] #2196 clause p71 (not p66) (not p72)
  (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01) 
  (not (= (Seq_singleton 0::Int) Seq_empty)) 
  (not (or (not (= (Seq_singleton 0::Int) Seq_empty)) (= (Seq_append $t@2@01 (Seq_singleton 0::Int)) $t@2@01))) 

[assign] (not #3267) clause (not p97) p96
  (not (<= (Seq_length $t@2@01) 0::Int)) 
  (= (Seq_length $t@2@01) 0::Int) 

[mk-proof] #4088 unit-resolution #3445 #2753 #3759
[mk-proof] #3423 unit-resolution #4088 #4638 #3146 #2208
[mk-app] #3424 = #151 #2216
[mk-proof] #2382 symm #2366 #3424
[mk-app] #4399 = #2216 #131
[mk-proof] #3443 monotonicity #3423 #4399
[mk-app] #3892 = #151 #36
[mk-proof] #3894 trans* #2382 #3443 #133 #3892
[mk-app] #3446 = #3892 #2
[mk-proof] #3256 rewrite #3446
[mk-proof] #4545 mp #3894 #3256 #2
[pop] 1 4
[mk-proof] #3938 asserted #3803
[inst-discovered] theory-solving 0x0 arith# ; #3430
[instance] 0x0 #3438
[end-of-instance]
[attach-meaning] #176 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #3006
[instance] 0x0 #3450
[end-of-instance]
