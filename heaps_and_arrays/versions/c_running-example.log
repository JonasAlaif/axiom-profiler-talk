[tool-version] Z3 4.8.7
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #3 pi
[mk-app] #4 euler
[mk-var] datatype#0 0
[mk-var] datatype#1 1
[mk-app] datatype#2 insert datatype#0 datatype#1
[mk-app] datatype#3 pattern datatype#2
[mk-app] datatype#4 head datatype#2
[mk-app] datatype#5 = datatype#0 datatype#4
[mk-quant] datatype#6 constructor_accessor_axiom 2 datatype#3 datatype#5
[attach-var-names] datatype#6 (;k!0) (;List)
[mk-app] datatype#7 tail datatype#2
[mk-app] datatype#8 = datatype#1 datatype#7
[mk-quant] datatype#9 constructor_accessor_axiom 2 datatype#3 datatype#8
[attach-var-names] datatype#9 (;k!0) (;List)
[mk-app] #5 bv
[attach-meaning] #5 bv #b1
[mk-app] #6 bv
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[mk-var] #7 0
[mk-var] #8 1
[mk-var] #9 2
[mk-var] #10 3
[mk-var] #11 4
[mk-var] #12 5
[mk-var] #13 6
[mk-var] #14 7
[mk-var] #15 8
[mk-var] #16 9
[mk-var] #17 10
[mk-var] #18 11
[mk-var] #19 12
[mk-var] #20 13
[mk-var] #21 14
[mk-app] #22 + #15 #13
[mk-proof] #23 true-axiom #1
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[mk-var] #23 0
[mk-var] #15 1
[mk-var] #13 2
[mk-var] #22 3
[mk-var] #7 4
[mk-var] #21 5
[mk-var] #20 6
[mk-var] #19 7
[mk-var] #18 8
[mk-var] #17 9
[mk-var] #16 10
[mk-var] #14 11
[mk-var] #12 12
[mk-var] #11 13
[mk-var] #10 14
[mk-app] #9 + #18 #20
[mk-proof] #8 true-axiom #1
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-var] #24 1
[mk-var] #25 0
[mk-app] #26 slot #24 #25
[mk-app] #27 slot_inverse #24 #26
[mk-app] #28 = #25 #27
[mk-app] #29 pattern #26
[mk-quant] #30 injectivity 2 #29 #28
[attach-var-names] #30 (|i| ; |Int|) (|slice| ; |Slice|)
[mk-proof] #31 asserted #30
[mk-app] #32 = #30 #30
[mk-proof] #33 refl #32
[mk-app] #32 next #26
[mk-app] #33 Int
[attach-meaning] #33 arith 1
[mk-app] #34 + #25 #33
[mk-app] #35 slot #24 #34
[mk-app] #36 = #32 #35
[mk-app] #37 pattern #32
[mk-quant] #38 next_def 2 #37 #36
[attach-var-names] #38 (|i| ; |Int|) (|slice| ; |Slice|)
[mk-proof] #39 asserted #38
[mk-app] #40 + #33 #25
[inst-discovered] theory-solving 0x0 arith# ; #34
[mk-app] #41 = #34 #40
[mk-proof] #42 rewrite #41
[instance] 0x0 #41
[end-of-instance]
[mk-app] #43 slot #24 #40
[mk-app] #44 = #35 #43
[mk-proof] #45 monotonicity #42 #44
[mk-app] #46 = #32 #43
[mk-app] #47 = #36 #46
[mk-proof] #48 monotonicity #45 #47
[mk-quant] #49 next_def 2 #37 #46
[attach-var-names] #49 (|i| ; |Int|) (|slice| ; |Slice|)
[mk-lambda] #50 null 2 #48
[mk-proof] #51 proof-bind #50
[mk-app] #52 = #38 #49
[mk-proof] #53 quant-intro #51 #52
[mk-proof] #54 mp #39 #53 #49
[mk-app] #55 Int
[attach-meaning] #55 arith 0
[mk-app] #56 < #25 #55
[mk-app] #57 len
[mk-app] #58 >= #25 #57
[mk-app] #59 heap
[mk-app] #60 s
[mk-app] #61 slot #60 #25
[mk-app] #62 lookup #59 #61
[mk-app] #63 next #61
[mk-app] #64 lookup #59 #63
[mk-app] #65 <= #62 #64
[mk-app] #66 or #56 #58 #65
[mk-app] #67 pattern #62
[mk-quant] #68 sortedness 1 #67 #66
[attach-var-names] #68 (|i| ; |Int|)
[mk-proof] #69 asserted #68
[mk-app] #70 <= #55 #25
[mk-app] #71 not #70
[inst-discovered] theory-solving 0x0 arith# ; #56
[mk-app] #72 = #56 #71
[mk-proof] #73 rewrite #72
[instance] 0x0 #72
[end-of-instance]
[mk-app] #74 Int
[attach-meaning] #74 arith (- 1)
[mk-app] #75 * #74 #25
[mk-app] #76 >= #25 #55
[inst-discovered] theory-solving 0x0 arith# ; #70
[mk-app] #74 = #70 #76
[mk-proof] #75 rewrite #74
[instance] 0x0 #74
[end-of-instance]
[mk-app] #77 not #76
[mk-app] #78 = #71 #77
[mk-proof] #79 monotonicity #75 #78
[mk-app] #80 = #56 #77
[mk-proof] #81 trans #73 #79 #80
[mk-app] #82 Int
[attach-meaning] #82 arith (- 1)
[mk-app] #83 * #82 #57
[mk-app] #84 + #25 #83
[mk-app] #85 >= #84 #55
[inst-discovered] theory-solving 0x0 arith# ; #58
[mk-app] #86 = #58 #85
[mk-proof] #87 rewrite #86
[instance] 0x0 #86
[end-of-instance]
[attach-meaning] #82 arith (- 1)
[mk-app] #88 * #82 #64
[mk-app] #89 + #62 #88
[mk-app] #90 <= #89 #55
[inst-discovered] theory-solving 0x0 arith# ; #65
[mk-app] #91 = #65 #90
[mk-proof] #92 rewrite #91
[instance] 0x0 #91
[end-of-instance]
[mk-app] #93 or #77 #85 #90
[mk-app] #94 = #66 #93
[mk-proof] #95 monotonicity #81 #87 #92 #94
[mk-quant] #96 sortedness 1 #67 #93
[attach-var-names] #96 (|i| ; |Int|)
[mk-lambda] #97 null 1 #95
[mk-proof] #98 proof-bind #97
[mk-app] #99 = #68 #96
[mk-proof] #100 quant-intro #98 #99
[mk-proof] #101 mp #69 #100 #96
[mk-app] #102 idx
[mk-app] #103 >= #102 #55
[mk-app] #104 Int
[attach-meaning] #104 arith 100
[mk-app] #105 + #102 #104
[mk-app] #106 < #105 #57
[mk-app] #107 and #103 #106
[mk-proof] #108 asserted #107
[attach-meaning] #104 arith 100
[mk-app] #109 + #104 #102
[inst-discovered] theory-solving 0x0 arith# ; #105
[mk-app] #110 = #105 #109
[mk-proof] #111 rewrite #110
[instance] 0x0 #110
[end-of-instance]
[mk-app] #112 < #109 #57
[mk-app] #113 = #106 #112
[mk-proof] #114 monotonicity #111 #113
[mk-app] #115 <= #57 #109
[mk-app] #116 not #115
[inst-discovered] theory-solving 0x0 arith# ; #112
[mk-app] #117 = #112 #116
[mk-proof] #118 rewrite #117
[instance] 0x0 #117
[end-of-instance]
[mk-app] #119 = #106 #116
[mk-proof] #120 trans #114 #118 #119
[attach-meaning] #82 arith (- 1)
[mk-app] #121 * #82 #102
[attach-meaning] #104 arith 100
[mk-app] #122 + #57 #121
[mk-app] #123 <= #122 #104
[inst-discovered] theory-solving 0x0 arith# ; #115
[mk-app] #124 = #115 #123
[mk-proof] #125 rewrite #124
[instance] 0x0 #124
[end-of-instance]
[mk-app] #126 not #123
[mk-app] #127 = #116 #126
[mk-proof] #128 monotonicity #125 #127
[mk-app] #129 = #106 #126
[mk-proof] #130 trans #120 #128 #129
[mk-app] #131 and #103 #126
[mk-app] #132 = #107 #131
[mk-proof] #133 monotonicity #130 #132
[mk-proof] #134 mp #108 #133 #131
[mk-proof] #135 and-elim #134 #103
[mk-proof] #136 and-elim #134 #126
[mk-app] #137 slot #60 #102
[mk-app] #138 lookup #59 #137
[mk-app] #139 next #137
[mk-app] #140 lookup #59 #139
[mk-app] #141 < #138 #140
[mk-app] #142 not #141
[mk-proof] #143 asserted #142
[mk-app] #144 <= #140 #138
[mk-app] #145 not #144
[inst-discovered] theory-solving 0x0 arith# ; #141
[mk-app] #146 = #141 #145
[mk-proof] #147 rewrite #146
[instance] 0x0 #146
[end-of-instance]
[attach-meaning] #82 arith (- 1)
[mk-app] #148 * #82 #138
[mk-app] #149 + #148 #140
[attach-meaning] #82 arith (- 1)
[mk-app] #150 * #82 #140
[mk-app] #151 + #138 #150
[mk-app] #148 >= #151 #55
[inst-discovered] theory-solving 0x0 arith# ; #144
[mk-app] #149 = #144 #148
[mk-proof] #152 rewrite #149
[instance] 0x0 #149
[end-of-instance]
[mk-app] #153 not #148
[mk-app] #154 = #145 #153
[mk-proof] #155 monotonicity #152 #154
[mk-app] #156 = #141 #153
[mk-proof] #157 trans #147 #155 #156
[mk-app] #158 not #153
[mk-app] #159 = #142 #158
[mk-proof] #160 monotonicity #157 #159
[inst-discovered] theory-solving 0x0 basic# ; #158
[mk-app] #161 = #158 #148
[mk-proof] #162 rewrite #161
[instance] 0x0 #161
[end-of-instance]
[mk-app] #163 = #142 #148
[mk-proof] #164 trans #160 #162 #163
[mk-proof] #165 mp #143 #164 #148
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-proof] #166 and-elim #108 #103
[mk-proof] #167 and-elim #108 #106
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-app] #168 = #30 #30
[mk-proof] #169 refl #168
[inst-discovered] theory-solving 0x0 arith# ; #34
[instance] 0x0 #41
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #56
[instance] 0x0 #72
[end-of-instance]
[mk-app] #168 or #71 #58 #65
[mk-app] #169 = #66 #168
[mk-proof] #170 monotonicity #73 #169
[mk-quant] #171 sortedness 1 #67 #168
[attach-var-names] #171 (|i| ; |Int|)
[mk-lambda] #172 null 1 #170
[mk-proof] #173 proof-bind #172
[mk-app] #174 = #68 #171
[mk-proof] #175 quant-intro #173 #174
[mk-proof] #176 mp #69 #175 #171
[mk-app] #177 = #103 #103
[mk-proof] #178 refl #177
[attach-meaning] #104 arith 100
[inst-discovered] theory-solving 0x0 arith# ; #105
[instance] 0x0 #110
[end-of-instance]
[inst-discovered] theory-solving 0x0 arith# ; #112
[instance] 0x0 #117
[end-of-instance]
[attach-meaning] #104 arith 100
[mk-proof] #177 mp #167 #120 #116
[inst-discovered] theory-solving 0x0 arith# ; #141
[instance] 0x0 #146
[end-of-instance]
[mk-app] #178 not #145
[mk-app] #179 = #142 #178
[mk-proof] #180 monotonicity #147 #179
[inst-discovered] theory-solving 0x0 basic# ; #178
[mk-app] #181 = #178 #144
[mk-proof] #182 rewrite #181
[instance] 0x0 #181
[end-of-instance]
[mk-app] #183 = #142 #144
[mk-proof] #184 trans #180 #182 #183
[mk-proof] #185 mp #143 #184 #144
[mk-app] #186 = #30 #30
[mk-proof] #187 refl #186
[mk-app] #186 = #49 #49
[mk-proof] #187 refl #186
[mk-app] #186 = #171 #171
[mk-proof] #187 refl #186
[mk-app] #186 = #103 #103
[mk-proof] #187 refl #186
[attach-meaning] #104 arith 100
[mk-app] #186 = #116 #116
[mk-proof] #187 refl #186
[mk-app] #186 = #144 #144
[mk-proof] #187 refl #186
[mk-app] #186 = #30 #30
[mk-proof] #187 refl #186
[mk-app] #186 = #49 #49
[mk-proof] #187 refl #186
[mk-app] #186 = #171 #171
[mk-proof] #187 refl #186
[mk-app] #186 = #103 #103
[mk-proof] #187 refl #186
[mk-app] #186 = #116 #116
[mk-proof] #187 refl #186
[mk-app] #186 = #144 #144
[mk-proof] #187 refl #186
[mk-app] #186 = #30 #30
[mk-proof] #187 rewrite #186
[mk-proof] #188 mp #31 #187 #30
[mk-app] #189 = #49 #49
[mk-proof] #190 rewrite #189
[mk-proof] #191 mp #54 #190 #49
[mk-app] #192 = #171 #171
[mk-proof] #193 rewrite #192
[mk-proof] #194 mp #176 #193 #171
[mk-app] #195 = #103 #103
[mk-proof] #196 rewrite #195
[mk-proof] #197 mp #166 #196 #103
[mk-app] #198 = #116 #116
[mk-proof] #199 rewrite #198
[mk-proof] #200 mp #177 #199 #116
[mk-app] #201 = #144 #144
[mk-proof] #202 rewrite #201
[mk-proof] #203 mp #185 #202 #144
[mk-proof] #204 refl #186
[inst-discovered] theory-solving 0x0 arith# ; #40
[mk-app] #204 = #40 #40
[mk-proof] #205 rewrite #204
[instance] 0x0 #204
[end-of-instance]
[mk-app] #206 = #43 #43
[mk-proof] #207 monotonicity #205 #206
[mk-app] #208 = #46 #46
[mk-proof] #209 monotonicity #207 #208
[mk-proof] #210 refl #189
[mk-proof] #210 refl #192
[mk-proof] #210 refl #195
[attach-meaning] #104 arith 100
[inst-discovered] theory-solving 0x0 arith# ; #109
[mk-app] #210 = #109 #109
[mk-proof] #211 rewrite #210
[instance] 0x0 #210
[end-of-instance]
[mk-app] #212 = #115 #115
[mk-proof] #213 monotonicity #211 #212
[attach-meaning] #104 arith 100
[mk-proof] #214 monotonicity #213 #198
[mk-proof] #215 mp #200 #214 #116
[mk-proof] #216 refl #201
[mk-proof] #204 refl #186
[mk-proof] #204 refl #189
[mk-proof] #204 refl #192
[mk-proof] #204 refl #195
[attach-meaning] #104 arith 100
[mk-proof] #204 refl #198
[mk-proof] #204 refl #201
[attach-meaning] #82 arith (- 1)
[mk-app] #204 * #82 #27
[mk-app] #205 + #25 #204
[mk-app] #206 = #205 #55
[inst-discovered] theory-solving 0x0 arith# ; #28
[mk-app] #207 = #28 #206
[mk-proof] #208 rewrite #207
[instance] 0x0 #207
[end-of-instance]
[mk-quant] #209 injectivity 2 #29 #206
[attach-var-names] #209 (|i| ; |Int|) (|slice| ; |Slice|)
[mk-lambda] #216 null 2 #208
[mk-proof] #217 proof-bind #216
[mk-app] #218 = #30 #209
[mk-proof] #219 quant-intro #217 #218
[mk-proof] #220 mp #188 #219 #209
[mk-proof] #221 refl #189
[attach-meaning] #82 arith (- 1)
[mk-app] #221 * #82 #25
[inst-discovered] theory-solving 0x0 arith# ; #70
[instance] 0x0 #74
[end-of-instance]
[attach-meaning] #82 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #58
[instance] 0x0 #86
[end-of-instance]
[attach-meaning] #82 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #65
[instance] 0x0 #91
[end-of-instance]
[mk-app] #221 = #168 #93
[mk-proof] #222 monotonicity #79 #87 #92 #221
[mk-lambda] #223 null 1 #222
[mk-proof] #224 proof-bind #223
[mk-app] #225 = #171 #96
[mk-proof] #226 quant-intro #224 #225
[mk-proof] #227 mp #194 #226 #96
[mk-proof] #228 refl #195
[attach-meaning] #82 arith (- 1)
[attach-meaning] #104 arith 100
[inst-discovered] theory-solving 0x0 arith# ; #115
[instance] 0x0 #124
[end-of-instance]
[mk-proof] #228 mp #215 #128 #126
[attach-meaning] #82 arith (- 1)
[mk-app] #229 * #82 #138
[mk-app] #230 + #140 #229
[mk-app] #231 <= #230 #55
[inst-discovered] theory-solving 0x0 arith# ; #144
[mk-app] #232 = #144 #231
[mk-proof] #233 rewrite #232
[instance] 0x0 #232
[end-of-instance]
[mk-proof] #234 mp #203 #233 #231
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-app] #235 = #209 #209
[mk-proof] #236 refl #235
[mk-proof] #235 refl #189
[mk-app] #235 = #96 #96
[mk-proof] #236 refl #235
[mk-proof] #235 refl #195
[mk-app] #235 = #126 #126
[mk-proof] #236 refl #235
[mk-app] #235 + #229 #140
[inst-discovered] theory-solving 0x0 arith# ; #230
[mk-app] #236 = #230 #235
[mk-proof] #237 rewrite #236
[instance] 0x0 #236
[end-of-instance]
[mk-app] #238 <= #235 #55
[mk-app] #239 = #231 #238
[mk-proof] #240 monotonicity #237 #239
[attach-meaning] #82 arith (- 1)
[inst-discovered] theory-solving 0x0 arith# ; #238
[mk-app] #241 = #238 #148
[mk-proof] #242 rewrite #241
[instance] 0x0 #241
[end-of-instance]
[mk-app] #243 = #231 #148
[mk-proof] #244 trans #240 #242 #243
[mk-proof] #245 mp #234 #244 #148
[begin-check] 0
[mk-app] #246 = #209 #209
[mk-proof] #247 refl #246
[mk-app] #246 = #209 #1
[mk-proof] #247 iff-true #220 #246
[mk-proof] #248 refl #189
[mk-app] #248 = #49 #1
[mk-proof] #249 iff-true #191 #248
[mk-app] #250 = #96 #96
[mk-proof] #251 refl #250
[mk-app] #250 = #96 #1
[mk-proof] #251 iff-true #227 #250
[mk-proof] #252 refl #195
[mk-app] #252 = #103 #1
[mk-proof] #253 iff-true #197 #252
[mk-app] #254 = #126 #126
[mk-proof] #255 refl #254
[mk-app] #254 = #123 #2
[mk-proof] #255 iff-false #228 #254
[mk-app] #256 = #148 #148
[mk-proof] #257 refl #256
[mk-app] #256 = #148 #1
[mk-proof] #257 iff-true #245 #256
[mk-app] #256 = #148 #148
[mk-proof] #257 refl #256
[mk-app] #256 = #148 #1
[mk-proof] #257 iff-true #245 #256
[mk-app] #254 = #126 #126
[mk-proof] #255 refl #254
[mk-app] #254 = #123 #2
[mk-proof] #255 iff-false #228 #254
[mk-proof] #252 refl #195
[mk-app] #252 = #103 #1
[mk-proof] #253 iff-true #197 #252
[mk-app] #250 = #96 #96
[mk-proof] #251 refl #250
[mk-app] #250 = #96 #1
[mk-proof] #251 iff-true #227 #250
[mk-proof] #248 refl #189
[mk-app] #248 = #49 #1
[mk-proof] #249 iff-true #191 #248
[mk-app] #246 = #209 #209
[mk-proof] #247 refl #246
[mk-app] #246 = #209 #1
[mk-proof] #247 iff-true #220 #246
[mk-app] #246 ~ #206 #206
[mk-proof] #247 refl #246
[mk-lambda] #248 null 2 #247
[mk-proof] #249 proof-bind #248
[mk-app] #250 ~ #209 #209
[mk-proof] #251 nnf-pos #249 #250
[mk-proof] #252 mp~ #220 #251 #209
[mk-app] #253 = #209 #209
[mk-proof] #254 refl #253
[mk-app] #253 ~ #46 #46
[mk-proof] #254 refl #253
[mk-lambda] #255 null 2 #254
[mk-proof] #256 proof-bind #255
[mk-app] #257 ~ #49 #49
[mk-proof] #258 nnf-pos #256 #257
[mk-proof] #259 mp~ #191 #258 #49
[mk-proof] #260 refl #189
[mk-app] #260 ~ #93 #93
[mk-proof] #261 refl #260
[mk-lambda] #262 null 1 #261
[mk-proof] #263 proof-bind #262
[mk-app] #264 ~ #96 #96
[mk-proof] #265 nnf-pos #263 #264
[mk-proof] #266 mp~ #227 #265 #96
[mk-app] #267 = #96 #96
[mk-proof] #268 refl #267
[mk-app] #267 ~ #103 #103
[mk-proof] #268 refl #267
[mk-proof] #267 refl #195
[mk-app] #267 ~ #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 = #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 ~ #148 #148
[mk-proof] #268 refl #267
[mk-app] #267 = #148 #148
[mk-proof] #268 refl #267
[mk-app] #267 = #209 #209
[mk-proof] #268 refl #267
[mk-proof] #267 refl #189
[mk-app] #267 = #96 #96
[mk-proof] #268 refl #267
[mk-proof] #267 refl #195
[mk-app] #267 = #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 = #148 #148
[mk-proof] #268 refl #267
[mk-app] #267 = #209 #209
[mk-proof] #268 refl #267
[mk-proof] #267 refl #189
[mk-app] #267 = #96 #96
[mk-proof] #268 refl #267
[mk-proof] #267 refl #195
[mk-app] #267 = #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 = #148 #148
[mk-proof] #268 refl #267
[mk-app] #267 = #209 #209
[mk-proof] #268 refl #267
[mk-proof] #267 refl #189
[mk-app] #267 = #96 #96
[mk-proof] #268 refl #267
[mk-proof] #267 refl #195
[mk-app] #267 = #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 = #148 #148
[mk-proof] #268 refl #267
[mk-app] #267 = #209 #209
[mk-proof] #268 refl #267
[mk-proof] #267 refl #189
[mk-app] #267 = #96 #96
[mk-proof] #268 refl #267
[mk-proof] #267 refl #195
[mk-app] #267 = #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 = #148 #148
[mk-proof] #268 refl #267
[mk-app] #267 = #209 #209
[mk-proof] #268 refl #267
[mk-proof] #267 refl #189
[mk-app] #267 = #96 #96
[mk-proof] #268 refl #267
[mk-proof] #267 refl #195
[mk-app] #267 = #126 #126
[mk-proof] #268 refl #267
[mk-app] #267 = #148 #148
[mk-proof] #268 refl #267
[assign] #209 justification -1: 
[assign] #49 justification -1: 
[assign] #96 justification -1: 
[attach-enode] #102 0
[assign] #103 justification -1: 
[attach-enode] #57 0
[attach-enode] #82 0
[attach-enode] #121 0
[attach-enode] #122 0
[assign] (not #123) justification -1: 
[attach-enode] #59 0
[attach-enode] #60 0
[attach-enode] #137 0
[attach-enode] #138 0
[attach-enode] #139 0
[attach-enode] #140 0
[attach-enode] #150 0
[attach-enode] #151 0
[assign] #148 justification -1: 
[mk-app] #267 = #209 #1
[mk-proof] #268 iff-true #252 #267
[mk-app] #269 = #49 #1
[mk-proof] #270 iff-true #259 #269
[mk-app] #271 = #96 #1
[mk-proof] #272 iff-true #266 #271
[mk-app] #273 = #103 #1
[mk-proof] #274 iff-true #197 #273
[mk-app] #275 = #123 #2
[mk-proof] #276 iff-false #228 #275
[mk-app] #277 = #148 #1
[mk-proof] #278 iff-true #245 #277
[eq-expl] #60 root
[eq-expl] #102 root
[new-match] 0x1259053b8 #209 #29 #102 #60 ; #137
[eq-expl] #137 root
[new-match] 0x1259053f0 #49 #37 #102 #60 ; #139 (#137 #137)
[eq-expl] #59 root
[new-match] 0x125905428 #96 #67 #102 ; #138 (#59 #59) (#137 #137) (#60 #60)
[mk-app] #279 slot_inverse #60 #137
[mk-app] #280 * #82 #279
[mk-app] #281 + #102 #280
[mk-app] #282 = #281 #55
[mk-app] #283 = #282 #282
[mk-proof] #284 refl #283
[mk-app] #285 not #209
[mk-app] #286 or #285 #282
[mk-proof] #287 quant-inst #286
[instance] 0x1259053b8 #287 ; 1
[attach-enode] #279 1
[attach-enode] #280 1
[attach-enode] #281 1
[attach-enode] #55 1
[attach-enode] #282 1
[mk-app] #288 <= #281 #55
[mk-app] #289 >= #281 #55
[assign] #282 justification -1: p1
[end-of-instance]
[mk-app] #283 + #33 #102
[mk-app] #284 slot #60 #283
[mk-app] #290 = #139 #284
[mk-app] #291 = #290 #290
[mk-proof] #292 refl #291
[mk-app] #293 not #49
[mk-app] #294 or #293 #290
[mk-proof] #295 quant-inst #294
[instance] 0x1259053f0 #295 ; 1
[attach-enode] #33 1
[attach-enode] #283 1
[attach-enode] #284 1
[attach-enode] #290 1
[assign] #290 justification -1: p2
[end-of-instance]
[mk-app] #291 not #103
[mk-app] #292 + #102 #83
[mk-app] #296 >= #292 #55
[mk-app] #297 <= #151 #55
[mk-app] #298 or #291 #296 #297
[mk-app] #299 + #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #292
[mk-app] #300 = #292 #299
[mk-proof] #301 rewrite #300
[instance] 0x0 #300
[end-of-instance]
[mk-app] #302 >= #299 #55
[mk-app] #303 = #296 #302
[mk-proof] #304 monotonicity #301 #303
[attach-meaning] #82 arith (- 1)
[mk-app] #305 <= #122 #55
[inst-discovered] theory-solving 0x0 arith# ; #302
[mk-app] #306 = #302 #305
[mk-proof] #307 rewrite #306
[instance] 0x0 #306
[end-of-instance]
[mk-app] #308 = #296 #305
[mk-proof] #309 trans #304 #307 #308
[mk-app] #310 or #291 #305 #297
[mk-app] #311 = #298 #310
[mk-proof] #312 monotonicity #309 #311
[mk-app] #313 not #96
[mk-app] #314 or #313 #291 #305 #297
[mk-app] #315 or #313 #298
[mk-proof] #316 quant-inst #315
[mk-app] #317 or #313 #310
[mk-app] #318 = #315 #317
[mk-proof] #319 monotonicity #312 #318
[mk-app] #320 = #317 #314
[mk-proof] #321 rewrite #320
[mk-app] #322 = #315 #314
[mk-proof] #323 trans #319 #321 #322
[mk-proof] #324 mp #316 #323 #314
[instance] 0x125905428 #316 ; 1
[assign] (not #305) justification -1: (not p5)
[assign] #297 justification -1: p3 p4 (not p11)
[end-of-instance]
[assign] #288 clause p8 (not p7)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s idx)))) 0::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s idx)))) 0::Int)) 

[assign] #289 clause p9 (not p7)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s idx)))) 0::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s idx)))) 0::Int)) 

[eq-expl] #283 root
[new-match] 0x125905d70 #209 #29 #283 #60 ; #284
[eq-expl] #139 lit #290 ; #284
[eq-expl] #284 root
[new-match] 0x125905da8 #96 #67 #283 ; #140 (#59 #59) (#139 #284) (#60 #60)
[mk-app] #325 slot_inverse #60 #284
[mk-app] #326 * #82 #325
[mk-app] #327 + #283 #326
[mk-app] #328 = #327 #55
[mk-app] #329 + #33 #102 #326
[inst-discovered] theory-solving 0x0 arith# ; #327
[mk-app] #330 = #327 #329
[mk-proof] #331 rewrite #330
[instance] 0x0 #330
[end-of-instance]
[mk-app] #332 = #329 #55
[mk-app] #333 = #328 #332
[mk-proof] #334 monotonicity #331 #333
[attach-meaning] #82 arith (- 1)
[mk-app] #335 + #102 #326
[mk-app] #336 = #335 #82
[inst-discovered] theory-solving 0x0 arith# ; #332
[mk-app] #337 = #332 #336
[mk-proof] #338 rewrite #337
[instance] 0x0 #337
[end-of-instance]
[mk-app] #339 = #328 #336
[mk-proof] #340 trans #334 #338 #339
[mk-app] #341 or #285 #336
[mk-app] #342 or #285 #328
[mk-proof] #343 quant-inst #342
[mk-app] #344 = #342 #341
[mk-proof] #345 monotonicity #340 #344
[mk-app] #346 = #341 #341
[mk-proof] #347 rewrite #346
[mk-proof] #348 trans #345 #347 #344
[mk-proof] #349 mp #343 #348 #341
[instance] 0x125905d70 #343 ; 2
[attach-enode] #325 2
[attach-enode] #326 2
[attach-enode] #335 2
[attach-enode] #336 2
[mk-app] #350 <= #335 #82
[mk-app] #351 >= #335 #82
[assign] #336 justification -1: p1
[end-of-instance]
[mk-app] #352 >= #283 #55
[mk-app] #353 not #352
[mk-app] #354 + #283 #83
[mk-app] #355 >= #354 #55
[mk-app] #356 lookup #59 #284
[mk-app] #357 next #284
[mk-app] #358 lookup #59 #357
[mk-app] #359 * #82 #358
[mk-app] #360 + #356 #359
[mk-app] #361 <= #360 #55
[mk-app] #362 or #353 #355 #361
[attach-meaning] #82 arith (- 1)
[mk-app] #363 >= #102 #82
[inst-discovered] theory-solving 0x0 arith# ; #352
[mk-app] #364 = #352 #363
[mk-proof] #365 rewrite #364
[instance] 0x0 #364
[end-of-instance]
[mk-app] #366 not #363
[mk-app] #367 = #353 #366
[mk-proof] #368 monotonicity #365 #367
[mk-app] #369 + #33 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #354
[mk-app] #370 = #354 #369
[mk-proof] #371 rewrite #370
[instance] 0x0 #370
[end-of-instance]
[mk-app] #372 >= #369 #55
[mk-app] #373 = #355 #372
[mk-proof] #374 monotonicity #371 #373
[attach-meaning] #82 arith (- 1)
[attach-meaning] #82 arith (- 1)
[mk-app] #375 <= #122 #33
[inst-discovered] theory-solving 0x0 arith# ; #372
[mk-app] #376 = #372 #375
[mk-proof] #377 rewrite #376
[instance] 0x0 #376
[end-of-instance]
[mk-app] #378 = #355 #375
[mk-proof] #379 trans #374 #377 #378
[mk-app] #380 or #366 #375 #361
[mk-app] #381 = #362 #380
[mk-proof] #382 monotonicity #368 #379 #381
[mk-app] #383 or #313 #366 #375 #361
[mk-app] #384 or #313 #362
[mk-proof] #385 quant-inst #384
[mk-app] #386 or #313 #380
[mk-app] #387 = #384 #386
[mk-proof] #388 monotonicity #382 #387
[mk-app] #389 = #386 #383
[mk-proof] #390 rewrite #389
[mk-app] #391 = #384 #383
[mk-proof] #392 trans #388 #390 #391
[mk-proof] #393 mp #385 #392 #383
[instance] 0x125905da8 #385 ; 2
[assign] #363 justification -1: p4
[assign] (not #375) justification -1: (not p5)
[attach-enode] #356 2
[attach-enode] #357 2
[attach-enode] #358 2
[attach-enode] #359 2
[attach-enode] #360 2
[assign] #361 justification -1: p3 p16 (not p17)
[end-of-instance]
[assign] #350 clause p14 (not p13)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 1::Int idx))))) -1::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 1::Int idx))))) -1::Int)) 

[assign] #351 clause p15 (not p13)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 1::Int idx))))) -1::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 1::Int idx))))) -1::Int)) 

[mk-app] #394 = #140 #356
[attach-meaning] #82 arith (- 1)
[mk-app] #395 * #82 #356
[mk-app] #396 + #140 #395
[mk-app] #397 <= #396 #55
[mk-app] #398 >= #396 #55
[assign] #394 justification -1: p10
[attach-enode] #394 0
[attach-enode] #395 0
[attach-enode] #396 0
[assign] #397 justification -1: p19
[assign] #398 justification -1: p19
[new-match] 0x125925858 #49 #37 #283 #60 ; #357 (#284 #284)
[mk-app] #399 + #33 #283
[mk-app] #400 slot #60 #399
[mk-app] #401 = #357 #400
[mk-app] #402 Int
[attach-meaning] #402 arith 2
[mk-app] #403 + #402 #102
[inst-discovered] theory-solving 0x0 arith# ; #399
[mk-app] #404 = #399 #403
[mk-proof] #405 rewrite #404
[instance] 0x0 #404
[end-of-instance]
[mk-app] #406 slot #60 #403
[mk-app] #407 = #400 #406
[mk-proof] #408 monotonicity #405 #407
[mk-app] #409 = #357 #406
[mk-app] #410 = #401 #409
[mk-proof] #411 monotonicity #408 #410
[mk-app] #412 or #293 #409
[mk-app] #413 or #293 #401
[mk-proof] #414 quant-inst #413
[mk-app] #415 = #413 #412
[mk-proof] #416 monotonicity #411 #415
[mk-app] #417 = #412 #412
[mk-proof] #418 rewrite #417
[mk-proof] #419 trans #416 #418 #415
[mk-proof] #420 mp #414 #419 #412
[instance] 0x125925858 #414 ; 3
[attach-enode] #402 3
[attach-enode] #403 3
[attach-enode] #406 3
[attach-enode] #409 3
[assign] #409 justification -1: p2
[end-of-instance]
[eq-expl] #403 root
[new-match] 0x125925bb8 #209 #29 #403 #60 ; #406
[eq-expl] #357 lit #409 ; #406
[eq-expl] #406 root
[new-match] 0x125925bf0 #96 #67 #403 ; #358 (#59 #59) (#357 #406) (#60 #60)
[mk-app] #421 slot_inverse #60 #406
[mk-app] #422 * #82 #421
[mk-app] #423 + #403 #422
[mk-app] #424 = #423 #55
[mk-app] #425 + #402 #102 #422
[inst-discovered] theory-solving 0x0 arith# ; #423
[mk-app] #426 = #423 #425
[mk-proof] #427 rewrite #426
[instance] 0x0 #426
[end-of-instance]
[mk-app] #428 = #425 #55
[mk-app] #429 = #424 #428
[mk-proof] #430 monotonicity #427 #429
[mk-app] #431 Int
[attach-meaning] #431 arith (- 2)
[mk-app] #432 + #102 #422
[mk-app] #433 = #432 #431
[inst-discovered] theory-solving 0x0 arith# ; #428
[mk-app] #434 = #428 #433
[mk-proof] #435 rewrite #434
[instance] 0x0 #434
[end-of-instance]
[mk-app] #436 = #424 #433
[mk-proof] #437 trans #430 #435 #436
[mk-app] #438 or #285 #433
[mk-app] #439 or #285 #424
[mk-proof] #440 quant-inst #439
[mk-app] #441 = #439 #438
[mk-proof] #442 monotonicity #437 #441
[mk-app] #443 = #438 #438
[mk-proof] #444 rewrite #443
[mk-proof] #445 trans #442 #444 #441
[mk-proof] #446 mp #440 #445 #438
[instance] 0x125925bb8 #440 ; 4
[attach-enode] #421 4
[attach-enode] #422 4
[attach-enode] #432 4
[attach-enode] #431 4
[attach-enode] #433 4
[mk-app] #447 <= #432 #431
[mk-app] #448 >= #432 #431
[assign] #433 justification -1: p1
[end-of-instance]
[mk-app] #449 >= #403 #55
[mk-app] #450 not #449
[mk-app] #451 + #403 #83
[mk-app] #452 >= #451 #55
[mk-app] #453 lookup #59 #406
[mk-app] #454 next #406
[mk-app] #455 lookup #59 #454
[mk-app] #456 * #82 #455
[mk-app] #457 + #453 #456
[mk-app] #458 <= #457 #55
[mk-app] #459 or #450 #452 #458
[attach-meaning] #431 arith (- 2)
[mk-app] #460 >= #102 #431
[inst-discovered] theory-solving 0x0 arith# ; #449
[mk-app] #461 = #449 #460
[mk-proof] #462 rewrite #461
[instance] 0x0 #461
[end-of-instance]
[mk-app] #463 not #460
[mk-app] #464 = #450 #463
[mk-proof] #465 monotonicity #462 #464
[mk-app] #466 + #402 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #451
[mk-app] #467 = #451 #466
[mk-proof] #468 rewrite #467
[instance] 0x0 #467
[end-of-instance]
[mk-app] #469 >= #466 #55
[mk-app] #470 = #452 #469
[mk-proof] #471 monotonicity #468 #470
[attach-meaning] #431 arith (- 2)
[attach-meaning] #82 arith (- 1)
[mk-app] #472 <= #122 #402
[inst-discovered] theory-solving 0x0 arith# ; #469
[mk-app] #473 = #469 #472
[mk-proof] #474 rewrite #473
[instance] 0x0 #473
[end-of-instance]
[mk-app] #475 = #452 #472
[mk-proof] #476 trans #471 #474 #475
[mk-app] #477 or #463 #472 #458
[mk-app] #478 = #459 #477
[mk-proof] #479 monotonicity #465 #476 #478
[mk-app] #480 or #313 #463 #472 #458
[mk-app] #481 or #313 #459
[mk-proof] #482 quant-inst #481
[mk-app] #483 or #313 #477
[mk-app] #484 = #481 #483
[mk-proof] #485 monotonicity #479 #484
[mk-app] #486 = #483 #480
[mk-proof] #487 rewrite #486
[mk-app] #488 = #481 #480
[mk-proof] #489 trans #485 #487 #488
[mk-proof] #490 mp #482 #489 #480
[instance] 0x125925bf0 #482 ; 4
[assign] #460 justification -1: p16
[assign] (not #472) justification -1: (not p5)
[attach-enode] #453 4
[attach-enode] #454 4
[attach-enode] #455 4
[attach-enode] #456 4
[attach-enode] #457 4
[assign] #458 justification -1: p3 p26 (not p27)
[end-of-instance]
[assign] #447 clause p24 (not p23)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 2::Int idx))))) -2::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 2::Int idx))))) -2::Int)) 

[assign] #448 clause p25 (not p23)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 2::Int idx))))) -2::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 2::Int idx))))) -2::Int)) 

[mk-app] #491 = #358 #453
[attach-meaning] #82 arith (- 1)
[mk-app] #492 * #82 #453
[mk-app] #493 + #358 #492
[mk-app] #494 <= #493 #55
[mk-app] #495 >= #493 #55
[assign] #491 justification -1: p22
[attach-enode] #491 0
[attach-enode] #492 0
[attach-enode] #493 0
[assign] #494 justification -1: p29
[assign] #495 justification -1: p29
[new-match] 0x1259268c0 #49 #37 #403 #60 ; #454 (#406 #406)
[mk-app] #496 + #33 #403
[mk-app] #497 slot #60 #496
[mk-app] #498 = #454 #497
[mk-app] #499 Int
[attach-meaning] #499 arith 3
[mk-app] #500 + #499 #102
[inst-discovered] theory-solving 0x0 arith# ; #496
[mk-app] #501 = #496 #500
[mk-proof] #502 rewrite #501
[instance] 0x0 #501
[end-of-instance]
[mk-app] #503 slot #60 #500
[mk-app] #504 = #497 #503
[mk-proof] #505 monotonicity #502 #504
[mk-app] #506 = #454 #503
[mk-app] #507 = #498 #506
[mk-proof] #508 monotonicity #505 #507
[mk-app] #509 or #293 #506
[mk-app] #510 or #293 #498
[mk-proof] #511 quant-inst #510
[mk-app] #512 = #510 #509
[mk-proof] #513 monotonicity #508 #512
[mk-app] #514 = #509 #509
[mk-proof] #515 rewrite #514
[mk-proof] #516 trans #513 #515 #512
[mk-proof] #517 mp #511 #516 #509
[instance] 0x1259268c0 #511 ; 5
[attach-enode] #499 5
[attach-enode] #500 5
[attach-enode] #503 5
[attach-enode] #506 5
[assign] #506 justification -1: p2
[end-of-instance]
[eq-expl] #500 root
[new-match] 0x125926c20 #209 #29 #500 #60 ; #503
[eq-expl] #454 lit #506 ; #503
[eq-expl] #503 root
[new-match] 0x125926c58 #96 #67 #500 ; #455 (#59 #59) (#454 #503) (#60 #60)
[mk-app] #518 slot_inverse #60 #503
[mk-app] #519 * #82 #518
[mk-app] #520 + #500 #519
[mk-app] #521 = #520 #55
[mk-app] #522 + #499 #102 #519
[inst-discovered] theory-solving 0x0 arith# ; #520
[mk-app] #523 = #520 #522
[mk-proof] #524 rewrite #523
[instance] 0x0 #523
[end-of-instance]
[mk-app] #525 = #522 #55
[mk-app] #526 = #521 #525
[mk-proof] #527 monotonicity #524 #526
[mk-app] #528 Int
[attach-meaning] #528 arith (- 3)
[mk-app] #529 + #102 #519
[mk-app] #530 = #529 #528
[inst-discovered] theory-solving 0x0 arith# ; #525
[mk-app] #531 = #525 #530
[mk-proof] #532 rewrite #531
[instance] 0x0 #531
[end-of-instance]
[mk-app] #533 = #521 #530
[mk-proof] #534 trans #527 #532 #533
[mk-app] #535 or #285 #530
[mk-app] #536 or #285 #521
[mk-proof] #537 quant-inst #536
[mk-app] #538 = #536 #535
[mk-proof] #539 monotonicity #534 #538
[mk-app] #540 = #535 #535
[mk-proof] #541 rewrite #540
[mk-proof] #542 trans #539 #541 #538
[mk-proof] #543 mp #537 #542 #535
[instance] 0x125926c20 #537 ; 6
[attach-enode] #518 6
[attach-enode] #519 6
[attach-enode] #529 6
[attach-enode] #528 6
[attach-enode] #530 6
[mk-app] #544 <= #529 #528
[mk-app] #545 >= #529 #528
[assign] #530 justification -1: p1
[end-of-instance]
[mk-app] #546 >= #500 #55
[mk-app] #547 not #546
[mk-app] #548 + #500 #83
[mk-app] #549 >= #548 #55
[mk-app] #550 lookup #59 #503
[mk-app] #551 next #503
[mk-app] #552 lookup #59 #551
[mk-app] #553 * #82 #552
[mk-app] #554 + #550 #553
[mk-app] #555 <= #554 #55
[mk-app] #556 or #547 #549 #555
[attach-meaning] #528 arith (- 3)
[mk-app] #557 >= #102 #528
[inst-discovered] theory-solving 0x0 arith# ; #546
[mk-app] #558 = #546 #557
[mk-proof] #559 rewrite #558
[instance] 0x0 #558
[end-of-instance]
[mk-app] #560 not #557
[mk-app] #561 = #547 #560
[mk-proof] #562 monotonicity #559 #561
[mk-app] #563 + #499 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #548
[mk-app] #564 = #548 #563
[mk-proof] #565 rewrite #564
[instance] 0x0 #564
[end-of-instance]
[mk-app] #566 >= #563 #55
[mk-app] #567 = #549 #566
[mk-proof] #568 monotonicity #565 #567
[attach-meaning] #528 arith (- 3)
[attach-meaning] #82 arith (- 1)
[mk-app] #569 <= #122 #499
[inst-discovered] theory-solving 0x0 arith# ; #566
[mk-app] #570 = #566 #569
[mk-proof] #571 rewrite #570
[instance] 0x0 #570
[end-of-instance]
[mk-app] #572 = #549 #569
[mk-proof] #573 trans #568 #571 #572
[mk-app] #574 or #560 #569 #555
[mk-app] #575 = #556 #574
[mk-proof] #576 monotonicity #562 #573 #575
[mk-app] #577 or #313 #560 #569 #555
[mk-app] #578 or #313 #556
[mk-proof] #579 quant-inst #578
[mk-app] #580 or #313 #574
[mk-app] #581 = #578 #580
[mk-proof] #582 monotonicity #576 #581
[mk-app] #583 = #580 #577
[mk-proof] #584 rewrite #583
[mk-app] #585 = #578 #577
[mk-proof] #586 trans #582 #584 #585
[mk-proof] #587 mp #579 #586 #577
[instance] 0x125926c58 #579 ; 6
[assign] #557 justification -1: p26
[assign] (not #569) justification -1: (not p5)
[attach-enode] #550 6
[attach-enode] #551 6
[attach-enode] #552 6
[attach-enode] #553 6
[attach-enode] #554 6
[assign] #555 justification -1: p3 p36 (not p37)
[end-of-instance]
[assign] #544 clause p34 (not p33)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 3::Int idx))))) -3::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 3::Int idx))))) -3::Int)) 

[assign] #545 clause p35 (not p33)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 3::Int idx))))) -3::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 3::Int idx))))) -3::Int)) 

[mk-app] #588 = #455 #550
[attach-meaning] #82 arith (- 1)
[mk-app] #589 * #82 #550
[mk-app] #590 + #455 #589
[mk-app] #591 <= #590 #55
[mk-app] #592 >= #590 #55
[assign] #588 justification -1: p32
[attach-enode] #588 0
[attach-enode] #589 0
[attach-enode] #590 0
[assign] #591 justification -1: p39
[assign] #592 justification -1: p39
[new-match] 0x12592ed50 #49 #37 #500 #60 ; #551 (#503 #503)
[mk-app] #593 + #33 #500
[mk-app] #594 slot #60 #593
[mk-app] #595 = #551 #594
[mk-app] #596 Int
[attach-meaning] #596 arith 4
[mk-app] #597 + #596 #102
[inst-discovered] theory-solving 0x0 arith# ; #593
[mk-app] #598 = #593 #597
[mk-proof] #599 rewrite #598
[instance] 0x0 #598
[end-of-instance]
[mk-app] #600 slot #60 #597
[mk-app] #601 = #594 #600
[mk-proof] #602 monotonicity #599 #601
[mk-app] #603 = #551 #600
[mk-app] #604 = #595 #603
[mk-proof] #605 monotonicity #602 #604
[mk-app] #606 or #293 #603
[mk-app] #607 or #293 #595
[mk-proof] #608 quant-inst #607
[mk-app] #609 = #607 #606
[mk-proof] #610 monotonicity #605 #609
[mk-app] #611 = #606 #606
[mk-proof] #612 rewrite #611
[mk-proof] #613 trans #610 #612 #609
[mk-proof] #614 mp #608 #613 #606
[instance] 0x12592ed50 #608 ; 7
[attach-enode] #596 7
[attach-enode] #597 7
[attach-enode] #600 7
[attach-enode] #603 7
[assign] #603 justification -1: p2
[end-of-instance]
[eq-expl] #597 root
[new-match] 0x12592f0b0 #209 #29 #597 #60 ; #600
[eq-expl] #551 lit #603 ; #600
[eq-expl] #600 root
[new-match] 0x12592f0e8 #96 #67 #597 ; #552 (#59 #59) (#551 #600) (#60 #60)
[mk-app] #615 slot_inverse #60 #600
[mk-app] #616 * #82 #615
[mk-app] #617 + #597 #616
[mk-app] #618 = #617 #55
[mk-app] #619 + #596 #102 #616
[inst-discovered] theory-solving 0x0 arith# ; #617
[mk-app] #620 = #617 #619
[mk-proof] #621 rewrite #620
[instance] 0x0 #620
[end-of-instance]
[mk-app] #622 = #619 #55
[mk-app] #623 = #618 #622
[mk-proof] #624 monotonicity #621 #623
[mk-app] #625 Int
[attach-meaning] #625 arith (- 4)
[mk-app] #626 + #102 #616
[mk-app] #627 = #626 #625
[inst-discovered] theory-solving 0x0 arith# ; #622
[mk-app] #628 = #622 #627
[mk-proof] #629 rewrite #628
[instance] 0x0 #628
[end-of-instance]
[mk-app] #630 = #618 #627
[mk-proof] #631 trans #624 #629 #630
[mk-app] #632 or #285 #627
[mk-app] #633 or #285 #618
[mk-proof] #634 quant-inst #633
[mk-app] #635 = #633 #632
[mk-proof] #636 monotonicity #631 #635
[mk-app] #637 = #632 #632
[mk-proof] #638 rewrite #637
[mk-proof] #639 trans #636 #638 #635
[mk-proof] #640 mp #634 #639 #632
[instance] 0x12592f0b0 #634 ; 8
[attach-enode] #615 8
[attach-enode] #616 8
[attach-enode] #626 8
[attach-enode] #625 8
[attach-enode] #627 8
[mk-app] #641 <= #626 #625
[mk-app] #642 >= #626 #625
[assign] #627 justification -1: p1
[end-of-instance]
[mk-app] #643 >= #597 #55
[mk-app] #644 not #643
[mk-app] #645 + #597 #83
[mk-app] #646 >= #645 #55
[mk-app] #647 lookup #59 #600
[mk-app] #648 next #600
[mk-app] #649 lookup #59 #648
[mk-app] #650 * #82 #649
[mk-app] #651 + #647 #650
[mk-app] #652 <= #651 #55
[mk-app] #653 or #644 #646 #652
[attach-meaning] #625 arith (- 4)
[mk-app] #654 >= #102 #625
[inst-discovered] theory-solving 0x0 arith# ; #643
[mk-app] #655 = #643 #654
[mk-proof] #656 rewrite #655
[instance] 0x0 #655
[end-of-instance]
[mk-app] #657 not #654
[mk-app] #658 = #644 #657
[mk-proof] #659 monotonicity #656 #658
[mk-app] #660 + #596 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #645
[mk-app] #661 = #645 #660
[mk-proof] #662 rewrite #661
[instance] 0x0 #661
[end-of-instance]
[mk-app] #663 >= #660 #55
[mk-app] #664 = #646 #663
[mk-proof] #665 monotonicity #662 #664
[attach-meaning] #625 arith (- 4)
[attach-meaning] #82 arith (- 1)
[mk-app] #666 <= #122 #596
[inst-discovered] theory-solving 0x0 arith# ; #663
[mk-app] #667 = #663 #666
[mk-proof] #668 rewrite #667
[instance] 0x0 #667
[end-of-instance]
[mk-app] #669 = #646 #666
[mk-proof] #670 trans #665 #668 #669
[mk-app] #671 or #657 #666 #652
[mk-app] #672 = #653 #671
[mk-proof] #673 monotonicity #659 #670 #672
[mk-app] #674 or #313 #657 #666 #652
[mk-app] #675 or #313 #653
[mk-proof] #676 quant-inst #675
[mk-app] #677 or #313 #671
[mk-app] #678 = #675 #677
[mk-proof] #679 monotonicity #673 #678
[mk-app] #680 = #677 #674
[mk-proof] #681 rewrite #680
[mk-app] #682 = #675 #674
[mk-proof] #683 trans #679 #681 #682
[mk-proof] #684 mp #676 #683 #674
[instance] 0x12592f0e8 #676 ; 8
[assign] #654 justification -1: p36
[assign] (not #666) justification -1: (not p5)
[attach-enode] #647 8
[attach-enode] #648 8
[attach-enode] #649 8
[attach-enode] #650 8
[attach-enode] #651 8
[assign] #652 justification -1: p3 p46 (not p47)
[end-of-instance]
[assign] #641 clause p44 (not p43)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 4::Int idx))))) -4::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 4::Int idx))))) -4::Int)) 

[assign] #642 clause p45 (not p43)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 4::Int idx))))) -4::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 4::Int idx))))) -4::Int)) 

[mk-app] #685 = #552 #647
[attach-meaning] #82 arith (- 1)
[mk-app] #686 * #82 #647
[mk-app] #687 + #552 #686
[mk-app] #688 <= #687 #55
[mk-app] #689 >= #687 #55
[assign] #685 justification -1: p42
[attach-enode] #685 0
[attach-enode] #686 0
[attach-enode] #687 0
[assign] #688 justification -1: p49
[assign] #689 justification -1: p49
[new-match] 0x12592fdb8 #49 #37 #597 #60 ; #648 (#600 #600)
[mk-app] #690 + #33 #597
[mk-app] #691 slot #60 #690
[mk-app] #692 = #648 #691
[mk-app] #693 Int
[attach-meaning] #693 arith 5
[mk-app] #694 + #693 #102
[inst-discovered] theory-solving 0x0 arith# ; #690
[mk-app] #695 = #690 #694
[mk-proof] #696 rewrite #695
[instance] 0x0 #695
[end-of-instance]
[mk-app] #697 slot #60 #694
[mk-app] #698 = #691 #697
[mk-proof] #699 monotonicity #696 #698
[mk-app] #700 = #648 #697
[mk-app] #701 = #692 #700
[mk-proof] #702 monotonicity #699 #701
[mk-app] #703 or #293 #700
[mk-app] #704 or #293 #692
[mk-proof] #705 quant-inst #704
[mk-app] #706 = #704 #703
[mk-proof] #707 monotonicity #702 #706
[mk-app] #708 = #703 #703
[mk-proof] #709 rewrite #708
[mk-proof] #710 trans #707 #709 #706
[mk-proof] #711 mp #705 #710 #703
[instance] 0x12592fdb8 #705 ; 9
[attach-enode] #693 9
[attach-enode] #694 9
[attach-enode] #697 9
[attach-enode] #700 9
[assign] #700 justification -1: p2
[end-of-instance]
[eq-expl] #694 root
[new-match] 0x125930118 #209 #29 #694 #60 ; #697
[eq-expl] #648 lit #700 ; #697
[eq-expl] #697 root
[new-match] 0x125930150 #96 #67 #694 ; #649 (#59 #59) (#648 #697) (#60 #60)
[mk-app] #712 slot_inverse #60 #697
[mk-app] #713 * #82 #712
[mk-app] #714 + #694 #713
[mk-app] #715 = #714 #55
[mk-app] #716 + #693 #102 #713
[inst-discovered] theory-solving 0x0 arith# ; #714
[mk-app] #717 = #714 #716
[mk-proof] #718 rewrite #717
[instance] 0x0 #717
[end-of-instance]
[mk-app] #719 = #716 #55
[mk-app] #720 = #715 #719
[mk-proof] #721 monotonicity #718 #720
[mk-app] #722 Int
[attach-meaning] #722 arith (- 5)
[mk-app] #723 + #102 #713
[mk-app] #724 = #723 #722
[inst-discovered] theory-solving 0x0 arith# ; #719
[mk-app] #725 = #719 #724
[mk-proof] #726 rewrite #725
[instance] 0x0 #725
[end-of-instance]
[mk-app] #727 = #715 #724
[mk-proof] #728 trans #721 #726 #727
[mk-app] #729 or #285 #724
[mk-app] #730 or #285 #715
[mk-proof] #731 quant-inst #730
[mk-app] #732 = #730 #729
[mk-proof] #733 monotonicity #728 #732
[mk-app] #734 = #729 #729
[mk-proof] #735 rewrite #734
[mk-proof] #736 trans #733 #735 #732
[mk-proof] #737 mp #731 #736 #729
[instance] 0x125930118 #731 ; 10
[attach-enode] #712 10
[attach-enode] #713 10
[attach-enode] #723 10
[attach-enode] #722 10
[attach-enode] #724 10
[mk-app] #738 <= #723 #722
[mk-app] #739 >= #723 #722
[assign] #724 justification -1: p1
[end-of-instance]
[mk-app] #740 >= #694 #55
[mk-app] #741 not #740
[mk-app] #742 + #694 #83
[mk-app] #743 >= #742 #55
[mk-app] #744 lookup #59 #697
[mk-app] #745 next #697
[mk-app] #746 lookup #59 #745
[mk-app] #747 * #82 #746
[mk-app] #748 + #744 #747
[mk-app] #749 <= #748 #55
[mk-app] #750 or #741 #743 #749
[attach-meaning] #722 arith (- 5)
[mk-app] #751 >= #102 #722
[inst-discovered] theory-solving 0x0 arith# ; #740
[mk-app] #752 = #740 #751
[mk-proof] #753 rewrite #752
[instance] 0x0 #752
[end-of-instance]
[mk-app] #754 not #751
[mk-app] #755 = #741 #754
[mk-proof] #756 monotonicity #753 #755
[mk-app] #757 + #693 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #742
[mk-app] #758 = #742 #757
[mk-proof] #759 rewrite #758
[instance] 0x0 #758
[end-of-instance]
[mk-app] #760 >= #757 #55
[mk-app] #761 = #743 #760
[mk-proof] #762 monotonicity #759 #761
[attach-meaning] #722 arith (- 5)
[attach-meaning] #82 arith (- 1)
[mk-app] #763 <= #122 #693
[inst-discovered] theory-solving 0x0 arith# ; #760
[mk-app] #764 = #760 #763
[mk-proof] #765 rewrite #764
[instance] 0x0 #764
[end-of-instance]
[mk-app] #766 = #743 #763
[mk-proof] #767 trans #762 #765 #766
[mk-app] #768 or #754 #763 #749
[mk-app] #769 = #750 #768
[mk-proof] #770 monotonicity #756 #767 #769
[mk-app] #771 or #313 #754 #763 #749
[mk-app] #772 or #313 #750
[mk-proof] #773 quant-inst #772
[mk-app] #774 or #313 #768
[mk-app] #775 = #772 #774
[mk-proof] #776 monotonicity #770 #775
[mk-app] #777 = #774 #771
[mk-proof] #778 rewrite #777
[mk-app] #779 = #772 #771
[mk-proof] #780 trans #776 #778 #779
[mk-proof] #781 mp #773 #780 #771
[instance] 0x125930150 #773 ; 10
[assign] #751 justification -1: p46
[assign] (not #763) justification -1: (not p5)
[attach-enode] #744 10
[attach-enode] #745 10
[attach-enode] #746 10
[attach-enode] #747 10
[attach-enode] #748 10
[assign] #749 justification -1: p3 p56 (not p57)
[end-of-instance]
[assign] #738 clause p54 (not p53)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 5::Int idx))))) -5::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 5::Int idx))))) -5::Int)) 

[assign] #739 clause p55 (not p53)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 5::Int idx))))) -5::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 5::Int idx))))) -5::Int)) 

[mk-app] #782 = #649 #744
[attach-meaning] #82 arith (- 1)
[mk-app] #783 * #82 #744
[mk-app] #784 + #649 #783
[mk-app] #785 <= #784 #55
[mk-app] #786 >= #784 #55
[assign] #782 justification -1: p52
[attach-enode] #782 0
[attach-enode] #783 0
[attach-enode] #784 0
[assign] #785 justification -1: p59
[assign] #786 justification -1: p59
[new-match] 0x125936458 #49 #37 #694 #60 ; #745 (#697 #697)
[mk-app] #787 + #33 #694
[mk-app] #788 slot #60 #787
[mk-app] #789 = #745 #788
[mk-app] #790 Int
[attach-meaning] #790 arith 6
[mk-app] #791 + #790 #102
[inst-discovered] theory-solving 0x0 arith# ; #787
[mk-app] #792 = #787 #791
[mk-proof] #793 rewrite #792
[instance] 0x0 #792
[end-of-instance]
[mk-app] #794 slot #60 #791
[mk-app] #795 = #788 #794
[mk-proof] #796 monotonicity #793 #795
[mk-app] #797 = #745 #794
[mk-app] #798 = #789 #797
[mk-proof] #799 monotonicity #796 #798
[mk-app] #800 or #293 #797
[mk-app] #801 or #293 #789
[mk-proof] #802 quant-inst #801
[mk-app] #803 = #801 #800
[mk-proof] #804 monotonicity #799 #803
[mk-app] #805 = #800 #800
[mk-proof] #806 rewrite #805
[mk-proof] #807 trans #804 #806 #803
[mk-proof] #808 mp #802 #807 #800
[instance] 0x125936458 #802 ; 11
[attach-enode] #790 11
[attach-enode] #791 11
[attach-enode] #794 11
[attach-enode] #797 11
[assign] #797 justification -1: p2
[end-of-instance]
[eq-expl] #791 root
[new-match] 0x1259367b8 #209 #29 #791 #60 ; #794
[eq-expl] #745 lit #797 ; #794
[eq-expl] #794 root
[new-match] 0x1259367f0 #96 #67 #791 ; #746 (#59 #59) (#745 #794) (#60 #60)
[mk-app] #809 slot_inverse #60 #794
[mk-app] #810 * #82 #809
[mk-app] #811 + #791 #810
[mk-app] #812 = #811 #55
[mk-app] #813 + #790 #102 #810
[inst-discovered] theory-solving 0x0 arith# ; #811
[mk-app] #814 = #811 #813
[mk-proof] #815 rewrite #814
[instance] 0x0 #814
[end-of-instance]
[mk-app] #816 = #813 #55
[mk-app] #817 = #812 #816
[mk-proof] #818 monotonicity #815 #817
[mk-app] #819 Int
[attach-meaning] #819 arith (- 6)
[mk-app] #820 + #102 #810
[mk-app] #821 = #820 #819
[inst-discovered] theory-solving 0x0 arith# ; #816
[mk-app] #822 = #816 #821
[mk-proof] #823 rewrite #822
[instance] 0x0 #822
[end-of-instance]
[mk-app] #824 = #812 #821
[mk-proof] #825 trans #818 #823 #824
[mk-app] #826 or #285 #821
[mk-app] #827 or #285 #812
[mk-proof] #828 quant-inst #827
[mk-app] #829 = #827 #826
[mk-proof] #830 monotonicity #825 #829
[mk-app] #831 = #826 #826
[mk-proof] #832 rewrite #831
[mk-proof] #833 trans #830 #832 #829
[mk-proof] #834 mp #828 #833 #826
[instance] 0x1259367b8 #828 ; 12
[attach-enode] #809 12
[attach-enode] #810 12
[attach-enode] #820 12
[attach-enode] #819 12
[attach-enode] #821 12
[mk-app] #835 <= #820 #819
[mk-app] #836 >= #820 #819
[assign] #821 justification -1: p1
[end-of-instance]
[mk-app] #837 >= #791 #55
[mk-app] #838 not #837
[mk-app] #839 + #791 #83
[mk-app] #840 >= #839 #55
[mk-app] #841 lookup #59 #794
[mk-app] #842 next #794
[mk-app] #843 lookup #59 #842
[mk-app] #844 * #82 #843
[mk-app] #845 + #841 #844
[mk-app] #846 <= #845 #55
[mk-app] #847 or #838 #840 #846
[attach-meaning] #819 arith (- 6)
[mk-app] #848 >= #102 #819
[inst-discovered] theory-solving 0x0 arith# ; #837
[mk-app] #849 = #837 #848
[mk-proof] #850 rewrite #849
[instance] 0x0 #849
[end-of-instance]
[mk-app] #851 not #848
[mk-app] #852 = #838 #851
[mk-proof] #853 monotonicity #850 #852
[mk-app] #854 + #790 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #839
[mk-app] #855 = #839 #854
[mk-proof] #856 rewrite #855
[instance] 0x0 #855
[end-of-instance]
[mk-app] #857 >= #854 #55
[mk-app] #858 = #840 #857
[mk-proof] #859 monotonicity #856 #858
[attach-meaning] #819 arith (- 6)
[attach-meaning] #82 arith (- 1)
[mk-app] #860 <= #122 #790
[inst-discovered] theory-solving 0x0 arith# ; #857
[mk-app] #861 = #857 #860
[mk-proof] #862 rewrite #861
[instance] 0x0 #861
[end-of-instance]
[mk-app] #863 = #840 #860
[mk-proof] #864 trans #859 #862 #863
[mk-app] #865 or #851 #860 #846
[mk-app] #866 = #847 #865
[mk-proof] #867 monotonicity #853 #864 #866
[mk-app] #868 or #313 #851 #860 #846
[mk-app] #869 or #313 #847
[mk-proof] #870 quant-inst #869
[mk-app] #871 or #313 #865
[mk-app] #872 = #869 #871
[mk-proof] #873 monotonicity #867 #872
[mk-app] #874 = #871 #868
[mk-proof] #875 rewrite #874
[mk-app] #876 = #869 #868
[mk-proof] #877 trans #873 #875 #876
[mk-proof] #878 mp #870 #877 #868
[instance] 0x1259367f0 #870 ; 12
[assign] #848 justification -1: p56
[assign] (not #860) justification -1: (not p5)
[attach-enode] #841 12
[attach-enode] #842 12
[attach-enode] #843 12
[attach-enode] #844 12
[attach-enode] #845 12
[assign] #846 justification -1: p3 p66 (not p67)
[end-of-instance]
[assign] #835 clause p64 (not p63)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 6::Int idx))))) -6::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 6::Int idx))))) -6::Int)) 

[assign] #836 clause p65 (not p63)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 6::Int idx))))) -6::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 6::Int idx))))) -6::Int)) 

[mk-app] #879 = #746 #841
[attach-meaning] #82 arith (- 1)
[mk-app] #880 * #82 #841
[mk-app] #881 + #746 #880
[mk-app] #882 <= #881 #55
[mk-app] #883 >= #881 #55
[assign] #879 justification -1: p62
[attach-enode] #879 0
[attach-enode] #880 0
[attach-enode] #881 0
[assign] #882 justification -1: p69
[assign] #883 justification -1: p69
[new-match] 0x1259374c0 #49 #37 #791 #60 ; #842 (#794 #794)
[mk-app] #884 + #33 #791
[mk-app] #885 slot #60 #884
[mk-app] #886 = #842 #885
[mk-app] #887 Int
[attach-meaning] #887 arith 7
[mk-app] #888 + #887 #102
[inst-discovered] theory-solving 0x0 arith# ; #884
[mk-app] #889 = #884 #888
[mk-proof] #890 rewrite #889
[instance] 0x0 #889
[end-of-instance]
[mk-app] #891 slot #60 #888
[mk-app] #892 = #885 #891
[mk-proof] #893 monotonicity #890 #892
[mk-app] #894 = #842 #891
[mk-app] #895 = #886 #894
[mk-proof] #896 monotonicity #893 #895
[mk-app] #897 or #293 #894
[mk-app] #898 or #293 #886
[mk-proof] #899 quant-inst #898
[mk-app] #900 = #898 #897
[mk-proof] #901 monotonicity #896 #900
[mk-app] #902 = #897 #897
[mk-proof] #903 rewrite #902
[mk-proof] #904 trans #901 #903 #900
[mk-proof] #905 mp #899 #904 #897
[instance] 0x1259374c0 #899 ; 13
[attach-enode] #887 13
[attach-enode] #888 13
[attach-enode] #891 13
[attach-enode] #894 13
[assign] #894 justification -1: p2
[end-of-instance]
[eq-expl] #888 root
[new-match] 0x125937820 #209 #29 #888 #60 ; #891
[eq-expl] #842 lit #894 ; #891
[eq-expl] #891 root
[new-match] 0x125937858 #96 #67 #888 ; #843 (#59 #59) (#842 #891) (#60 #60)
[mk-app] #906 slot_inverse #60 #891
[mk-app] #907 * #82 #906
[mk-app] #908 + #888 #907
[mk-app] #909 = #908 #55
[mk-app] #910 + #887 #102 #907
[inst-discovered] theory-solving 0x0 arith# ; #908
[mk-app] #911 = #908 #910
[mk-proof] #912 rewrite #911
[instance] 0x0 #911
[end-of-instance]
[mk-app] #913 = #910 #55
[mk-app] #914 = #909 #913
[mk-proof] #915 monotonicity #912 #914
[mk-app] #916 Int
[attach-meaning] #916 arith (- 7)
[mk-app] #917 + #102 #907
[mk-app] #918 = #917 #916
[inst-discovered] theory-solving 0x0 arith# ; #913
[mk-app] #919 = #913 #918
[mk-proof] #920 rewrite #919
[instance] 0x0 #919
[end-of-instance]
[mk-app] #921 = #909 #918
[mk-proof] #922 trans #915 #920 #921
[mk-app] #923 or #285 #918
[mk-app] #924 or #285 #909
[mk-proof] #925 quant-inst #924
[mk-app] #926 = #924 #923
[mk-proof] #927 monotonicity #922 #926
[mk-app] #928 = #923 #923
[mk-proof] #929 rewrite #928
[mk-proof] #930 trans #927 #929 #926
[mk-proof] #931 mp #925 #930 #923
[instance] 0x125937820 #925 ; 14
[attach-enode] #906 14
[attach-enode] #907 14
[attach-enode] #917 14
[attach-enode] #916 14
[attach-enode] #918 14
[mk-app] #932 <= #917 #916
[mk-app] #933 >= #917 #916
[assign] #918 justification -1: p1
[end-of-instance]
[mk-app] #934 >= #888 #55
[mk-app] #935 not #934
[mk-app] #936 + #888 #83
[mk-app] #937 >= #936 #55
[mk-app] #938 lookup #59 #891
[mk-app] #939 next #891
[mk-app] #940 lookup #59 #939
[mk-app] #941 * #82 #940
[mk-app] #942 + #938 #941
[mk-app] #943 <= #942 #55
[mk-app] #944 or #935 #937 #943
[attach-meaning] #916 arith (- 7)
[mk-app] #945 >= #102 #916
[inst-discovered] theory-solving 0x0 arith# ; #934
[mk-app] #946 = #934 #945
[mk-proof] #947 rewrite #946
[instance] 0x0 #946
[end-of-instance]
[mk-app] #948 not #945
[mk-app] #949 = #935 #948
[mk-proof] #950 monotonicity #947 #949
[mk-app] #951 + #887 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #936
[mk-app] #952 = #936 #951
[mk-proof] #953 rewrite #952
[instance] 0x0 #952
[end-of-instance]
[mk-app] #954 >= #951 #55
[mk-app] #955 = #937 #954
[mk-proof] #956 monotonicity #953 #955
[attach-meaning] #916 arith (- 7)
[attach-meaning] #82 arith (- 1)
[mk-app] #957 <= #122 #887
[inst-discovered] theory-solving 0x0 arith# ; #954
[mk-app] #958 = #954 #957
[mk-proof] #959 rewrite #958
[instance] 0x0 #958
[end-of-instance]
[mk-app] #960 = #937 #957
[mk-proof] #961 trans #956 #959 #960
[mk-app] #962 or #948 #957 #943
[mk-app] #963 = #944 #962
[mk-proof] #964 monotonicity #950 #961 #963
[mk-app] #965 or #313 #948 #957 #943
[mk-app] #966 or #313 #944
[mk-proof] #967 quant-inst #966
[mk-app] #968 or #313 #962
[mk-app] #969 = #966 #968
[mk-proof] #970 monotonicity #964 #969
[mk-app] #971 = #968 #965
[mk-proof] #972 rewrite #971
[mk-app] #973 = #966 #965
[mk-proof] #974 trans #970 #972 #973
[mk-proof] #975 mp #967 #974 #965
[instance] 0x125937858 #967 ; 14
[assign] #945 justification -1: p66
[assign] (not #957) justification -1: (not p5)
[attach-enode] #938 14
[attach-enode] #939 14
[attach-enode] #940 14
[attach-enode] #941 14
[attach-enode] #942 14
[assign] #943 justification -1: p3 p76 (not p77)
[end-of-instance]
[assign] #932 clause p74 (not p73)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 7::Int idx))))) -7::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 7::Int idx))))) -7::Int)) 

[assign] #933 clause p75 (not p73)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 7::Int idx))))) -7::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 7::Int idx))))) -7::Int)) 

[mk-app] #976 = #843 #938
[attach-meaning] #82 arith (- 1)
[mk-app] #977 * #82 #938
[mk-app] #978 + #843 #977
[mk-app] #979 <= #978 #55
[mk-app] #980 >= #978 #55
[assign] #976 justification -1: p72
[attach-enode] #976 0
[attach-enode] #977 0
[attach-enode] #978 0
[assign] #979 justification -1: p79
[assign] #980 justification -1: p79
[new-match] 0x12593eb88 #49 #37 #888 #60 ; #939 (#891 #891)
[mk-app] #981 + #33 #888
[mk-app] #982 slot #60 #981
[mk-app] #983 = #939 #982
[mk-app] #984 Int
[attach-meaning] #984 arith 8
[mk-app] #985 + #984 #102
[inst-discovered] theory-solving 0x0 arith# ; #981
[mk-app] #986 = #981 #985
[mk-proof] #987 rewrite #986
[instance] 0x0 #986
[end-of-instance]
[mk-app] #988 slot #60 #985
[mk-app] #989 = #982 #988
[mk-proof] #990 monotonicity #987 #989
[mk-app] #991 = #939 #988
[mk-app] #992 = #983 #991
[mk-proof] #993 monotonicity #990 #992
[mk-app] #994 or #293 #991
[mk-app] #995 or #293 #983
[mk-proof] #996 quant-inst #995
[mk-app] #997 = #995 #994
[mk-proof] #998 monotonicity #993 #997
[mk-app] #999 = #994 #994
[mk-proof] #1000 rewrite #999
[mk-proof] #1001 trans #998 #1000 #997
[mk-proof] #1002 mp #996 #1001 #994
[instance] 0x12593eb88 #996 ; 15
[attach-enode] #984 15
[attach-enode] #985 15
[attach-enode] #988 15
[attach-enode] #991 15
[assign] #991 justification -1: p2
[end-of-instance]
[eq-expl] #985 root
[new-match] 0x12593eee8 #209 #29 #985 #60 ; #988
[eq-expl] #939 lit #991 ; #988
[eq-expl] #988 root
[new-match] 0x12593ef20 #96 #67 #985 ; #940 (#59 #59) (#939 #988) (#60 #60)
[mk-app] #1003 slot_inverse #60 #988
[mk-app] #1004 * #82 #1003
[mk-app] #1005 + #985 #1004
[mk-app] #1006 = #1005 #55
[mk-app] #1007 + #984 #102 #1004
[inst-discovered] theory-solving 0x0 arith# ; #1005
[mk-app] #1008 = #1005 #1007
[mk-proof] #1009 rewrite #1008
[instance] 0x0 #1008
[end-of-instance]
[mk-app] #1010 = #1007 #55
[mk-app] #1011 = #1006 #1010
[mk-proof] #1012 monotonicity #1009 #1011
[mk-app] #1013 Int
[attach-meaning] #1013 arith (- 8)
[mk-app] #1014 + #102 #1004
[mk-app] #1015 = #1014 #1013
[inst-discovered] theory-solving 0x0 arith# ; #1010
[mk-app] #1016 = #1010 #1015
[mk-proof] #1017 rewrite #1016
[instance] 0x0 #1016
[end-of-instance]
[mk-app] #1018 = #1006 #1015
[mk-proof] #1019 trans #1012 #1017 #1018
[mk-app] #1020 or #285 #1015
[mk-app] #1021 or #285 #1006
[mk-proof] #1022 quant-inst #1021
[mk-app] #1023 = #1021 #1020
[mk-proof] #1024 monotonicity #1019 #1023
[mk-app] #1025 = #1020 #1020
[mk-proof] #1026 rewrite #1025
[mk-proof] #1027 trans #1024 #1026 #1023
[mk-proof] #1028 mp #1022 #1027 #1020
[instance] 0x12593eee8 #1022 ; 16
[attach-enode] #1003 16
[attach-enode] #1004 16
[attach-enode] #1014 16
[attach-enode] #1013 16
[attach-enode] #1015 16
[mk-app] #1029 <= #1014 #1013
[mk-app] #1030 >= #1014 #1013
[assign] #1015 justification -1: p1
[end-of-instance]
[mk-app] #1031 >= #985 #55
[mk-app] #1032 not #1031
[mk-app] #1033 + #985 #83
[mk-app] #1034 >= #1033 #55
[mk-app] #1035 lookup #59 #988
[mk-app] #1036 next #988
[mk-app] #1037 lookup #59 #1036
[mk-app] #1038 * #82 #1037
[mk-app] #1039 + #1035 #1038
[mk-app] #1040 <= #1039 #55
[mk-app] #1041 or #1032 #1034 #1040
[attach-meaning] #1013 arith (- 8)
[mk-app] #1042 >= #102 #1013
[inst-discovered] theory-solving 0x0 arith# ; #1031
[mk-app] #1043 = #1031 #1042
[mk-proof] #1044 rewrite #1043
[instance] 0x0 #1043
[end-of-instance]
[mk-app] #1045 not #1042
[mk-app] #1046 = #1032 #1045
[mk-proof] #1047 monotonicity #1044 #1046
[mk-app] #1048 + #984 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1033
[mk-app] #1049 = #1033 #1048
[mk-proof] #1050 rewrite #1049
[instance] 0x0 #1049
[end-of-instance]
[mk-app] #1051 >= #1048 #55
[mk-app] #1052 = #1034 #1051
[mk-proof] #1053 monotonicity #1050 #1052
[attach-meaning] #1013 arith (- 8)
[attach-meaning] #82 arith (- 1)
[mk-app] #1054 <= #122 #984
[inst-discovered] theory-solving 0x0 arith# ; #1051
[mk-app] #1055 = #1051 #1054
[mk-proof] #1056 rewrite #1055
[instance] 0x0 #1055
[end-of-instance]
[mk-app] #1057 = #1034 #1054
[mk-proof] #1058 trans #1053 #1056 #1057
[mk-app] #1059 or #1045 #1054 #1040
[mk-app] #1060 = #1041 #1059
[mk-proof] #1061 monotonicity #1047 #1058 #1060
[mk-app] #1062 or #313 #1045 #1054 #1040
[mk-app] #1063 or #313 #1041
[mk-proof] #1064 quant-inst #1063
[mk-app] #1065 or #313 #1059
[mk-app] #1066 = #1063 #1065
[mk-proof] #1067 monotonicity #1061 #1066
[mk-app] #1068 = #1065 #1062
[mk-proof] #1069 rewrite #1068
[mk-app] #1070 = #1063 #1062
[mk-proof] #1071 trans #1067 #1069 #1070
[mk-proof] #1072 mp #1064 #1071 #1062
[instance] 0x12593ef20 #1064 ; 16
[assign] #1042 justification -1: p76
[assign] (not #1054) justification -1: (not p5)
[attach-enode] #1035 16
[attach-enode] #1036 16
[attach-enode] #1037 16
[attach-enode] #1038 16
[attach-enode] #1039 16
[assign] #1040 justification -1: p3 p86 (not p87)
[end-of-instance]
[assign] #1029 clause p84 (not p83)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 8::Int idx))))) -8::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 8::Int idx))))) -8::Int)) 

[assign] #1030 clause p85 (not p83)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 8::Int idx))))) -8::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 8::Int idx))))) -8::Int)) 

[mk-app] #1073 = #940 #1035
[attach-meaning] #82 arith (- 1)
[mk-app] #1074 * #82 #1035
[mk-app] #1075 + #940 #1074
[mk-app] #1076 <= #1075 #55
[mk-app] #1077 >= #1075 #55
[assign] #1073 justification -1: p82
[attach-enode] #1073 0
[attach-enode] #1074 0
[attach-enode] #1075 0
[assign] #1076 justification -1: p89
[assign] #1077 justification -1: p89
[new-match] 0x12593fbf0 #49 #37 #985 #60 ; #1036 (#988 #988)
[mk-app] #1078 + #33 #985
[mk-app] #1079 slot #60 #1078
[mk-app] #1080 = #1036 #1079
[mk-app] #1081 Int
[attach-meaning] #1081 arith 9
[mk-app] #1082 + #1081 #102
[inst-discovered] theory-solving 0x0 arith# ; #1078
[mk-app] #1083 = #1078 #1082
[mk-proof] #1084 rewrite #1083
[instance] 0x0 #1083
[end-of-instance]
[mk-app] #1085 slot #60 #1082
[mk-app] #1086 = #1079 #1085
[mk-proof] #1087 monotonicity #1084 #1086
[mk-app] #1088 = #1036 #1085
[mk-app] #1089 = #1080 #1088
[mk-proof] #1090 monotonicity #1087 #1089
[mk-app] #1091 or #293 #1088
[mk-app] #1092 or #293 #1080
[mk-proof] #1093 quant-inst #1092
[mk-app] #1094 = #1092 #1091
[mk-proof] #1095 monotonicity #1090 #1094
[mk-app] #1096 = #1091 #1091
[mk-proof] #1097 rewrite #1096
[mk-proof] #1098 trans #1095 #1097 #1094
[mk-proof] #1099 mp #1093 #1098 #1091
[instance] 0x12593fbf0 #1093 ; 17
[attach-enode] #1081 17
[attach-enode] #1082 17
[attach-enode] #1085 17
[attach-enode] #1088 17
[assign] #1088 justification -1: p2
[end-of-instance]
[eq-expl] #1082 root
[new-match] 0x12593ff50 #209 #29 #1082 #60 ; #1085
[eq-expl] #1036 lit #1088 ; #1085
[eq-expl] #1085 root
[new-match] 0x12593ff88 #96 #67 #1082 ; #1037 (#59 #59) (#1036 #1085) (#60 #60)
[mk-app] #1100 slot_inverse #60 #1085
[mk-app] #1101 * #82 #1100
[mk-app] #1102 + #1082 #1101
[mk-app] #1103 = #1102 #55
[mk-app] #1104 + #1081 #102 #1101
[inst-discovered] theory-solving 0x0 arith# ; #1102
[mk-app] #1105 = #1102 #1104
[mk-proof] #1106 rewrite #1105
[instance] 0x0 #1105
[end-of-instance]
[mk-app] #1107 = #1104 #55
[mk-app] #1108 = #1103 #1107
[mk-proof] #1109 monotonicity #1106 #1108
[mk-app] #1110 Int
[attach-meaning] #1110 arith (- 9)
[mk-app] #1111 + #102 #1101
[mk-app] #1112 = #1111 #1110
[inst-discovered] theory-solving 0x0 arith# ; #1107
[mk-app] #1113 = #1107 #1112
[mk-proof] #1114 rewrite #1113
[instance] 0x0 #1113
[end-of-instance]
[mk-app] #1115 = #1103 #1112
[mk-proof] #1116 trans #1109 #1114 #1115
[mk-app] #1117 or #285 #1112
[mk-app] #1118 or #285 #1103
[mk-proof] #1119 quant-inst #1118
[mk-app] #1120 = #1118 #1117
[mk-proof] #1121 monotonicity #1116 #1120
[mk-app] #1122 = #1117 #1117
[mk-proof] #1123 rewrite #1122
[mk-proof] #1124 trans #1121 #1123 #1120
[mk-proof] #1125 mp #1119 #1124 #1117
[instance] 0x12593ff50 #1119 ; 18
[attach-enode] #1100 18
[attach-enode] #1101 18
[attach-enode] #1111 18
[attach-enode] #1110 18
[attach-enode] #1112 18
[mk-app] #1126 <= #1111 #1110
[mk-app] #1127 >= #1111 #1110
[assign] #1112 justification -1: p1
[end-of-instance]
[mk-app] #1128 >= #1082 #55
[mk-app] #1129 not #1128
[mk-app] #1130 + #1082 #83
[mk-app] #1131 >= #1130 #55
[mk-app] #1132 lookup #59 #1085
[mk-app] #1133 next #1085
[mk-app] #1134 lookup #59 #1133
[mk-app] #1135 * #82 #1134
[mk-app] #1136 + #1132 #1135
[mk-app] #1137 <= #1136 #55
[mk-app] #1138 or #1129 #1131 #1137
[attach-meaning] #1110 arith (- 9)
[mk-app] #1139 >= #102 #1110
[inst-discovered] theory-solving 0x0 arith# ; #1128
[mk-app] #1140 = #1128 #1139
[mk-proof] #1141 rewrite #1140
[instance] 0x0 #1140
[end-of-instance]
[mk-app] #1142 not #1139
[mk-app] #1143 = #1129 #1142
[mk-proof] #1144 monotonicity #1141 #1143
[mk-app] #1145 + #1081 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1130
[mk-app] #1146 = #1130 #1145
[mk-proof] #1147 rewrite #1146
[instance] 0x0 #1146
[end-of-instance]
[mk-app] #1148 >= #1145 #55
[mk-app] #1149 = #1131 #1148
[mk-proof] #1150 monotonicity #1147 #1149
[attach-meaning] #1110 arith (- 9)
[attach-meaning] #82 arith (- 1)
[mk-app] #1151 <= #122 #1081
[inst-discovered] theory-solving 0x0 arith# ; #1148
[mk-app] #1152 = #1148 #1151
[mk-proof] #1153 rewrite #1152
[instance] 0x0 #1152
[end-of-instance]
[mk-app] #1154 = #1131 #1151
[mk-proof] #1155 trans #1150 #1153 #1154
[mk-app] #1156 or #1142 #1151 #1137
[mk-app] #1157 = #1138 #1156
[mk-proof] #1158 monotonicity #1144 #1155 #1157
[mk-app] #1159 or #313 #1142 #1151 #1137
[mk-app] #1160 or #313 #1138
[mk-proof] #1161 quant-inst #1160
[mk-app] #1162 or #313 #1156
[mk-app] #1163 = #1160 #1162
[mk-proof] #1164 monotonicity #1158 #1163
[mk-app] #1165 = #1162 #1159
[mk-proof] #1166 rewrite #1165
[mk-app] #1167 = #1160 #1159
[mk-proof] #1168 trans #1164 #1166 #1167
[mk-proof] #1169 mp #1161 #1168 #1159
[instance] 0x12593ff88 #1161 ; 18
[assign] #1139 justification -1: p86
[assign] (not #1151) justification -1: (not p5)
[attach-enode] #1132 18
[attach-enode] #1133 18
[attach-enode] #1134 18
[attach-enode] #1135 18
[attach-enode] #1136 18
[assign] #1137 justification -1: p3 p96 (not p97)
[end-of-instance]
[assign] #1126 clause p94 (not p93)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 9::Int idx))))) -9::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 9::Int idx))))) -9::Int)) 

[assign] #1127 clause p95 (not p93)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 9::Int idx))))) -9::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 9::Int idx))))) -9::Int)) 

[mk-app] #1170 = #1037 #1132
[attach-meaning] #82 arith (- 1)
[mk-app] #1171 * #82 #1132
[mk-app] #1172 + #1037 #1171
[mk-app] #1173 <= #1172 #55
[mk-app] #1174 >= #1172 #55
[assign] #1170 justification -1: p92
[attach-enode] #1170 0
[attach-enode] #1171 0
[attach-enode] #1172 0
[assign] #1173 justification -1: p99
[assign] #1174 justification -1: p99
[new-match] 0x125934468 #49 #37 #1082 #60 ; #1133 (#1085 #1085)
[mk-app] #1175 + #33 #1082
[mk-app] #1176 slot #60 #1175
[mk-app] #1177 = #1133 #1176
[mk-app] #1178 Int
[attach-meaning] #1178 arith 10
[mk-app] #1179 + #1178 #102
[inst-discovered] theory-solving 0x0 arith# ; #1175
[mk-app] #1180 = #1175 #1179
[mk-proof] #1181 rewrite #1180
[instance] 0x0 #1180
[end-of-instance]
[mk-app] #1182 slot #60 #1179
[mk-app] #1183 = #1176 #1182
[mk-proof] #1184 monotonicity #1181 #1183
[mk-app] #1185 = #1133 #1182
[mk-app] #1186 = #1177 #1185
[mk-proof] #1187 monotonicity #1184 #1186
[mk-app] #1188 or #293 #1185
[mk-app] #1189 or #293 #1177
[mk-proof] #1190 quant-inst #1189
[mk-app] #1191 = #1189 #1188
[mk-proof] #1192 monotonicity #1187 #1191
[mk-app] #1193 = #1188 #1188
[mk-proof] #1194 rewrite #1193
[mk-proof] #1195 trans #1192 #1194 #1191
[mk-proof] #1196 mp #1190 #1195 #1188
[instance] 0x125934468 #1190 ; 19
[attach-enode] #1178 19
[attach-enode] #1179 19
[attach-enode] #1182 19
[attach-enode] #1185 19
[assign] #1185 justification -1: p2
[end-of-instance]
[eq-expl] #1179 root
[new-match] 0x1259347c8 #209 #29 #1179 #60 ; #1182
[eq-expl] #1133 lit #1185 ; #1182
[eq-expl] #1182 root
[new-match] 0x125934800 #96 #67 #1179 ; #1134 (#59 #59) (#1133 #1182) (#60 #60)
[mk-app] #1197 slot_inverse #60 #1182
[mk-app] #1198 * #82 #1197
[mk-app] #1199 + #1179 #1198
[mk-app] #1200 = #1199 #55
[mk-app] #1201 + #1178 #102 #1198
[inst-discovered] theory-solving 0x0 arith# ; #1199
[mk-app] #1202 = #1199 #1201
[mk-proof] #1203 rewrite #1202
[instance] 0x0 #1202
[end-of-instance]
[mk-app] #1204 = #1201 #55
[mk-app] #1205 = #1200 #1204
[mk-proof] #1206 monotonicity #1203 #1205
[mk-app] #1207 Int
[attach-meaning] #1207 arith (- 10)
[mk-app] #1208 + #102 #1198
[mk-app] #1209 = #1208 #1207
[inst-discovered] theory-solving 0x0 arith# ; #1204
[mk-app] #1210 = #1204 #1209
[mk-proof] #1211 rewrite #1210
[instance] 0x0 #1210
[end-of-instance]
[mk-app] #1212 = #1200 #1209
[mk-proof] #1213 trans #1206 #1211 #1212
[mk-app] #1214 or #285 #1209
[mk-app] #1215 or #285 #1200
[mk-proof] #1216 quant-inst #1215
[mk-app] #1217 = #1215 #1214
[mk-proof] #1218 monotonicity #1213 #1217
[mk-app] #1219 = #1214 #1214
[mk-proof] #1220 rewrite #1219
[mk-proof] #1221 trans #1218 #1220 #1217
[mk-proof] #1222 mp #1216 #1221 #1214
[instance] 0x1259347c8 #1216 ; 20
[attach-enode] #1197 20
[attach-enode] #1198 20
[attach-enode] #1208 20
[attach-enode] #1207 20
[attach-enode] #1209 20
[mk-app] #1223 <= #1208 #1207
[mk-app] #1224 >= #1208 #1207
[assign] #1209 justification -1: p1
[end-of-instance]
[mk-app] #1225 >= #1179 #55
[mk-app] #1226 not #1225
[mk-app] #1227 + #1179 #83
[mk-app] #1228 >= #1227 #55
[mk-app] #1229 lookup #59 #1182
[mk-app] #1230 next #1182
[mk-app] #1231 lookup #59 #1230
[mk-app] #1232 * #82 #1231
[mk-app] #1233 + #1229 #1232
[mk-app] #1234 <= #1233 #55
[mk-app] #1235 or #1226 #1228 #1234
[attach-meaning] #1207 arith (- 10)
[mk-app] #1236 >= #102 #1207
[inst-discovered] theory-solving 0x0 arith# ; #1225
[mk-app] #1237 = #1225 #1236
[mk-proof] #1238 rewrite #1237
[instance] 0x0 #1237
[end-of-instance]
[mk-app] #1239 not #1236
[mk-app] #1240 = #1226 #1239
[mk-proof] #1241 monotonicity #1238 #1240
[mk-app] #1242 + #1178 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1227
[mk-app] #1243 = #1227 #1242
[mk-proof] #1244 rewrite #1243
[instance] 0x0 #1243
[end-of-instance]
[mk-app] #1245 >= #1242 #55
[mk-app] #1246 = #1228 #1245
[mk-proof] #1247 monotonicity #1244 #1246
[attach-meaning] #1207 arith (- 10)
[attach-meaning] #82 arith (- 1)
[mk-app] #1248 <= #122 #1178
[inst-discovered] theory-solving 0x0 arith# ; #1245
[mk-app] #1249 = #1245 #1248
[mk-proof] #1250 rewrite #1249
[instance] 0x0 #1249
[end-of-instance]
[mk-app] #1251 = #1228 #1248
[mk-proof] #1252 trans #1247 #1250 #1251
[mk-app] #1253 or #1239 #1248 #1234
[mk-app] #1254 = #1235 #1253
[mk-proof] #1255 monotonicity #1241 #1252 #1254
[mk-app] #1256 or #313 #1239 #1248 #1234
[mk-app] #1257 or #313 #1235
[mk-proof] #1258 quant-inst #1257
[mk-app] #1259 or #313 #1253
[mk-app] #1260 = #1257 #1259
[mk-proof] #1261 monotonicity #1255 #1260
[mk-app] #1262 = #1259 #1256
[mk-proof] #1263 rewrite #1262
[mk-app] #1264 = #1257 #1256
[mk-proof] #1265 trans #1261 #1263 #1264
[mk-proof] #1266 mp #1258 #1265 #1256
[instance] 0x125934800 #1258 ; 20
[assign] #1236 justification -1: p96
[assign] (not #1248) justification -1: (not p5)
[attach-enode] #1229 20
[attach-enode] #1230 20
[attach-enode] #1231 20
[attach-enode] #1232 20
[attach-enode] #1233 20
[assign] #1234 justification -1: p3 p106 (not p107)
[end-of-instance]
[assign] #1223 clause p104 (not p103)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 10::Int idx))))) -10::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 10::Int idx))))) -10::Int)) 

[assign] #1224 clause p105 (not p103)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 10::Int idx))))) -10::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 10::Int idx))))) -10::Int)) 

[mk-app] #1267 = #1134 #1229
[attach-meaning] #82 arith (- 1)
[mk-app] #1268 * #82 #1229
[mk-app] #1269 + #1134 #1268
[mk-app] #1270 <= #1269 #55
[mk-app] #1271 >= #1269 #55
[assign] #1267 justification -1: p102
[attach-enode] #1267 0
[attach-enode] #1268 0
[attach-enode] #1269 0
[assign] #1270 justification -1: p109
[assign] #1271 justification -1: p109
[new-match] 0x1259354d0 #49 #37 #1179 #60 ; #1230 (#1182 #1182)
[mk-app] #1272 + #33 #1179
[mk-app] #1273 slot #60 #1272
[mk-app] #1274 = #1230 #1273
[mk-app] #1275 Int
[attach-meaning] #1275 arith 11
[mk-app] #1276 + #1275 #102
[inst-discovered] theory-solving 0x0 arith# ; #1272
[mk-app] #1277 = #1272 #1276
[mk-proof] #1278 rewrite #1277
[instance] 0x0 #1277
[end-of-instance]
[mk-app] #1279 slot #60 #1276
[mk-app] #1280 = #1273 #1279
[mk-proof] #1281 monotonicity #1278 #1280
[mk-app] #1282 = #1230 #1279
[mk-app] #1283 = #1274 #1282
[mk-proof] #1284 monotonicity #1281 #1283
[mk-app] #1285 or #293 #1282
[mk-app] #1286 or #293 #1274
[mk-proof] #1287 quant-inst #1286
[mk-app] #1288 = #1286 #1285
[mk-proof] #1289 monotonicity #1284 #1288
[mk-app] #1290 = #1285 #1285
[mk-proof] #1291 rewrite #1290
[mk-proof] #1292 trans #1289 #1291 #1288
[mk-proof] #1293 mp #1287 #1292 #1285
[instance] 0x1259354d0 #1287 ; 21
[attach-enode] #1275 21
[attach-enode] #1276 21
[attach-enode] #1279 21
[attach-enode] #1282 21
[assign] #1282 justification -1: p2
[end-of-instance]
[eq-expl] #1276 root
[new-match] 0x125935830 #209 #29 #1276 #60 ; #1279
[eq-expl] #1230 lit #1282 ; #1279
[eq-expl] #1279 root
[new-match] 0x125935868 #96 #67 #1276 ; #1231 (#59 #59) (#1230 #1279) (#60 #60)
[mk-app] #1294 slot_inverse #60 #1279
[mk-app] #1295 * #82 #1294
[mk-app] #1296 + #1276 #1295
[mk-app] #1297 = #1296 #55
[mk-app] #1298 + #1275 #102 #1295
[inst-discovered] theory-solving 0x0 arith# ; #1296
[mk-app] #1299 = #1296 #1298
[mk-proof] #1300 rewrite #1299
[instance] 0x0 #1299
[end-of-instance]
[mk-app] #1301 = #1298 #55
[mk-app] #1302 = #1297 #1301
[mk-proof] #1303 monotonicity #1300 #1302
[mk-app] #1304 Int
[attach-meaning] #1304 arith (- 11)
[mk-app] #1305 + #102 #1295
[mk-app] #1306 = #1305 #1304
[inst-discovered] theory-solving 0x0 arith# ; #1301
[mk-app] #1307 = #1301 #1306
[mk-proof] #1308 rewrite #1307
[instance] 0x0 #1307
[end-of-instance]
[mk-app] #1309 = #1297 #1306
[mk-proof] #1310 trans #1303 #1308 #1309
[mk-app] #1311 or #285 #1306
[mk-app] #1312 or #285 #1297
[mk-proof] #1313 quant-inst #1312
[mk-app] #1314 = #1312 #1311
[mk-proof] #1315 monotonicity #1310 #1314
[mk-app] #1316 = #1311 #1311
[mk-proof] #1317 rewrite #1316
[mk-proof] #1318 trans #1315 #1317 #1314
[mk-proof] #1319 mp #1313 #1318 #1311
[instance] 0x125935830 #1313 ; 22
[attach-enode] #1294 22
[attach-enode] #1295 22
[attach-enode] #1305 22
[attach-enode] #1304 22
[attach-enode] #1306 22
[mk-app] #1320 <= #1305 #1304
[mk-app] #1321 >= #1305 #1304
[assign] #1306 justification -1: p1
[end-of-instance]
[mk-app] #1322 >= #1276 #55
[mk-app] #1323 not #1322
[mk-app] #1324 + #1276 #83
[mk-app] #1325 >= #1324 #55
[mk-app] #1326 lookup #59 #1279
[mk-app] #1327 next #1279
[mk-app] #1328 lookup #59 #1327
[mk-app] #1329 * #82 #1328
[mk-app] #1330 + #1326 #1329
[mk-app] #1331 <= #1330 #55
[mk-app] #1332 or #1323 #1325 #1331
[attach-meaning] #1304 arith (- 11)
[mk-app] #1333 >= #102 #1304
[inst-discovered] theory-solving 0x0 arith# ; #1322
[mk-app] #1334 = #1322 #1333
[mk-proof] #1335 rewrite #1334
[instance] 0x0 #1334
[end-of-instance]
[mk-app] #1336 not #1333
[mk-app] #1337 = #1323 #1336
[mk-proof] #1338 monotonicity #1335 #1337
[mk-app] #1339 + #1275 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1324
[mk-app] #1340 = #1324 #1339
[mk-proof] #1341 rewrite #1340
[instance] 0x0 #1340
[end-of-instance]
[mk-app] #1342 >= #1339 #55
[mk-app] #1343 = #1325 #1342
[mk-proof] #1344 monotonicity #1341 #1343
[attach-meaning] #1304 arith (- 11)
[attach-meaning] #82 arith (- 1)
[mk-app] #1345 <= #122 #1275
[inst-discovered] theory-solving 0x0 arith# ; #1342
[mk-app] #1346 = #1342 #1345
[mk-proof] #1347 rewrite #1346
[instance] 0x0 #1346
[end-of-instance]
[mk-app] #1348 = #1325 #1345
[mk-proof] #1349 trans #1344 #1347 #1348
[mk-app] #1350 or #1336 #1345 #1331
[mk-app] #1351 = #1332 #1350
[mk-proof] #1352 monotonicity #1338 #1349 #1351
[mk-app] #1353 or #313 #1336 #1345 #1331
[mk-app] #1354 or #313 #1332
[mk-proof] #1355 quant-inst #1354
[mk-app] #1356 or #313 #1350
[mk-app] #1357 = #1354 #1356
[mk-proof] #1358 monotonicity #1352 #1357
[mk-app] #1359 = #1356 #1353
[mk-proof] #1360 rewrite #1359
[mk-app] #1361 = #1354 #1353
[mk-proof] #1362 trans #1358 #1360 #1361
[mk-proof] #1363 mp #1355 #1362 #1353
[instance] 0x125935868 #1355 ; 22
[assign] #1333 justification -1: p106
[assign] (not #1345) justification -1: (not p5)
[attach-enode] #1326 22
[attach-enode] #1327 22
[attach-enode] #1328 22
[attach-enode] #1329 22
[attach-enode] #1330 22
[assign] #1331 justification -1: p3 p116 (not p117)
[end-of-instance]
[assign] #1320 clause p114 (not p113)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 11::Int idx))))) -11::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 11::Int idx))))) -11::Int)) 

[assign] #1321 clause p115 (not p113)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 11::Int idx))))) -11::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 11::Int idx))))) -11::Int)) 

[mk-app] #1364 = #1231 #1326
[attach-meaning] #82 arith (- 1)
[mk-app] #1365 * #82 #1326
[mk-app] #1366 + #1231 #1365
[mk-app] #1367 <= #1366 #55
[mk-app] #1368 >= #1366 #55
[assign] #1364 justification -1: p112
[attach-enode] #1364 0
[attach-enode] #1365 0
[attach-enode] #1366 0
[assign] #1367 justification -1: p119
[assign] #1368 justification -1: p119
[new-match] 0x125954d90 #49 #37 #1276 #60 ; #1327 (#1279 #1279)
[mk-app] #1369 + #33 #1276
[mk-app] #1370 slot #60 #1369
[mk-app] #1371 = #1327 #1370
[mk-app] #1372 Int
[attach-meaning] #1372 arith 12
[mk-app] #1373 + #1372 #102
[inst-discovered] theory-solving 0x0 arith# ; #1369
[mk-app] #1374 = #1369 #1373
[mk-proof] #1375 rewrite #1374
[instance] 0x0 #1374
[end-of-instance]
[mk-app] #1376 slot #60 #1373
[mk-app] #1377 = #1370 #1376
[mk-proof] #1378 monotonicity #1375 #1377
[mk-app] #1379 = #1327 #1376
[mk-app] #1380 = #1371 #1379
[mk-proof] #1381 monotonicity #1378 #1380
[mk-app] #1382 or #293 #1379
[mk-app] #1383 or #293 #1371
[mk-proof] #1384 quant-inst #1383
[mk-app] #1385 = #1383 #1382
[mk-proof] #1386 monotonicity #1381 #1385
[mk-app] #1387 = #1382 #1382
[mk-proof] #1388 rewrite #1387
[mk-proof] #1389 trans #1386 #1388 #1385
[mk-proof] #1390 mp #1384 #1389 #1382
[instance] 0x125954d90 #1384 ; 23
[attach-enode] #1372 23
[attach-enode] #1373 23
[attach-enode] #1376 23
[attach-enode] #1379 23
[assign] #1379 justification -1: p2
[end-of-instance]
[eq-expl] #1373 root
[new-match] 0x1259550f0 #209 #29 #1373 #60 ; #1376
[eq-expl] #1327 lit #1379 ; #1376
[eq-expl] #1376 root
[new-match] 0x125955128 #96 #67 #1373 ; #1328 (#59 #59) (#1327 #1376) (#60 #60)
[mk-app] #1391 slot_inverse #60 #1376
[mk-app] #1392 * #82 #1391
[mk-app] #1393 + #1373 #1392
[mk-app] #1394 = #1393 #55
[mk-app] #1395 + #1372 #102 #1392
[inst-discovered] theory-solving 0x0 arith# ; #1393
[mk-app] #1396 = #1393 #1395
[mk-proof] #1397 rewrite #1396
[instance] 0x0 #1396
[end-of-instance]
[mk-app] #1398 = #1395 #55
[mk-app] #1399 = #1394 #1398
[mk-proof] #1400 monotonicity #1397 #1399
[mk-app] #1401 Int
[attach-meaning] #1401 arith (- 12)
[mk-app] #1402 + #102 #1392
[mk-app] #1403 = #1402 #1401
[inst-discovered] theory-solving 0x0 arith# ; #1398
[mk-app] #1404 = #1398 #1403
[mk-proof] #1405 rewrite #1404
[instance] 0x0 #1404
[end-of-instance]
[mk-app] #1406 = #1394 #1403
[mk-proof] #1407 trans #1400 #1405 #1406
[mk-app] #1408 or #285 #1403
[mk-app] #1409 or #285 #1394
[mk-proof] #1410 quant-inst #1409
[mk-app] #1411 = #1409 #1408
[mk-proof] #1412 monotonicity #1407 #1411
[mk-app] #1413 = #1408 #1408
[mk-proof] #1414 rewrite #1413
[mk-proof] #1415 trans #1412 #1414 #1411
[mk-proof] #1416 mp #1410 #1415 #1408
[instance] 0x1259550f0 #1410 ; 24
[attach-enode] #1391 24
[attach-enode] #1392 24
[attach-enode] #1402 24
[attach-enode] #1401 24
[attach-enode] #1403 24
[mk-app] #1417 <= #1402 #1401
[mk-app] #1418 >= #1402 #1401
[assign] #1403 justification -1: p1
[end-of-instance]
[mk-app] #1419 >= #1373 #55
[mk-app] #1420 not #1419
[mk-app] #1421 + #1373 #83
[mk-app] #1422 >= #1421 #55
[mk-app] #1423 lookup #59 #1376
[mk-app] #1424 next #1376
[mk-app] #1425 lookup #59 #1424
[mk-app] #1426 * #82 #1425
[mk-app] #1427 + #1423 #1426
[mk-app] #1428 <= #1427 #55
[mk-app] #1429 or #1420 #1422 #1428
[attach-meaning] #1401 arith (- 12)
[mk-app] #1430 >= #102 #1401
[inst-discovered] theory-solving 0x0 arith# ; #1419
[mk-app] #1431 = #1419 #1430
[mk-proof] #1432 rewrite #1431
[instance] 0x0 #1431
[end-of-instance]
[mk-app] #1433 not #1430
[mk-app] #1434 = #1420 #1433
[mk-proof] #1435 monotonicity #1432 #1434
[mk-app] #1436 + #1372 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1421
[mk-app] #1437 = #1421 #1436
[mk-proof] #1438 rewrite #1437
[instance] 0x0 #1437
[end-of-instance]
[mk-app] #1439 >= #1436 #55
[mk-app] #1440 = #1422 #1439
[mk-proof] #1441 monotonicity #1438 #1440
[attach-meaning] #1401 arith (- 12)
[attach-meaning] #82 arith (- 1)
[mk-app] #1442 <= #122 #1372
[inst-discovered] theory-solving 0x0 arith# ; #1439
[mk-app] #1443 = #1439 #1442
[mk-proof] #1444 rewrite #1443
[instance] 0x0 #1443
[end-of-instance]
[mk-app] #1445 = #1422 #1442
[mk-proof] #1446 trans #1441 #1444 #1445
[mk-app] #1447 or #1433 #1442 #1428
[mk-app] #1448 = #1429 #1447
[mk-proof] #1449 monotonicity #1435 #1446 #1448
[mk-app] #1450 or #313 #1433 #1442 #1428
[mk-app] #1451 or #313 #1429
[mk-proof] #1452 quant-inst #1451
[mk-app] #1453 or #313 #1447
[mk-app] #1454 = #1451 #1453
[mk-proof] #1455 monotonicity #1449 #1454
[mk-app] #1456 = #1453 #1450
[mk-proof] #1457 rewrite #1456
[mk-app] #1458 = #1451 #1450
[mk-proof] #1459 trans #1455 #1457 #1458
[mk-proof] #1460 mp #1452 #1459 #1450
[instance] 0x125955128 #1452 ; 24
[assign] #1430 justification -1: p116
[assign] (not #1442) justification -1: (not p5)
[attach-enode] #1423 24
[attach-enode] #1424 24
[attach-enode] #1425 24
[attach-enode] #1426 24
[attach-enode] #1427 24
[assign] #1428 justification -1: p3 p126 (not p127)
[end-of-instance]
[assign] #1417 clause p124 (not p123)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 12::Int idx))))) -12::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 12::Int idx))))) -12::Int)) 

[assign] #1418 clause p125 (not p123)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 12::Int idx))))) -12::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 12::Int idx))))) -12::Int)) 

[mk-app] #1461 = #1328 #1423
[attach-meaning] #82 arith (- 1)
[mk-app] #1462 * #82 #1423
[mk-app] #1463 + #1328 #1462
[mk-app] #1464 <= #1463 #55
[mk-app] #1465 >= #1463 #55
[assign] #1461 justification -1: p122
[attach-enode] #1461 0
[attach-enode] #1462 0
[attach-enode] #1463 0
[assign] #1464 justification -1: p129
[assign] #1465 justification -1: p129
[new-match] 0x125955df8 #49 #37 #1373 #60 ; #1424 (#1376 #1376)
[mk-app] #1466 + #33 #1373
[mk-app] #1467 slot #60 #1466
[mk-app] #1468 = #1424 #1467
[mk-app] #1469 Int
[attach-meaning] #1469 arith 13
[mk-app] #1470 + #1469 #102
[inst-discovered] theory-solving 0x0 arith# ; #1466
[mk-app] #1471 = #1466 #1470
[mk-proof] #1472 rewrite #1471
[instance] 0x0 #1471
[end-of-instance]
[mk-app] #1473 slot #60 #1470
[mk-app] #1474 = #1467 #1473
[mk-proof] #1475 monotonicity #1472 #1474
[mk-app] #1476 = #1424 #1473
[mk-app] #1477 = #1468 #1476
[mk-proof] #1478 monotonicity #1475 #1477
[mk-app] #1479 or #293 #1476
[mk-app] #1480 or #293 #1468
[mk-proof] #1481 quant-inst #1480
[mk-app] #1482 = #1480 #1479
[mk-proof] #1483 monotonicity #1478 #1482
[mk-app] #1484 = #1479 #1479
[mk-proof] #1485 rewrite #1484
[mk-proof] #1486 trans #1483 #1485 #1482
[mk-proof] #1487 mp #1481 #1486 #1479
[instance] 0x125955df8 #1481 ; 25
[attach-enode] #1469 25
[attach-enode] #1470 25
[attach-enode] #1473 25
[attach-enode] #1476 25
[assign] #1476 justification -1: p2
[end-of-instance]
[eq-expl] #1470 root
[new-match] 0x125956158 #209 #29 #1470 #60 ; #1473
[eq-expl] #1424 lit #1476 ; #1473
[eq-expl] #1473 root
[new-match] 0x125956190 #96 #67 #1470 ; #1425 (#59 #59) (#1424 #1473) (#60 #60)
[mk-app] #1488 slot_inverse #60 #1473
[mk-app] #1489 * #82 #1488
[mk-app] #1490 + #1470 #1489
[mk-app] #1491 = #1490 #55
[mk-app] #1492 + #1469 #102 #1489
[inst-discovered] theory-solving 0x0 arith# ; #1490
[mk-app] #1493 = #1490 #1492
[mk-proof] #1494 rewrite #1493
[instance] 0x0 #1493
[end-of-instance]
[mk-app] #1495 = #1492 #55
[mk-app] #1496 = #1491 #1495
[mk-proof] #1497 monotonicity #1494 #1496
[mk-app] #1498 Int
[attach-meaning] #1498 arith (- 13)
[mk-app] #1499 + #102 #1489
[mk-app] #1500 = #1499 #1498
[inst-discovered] theory-solving 0x0 arith# ; #1495
[mk-app] #1501 = #1495 #1500
[mk-proof] #1502 rewrite #1501
[instance] 0x0 #1501
[end-of-instance]
[mk-app] #1503 = #1491 #1500
[mk-proof] #1504 trans #1497 #1502 #1503
[mk-app] #1505 or #285 #1500
[mk-app] #1506 or #285 #1491
[mk-proof] #1507 quant-inst #1506
[mk-app] #1508 = #1506 #1505
[mk-proof] #1509 monotonicity #1504 #1508
[mk-app] #1510 = #1505 #1505
[mk-proof] #1511 rewrite #1510
[mk-proof] #1512 trans #1509 #1511 #1508
[mk-proof] #1513 mp #1507 #1512 #1505
[instance] 0x125956158 #1507 ; 26
[attach-enode] #1488 26
[attach-enode] #1489 26
[attach-enode] #1499 26
[attach-enode] #1498 26
[attach-enode] #1500 26
[mk-app] #1514 <= #1499 #1498
[mk-app] #1515 >= #1499 #1498
[assign] #1500 justification -1: p1
[end-of-instance]
[mk-app] #1516 >= #1470 #55
[mk-app] #1517 not #1516
[mk-app] #1518 + #1470 #83
[mk-app] #1519 >= #1518 #55
[mk-app] #1520 lookup #59 #1473
[mk-app] #1521 next #1473
[mk-app] #1522 lookup #59 #1521
[mk-app] #1523 * #82 #1522
[mk-app] #1524 + #1520 #1523
[mk-app] #1525 <= #1524 #55
[mk-app] #1526 or #1517 #1519 #1525
[attach-meaning] #1498 arith (- 13)
[mk-app] #1527 >= #102 #1498
[inst-discovered] theory-solving 0x0 arith# ; #1516
[mk-app] #1528 = #1516 #1527
[mk-proof] #1529 rewrite #1528
[instance] 0x0 #1528
[end-of-instance]
[mk-app] #1530 not #1527
[mk-app] #1531 = #1517 #1530
[mk-proof] #1532 monotonicity #1529 #1531
[mk-app] #1533 + #1469 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1518
[mk-app] #1534 = #1518 #1533
[mk-proof] #1535 rewrite #1534
[instance] 0x0 #1534
[end-of-instance]
[mk-app] #1536 >= #1533 #55
[mk-app] #1537 = #1519 #1536
[mk-proof] #1538 monotonicity #1535 #1537
[attach-meaning] #1498 arith (- 13)
[attach-meaning] #82 arith (- 1)
[mk-app] #1539 <= #122 #1469
[inst-discovered] theory-solving 0x0 arith# ; #1536
[mk-app] #1540 = #1536 #1539
[mk-proof] #1541 rewrite #1540
[instance] 0x0 #1540
[end-of-instance]
[mk-app] #1542 = #1519 #1539
[mk-proof] #1543 trans #1538 #1541 #1542
[mk-app] #1544 or #1530 #1539 #1525
[mk-app] #1545 = #1526 #1544
[mk-proof] #1546 monotonicity #1532 #1543 #1545
[mk-app] #1547 or #313 #1530 #1539 #1525
[mk-app] #1548 or #313 #1526
[mk-proof] #1549 quant-inst #1548
[mk-app] #1550 or #313 #1544
[mk-app] #1551 = #1548 #1550
[mk-proof] #1552 monotonicity #1546 #1551
[mk-app] #1553 = #1550 #1547
[mk-proof] #1554 rewrite #1553
[mk-app] #1555 = #1548 #1547
[mk-proof] #1556 trans #1552 #1554 #1555
[mk-proof] #1557 mp #1549 #1556 #1547
[instance] 0x125956190 #1549 ; 26
[assign] #1527 justification -1: p126
[assign] (not #1539) justification -1: (not p5)
[attach-enode] #1520 26
[attach-enode] #1521 26
[attach-enode] #1522 26
[attach-enode] #1523 26
[attach-enode] #1524 26
[assign] #1525 justification -1: p3 p136 (not p137)
[end-of-instance]
[assign] #1514 clause p134 (not p133)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 13::Int idx))))) -13::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 13::Int idx))))) -13::Int)) 

[assign] #1515 clause p135 (not p133)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 13::Int idx))))) -13::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 13::Int idx))))) -13::Int)) 

[mk-app] #1558 = #1425 #1520
[attach-meaning] #82 arith (- 1)
[mk-app] #1559 * #82 #1520
[mk-app] #1560 + #1425 #1559
[mk-app] #1561 <= #1560 #55
[mk-app] #1562 >= #1560 #55
[assign] #1558 justification -1: p132
[attach-enode] #1558 0
[attach-enode] #1559 0
[attach-enode] #1560 0
[assign] #1561 justification -1: p139
[assign] #1562 justification -1: p139
[new-match] 0x12595d0b0 #49 #37 #1470 #60 ; #1521 (#1473 #1473)
[mk-app] #1563 + #33 #1470
[mk-app] #1564 slot #60 #1563
[mk-app] #1565 = #1521 #1564
[mk-app] #1566 Int
[attach-meaning] #1566 arith 14
[mk-app] #1567 + #1566 #102
[inst-discovered] theory-solving 0x0 arith# ; #1563
[mk-app] #1568 = #1563 #1567
[mk-proof] #1569 rewrite #1568
[instance] 0x0 #1568
[end-of-instance]
[mk-app] #1570 slot #60 #1567
[mk-app] #1571 = #1564 #1570
[mk-proof] #1572 monotonicity #1569 #1571
[mk-app] #1573 = #1521 #1570
[mk-app] #1574 = #1565 #1573
[mk-proof] #1575 monotonicity #1572 #1574
[mk-app] #1576 or #293 #1573
[mk-app] #1577 or #293 #1565
[mk-proof] #1578 quant-inst #1577
[mk-app] #1579 = #1577 #1576
[mk-proof] #1580 monotonicity #1575 #1579
[mk-app] #1581 = #1576 #1576
[mk-proof] #1582 rewrite #1581
[mk-proof] #1583 trans #1580 #1582 #1579
[mk-proof] #1584 mp #1578 #1583 #1576
[instance] 0x12595d0b0 #1578 ; 27
[attach-enode] #1566 27
[attach-enode] #1567 27
[attach-enode] #1570 27
[attach-enode] #1573 27
[assign] #1573 justification -1: p2
[end-of-instance]
[eq-expl] #1567 root
[new-match] 0x12595d410 #209 #29 #1567 #60 ; #1570
[eq-expl] #1521 lit #1573 ; #1570
[eq-expl] #1570 root
[new-match] 0x12595d448 #96 #67 #1567 ; #1522 (#59 #59) (#1521 #1570) (#60 #60)
[mk-app] #1585 slot_inverse #60 #1570
[mk-app] #1586 * #82 #1585
[mk-app] #1587 + #1567 #1586
[mk-app] #1588 = #1587 #55
[mk-app] #1589 + #1566 #102 #1586
[inst-discovered] theory-solving 0x0 arith# ; #1587
[mk-app] #1590 = #1587 #1589
[mk-proof] #1591 rewrite #1590
[instance] 0x0 #1590
[end-of-instance]
[mk-app] #1592 = #1589 #55
[mk-app] #1593 = #1588 #1592
[mk-proof] #1594 monotonicity #1591 #1593
[mk-app] #1595 Int
[attach-meaning] #1595 arith (- 14)
[mk-app] #1596 + #102 #1586
[mk-app] #1597 = #1596 #1595
[inst-discovered] theory-solving 0x0 arith# ; #1592
[mk-app] #1598 = #1592 #1597
[mk-proof] #1599 rewrite #1598
[instance] 0x0 #1598
[end-of-instance]
[mk-app] #1600 = #1588 #1597
[mk-proof] #1601 trans #1594 #1599 #1600
[mk-app] #1602 or #285 #1597
[mk-app] #1603 or #285 #1588
[mk-proof] #1604 quant-inst #1603
[mk-app] #1605 = #1603 #1602
[mk-proof] #1606 monotonicity #1601 #1605
[mk-app] #1607 = #1602 #1602
[mk-proof] #1608 rewrite #1607
[mk-proof] #1609 trans #1606 #1608 #1605
[mk-proof] #1610 mp #1604 #1609 #1602
[instance] 0x12595d410 #1604 ; 28
[attach-enode] #1585 28
[attach-enode] #1586 28
[attach-enode] #1596 28
[attach-enode] #1595 28
[attach-enode] #1597 28
[mk-app] #1611 <= #1596 #1595
[mk-app] #1612 >= #1596 #1595
[assign] #1597 justification -1: p1
[end-of-instance]
[mk-app] #1613 >= #1567 #55
[mk-app] #1614 not #1613
[mk-app] #1615 + #1567 #83
[mk-app] #1616 >= #1615 #55
[mk-app] #1617 lookup #59 #1570
[mk-app] #1618 next #1570
[mk-app] #1619 lookup #59 #1618
[mk-app] #1620 * #82 #1619
[mk-app] #1621 + #1617 #1620
[mk-app] #1622 <= #1621 #55
[mk-app] #1623 or #1614 #1616 #1622
[attach-meaning] #1595 arith (- 14)
[mk-app] #1624 >= #102 #1595
[inst-discovered] theory-solving 0x0 arith# ; #1613
[mk-app] #1625 = #1613 #1624
[mk-proof] #1626 rewrite #1625
[instance] 0x0 #1625
[end-of-instance]
[mk-app] #1627 not #1624
[mk-app] #1628 = #1614 #1627
[mk-proof] #1629 monotonicity #1626 #1628
[mk-app] #1630 + #1566 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1615
[mk-app] #1631 = #1615 #1630
[mk-proof] #1632 rewrite #1631
[instance] 0x0 #1631
[end-of-instance]
[mk-app] #1633 >= #1630 #55
[mk-app] #1634 = #1616 #1633
[mk-proof] #1635 monotonicity #1632 #1634
[attach-meaning] #1595 arith (- 14)
[attach-meaning] #82 arith (- 1)
[mk-app] #1636 <= #122 #1566
[inst-discovered] theory-solving 0x0 arith# ; #1633
[mk-app] #1637 = #1633 #1636
[mk-proof] #1638 rewrite #1637
[instance] 0x0 #1637
[end-of-instance]
[mk-app] #1639 = #1616 #1636
[mk-proof] #1640 trans #1635 #1638 #1639
[mk-app] #1641 or #1627 #1636 #1622
[mk-app] #1642 = #1623 #1641
[mk-proof] #1643 monotonicity #1629 #1640 #1642
[mk-app] #1644 or #313 #1627 #1636 #1622
[mk-app] #1645 or #313 #1623
[mk-proof] #1646 quant-inst #1645
[mk-app] #1647 or #313 #1641
[mk-app] #1648 = #1645 #1647
[mk-proof] #1649 monotonicity #1643 #1648
[mk-app] #1650 = #1647 #1644
[mk-proof] #1651 rewrite #1650
[mk-app] #1652 = #1645 #1644
[mk-proof] #1653 trans #1649 #1651 #1652
[mk-proof] #1654 mp #1646 #1653 #1644
[instance] 0x12595d448 #1646 ; 28
[assign] #1624 justification -1: p136
[assign] (not #1636) justification -1: (not p5)
[attach-enode] #1617 28
[attach-enode] #1618 28
[attach-enode] #1619 28
[attach-enode] #1620 28
[attach-enode] #1621 28
[assign] #1622 justification -1: p3 p146 (not p147)
[end-of-instance]
[assign] #1611 clause p144 (not p143)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 14::Int idx))))) -14::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 14::Int idx))))) -14::Int)) 

[assign] #1612 clause p145 (not p143)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 14::Int idx))))) -14::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 14::Int idx))))) -14::Int)) 

[mk-app] #1655 = #1522 #1617
[attach-meaning] #82 arith (- 1)
[mk-app] #1656 * #82 #1617
[mk-app] #1657 + #1522 #1656
[mk-app] #1658 <= #1657 #55
[mk-app] #1659 >= #1657 #55
[assign] #1655 justification -1: p142
[attach-enode] #1655 0
[attach-enode] #1656 0
[attach-enode] #1657 0
[assign] #1658 justification -1: p149
[assign] #1659 justification -1: p149
[new-match] 0x12595e118 #49 #37 #1567 #60 ; #1618 (#1570 #1570)
[mk-app] #1660 + #33 #1567
[mk-app] #1661 slot #60 #1660
[mk-app] #1662 = #1618 #1661
[mk-app] #1663 Int
[attach-meaning] #1663 arith 15
[mk-app] #1664 + #1663 #102
[inst-discovered] theory-solving 0x0 arith# ; #1660
[mk-app] #1665 = #1660 #1664
[mk-proof] #1666 rewrite #1665
[instance] 0x0 #1665
[end-of-instance]
[mk-app] #1667 slot #60 #1664
[mk-app] #1668 = #1661 #1667
[mk-proof] #1669 monotonicity #1666 #1668
[mk-app] #1670 = #1618 #1667
[mk-app] #1671 = #1662 #1670
[mk-proof] #1672 monotonicity #1669 #1671
[mk-app] #1673 or #293 #1670
[mk-app] #1674 or #293 #1662
[mk-proof] #1675 quant-inst #1674
[mk-app] #1676 = #1674 #1673
[mk-proof] #1677 monotonicity #1672 #1676
[mk-app] #1678 = #1673 #1673
[mk-proof] #1679 rewrite #1678
[mk-proof] #1680 trans #1677 #1679 #1676
[mk-proof] #1681 mp #1675 #1680 #1673
[instance] 0x12595e118 #1675 ; 29
[attach-enode] #1663 29
[attach-enode] #1664 29
[attach-enode] #1667 29
[attach-enode] #1670 29
[assign] #1670 justification -1: p2
[end-of-instance]
[eq-expl] #1664 root
[new-match] 0x12595e478 #209 #29 #1664 #60 ; #1667
[eq-expl] #1618 lit #1670 ; #1667
[eq-expl] #1667 root
[new-match] 0x12595e4b0 #96 #67 #1664 ; #1619 (#59 #59) (#1618 #1667) (#60 #60)
[mk-app] #1682 slot_inverse #60 #1667
[mk-app] #1683 * #82 #1682
[mk-app] #1684 + #1664 #1683
[mk-app] #1685 = #1684 #55
[mk-app] #1686 + #1663 #102 #1683
[inst-discovered] theory-solving 0x0 arith# ; #1684
[mk-app] #1687 = #1684 #1686
[mk-proof] #1688 rewrite #1687
[instance] 0x0 #1687
[end-of-instance]
[mk-app] #1689 = #1686 #55
[mk-app] #1690 = #1685 #1689
[mk-proof] #1691 monotonicity #1688 #1690
[mk-app] #1692 Int
[attach-meaning] #1692 arith (- 15)
[mk-app] #1693 + #102 #1683
[mk-app] #1694 = #1693 #1692
[inst-discovered] theory-solving 0x0 arith# ; #1689
[mk-app] #1695 = #1689 #1694
[mk-proof] #1696 rewrite #1695
[instance] 0x0 #1695
[end-of-instance]
[mk-app] #1697 = #1685 #1694
[mk-proof] #1698 trans #1691 #1696 #1697
[mk-app] #1699 or #285 #1694
[mk-app] #1700 or #285 #1685
[mk-proof] #1701 quant-inst #1700
[mk-app] #1702 = #1700 #1699
[mk-proof] #1703 monotonicity #1698 #1702
[mk-app] #1704 = #1699 #1699
[mk-proof] #1705 rewrite #1704
[mk-proof] #1706 trans #1703 #1705 #1702
[mk-proof] #1707 mp #1701 #1706 #1699
[instance] 0x12595e478 #1701 ; 30
[attach-enode] #1682 30
[attach-enode] #1683 30
[attach-enode] #1693 30
[attach-enode] #1692 30
[attach-enode] #1694 30
[mk-app] #1708 <= #1693 #1692
[mk-app] #1709 >= #1693 #1692
[assign] #1694 justification -1: p1
[end-of-instance]
[mk-app] #1710 >= #1664 #55
[mk-app] #1711 not #1710
[mk-app] #1712 + #1664 #83
[mk-app] #1713 >= #1712 #55
[mk-app] #1714 lookup #59 #1667
[mk-app] #1715 next #1667
[mk-app] #1716 lookup #59 #1715
[mk-app] #1717 * #82 #1716
[mk-app] #1718 + #1714 #1717
[mk-app] #1719 <= #1718 #55
[mk-app] #1720 or #1711 #1713 #1719
[attach-meaning] #1692 arith (- 15)
[mk-app] #1721 >= #102 #1692
[inst-discovered] theory-solving 0x0 arith# ; #1710
[mk-app] #1722 = #1710 #1721
[mk-proof] #1723 rewrite #1722
[instance] 0x0 #1722
[end-of-instance]
[mk-app] #1724 not #1721
[mk-app] #1725 = #1711 #1724
[mk-proof] #1726 monotonicity #1723 #1725
[mk-app] #1727 + #1663 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1712
[mk-app] #1728 = #1712 #1727
[mk-proof] #1729 rewrite #1728
[instance] 0x0 #1728
[end-of-instance]
[mk-app] #1730 >= #1727 #55
[mk-app] #1731 = #1713 #1730
[mk-proof] #1732 monotonicity #1729 #1731
[attach-meaning] #1692 arith (- 15)
[attach-meaning] #82 arith (- 1)
[mk-app] #1733 <= #122 #1663
[inst-discovered] theory-solving 0x0 arith# ; #1730
[mk-app] #1734 = #1730 #1733
[mk-proof] #1735 rewrite #1734
[instance] 0x0 #1734
[end-of-instance]
[mk-app] #1736 = #1713 #1733
[mk-proof] #1737 trans #1732 #1735 #1736
[mk-app] #1738 or #1724 #1733 #1719
[mk-app] #1739 = #1720 #1738
[mk-proof] #1740 monotonicity #1726 #1737 #1739
[mk-app] #1741 or #313 #1724 #1733 #1719
[mk-app] #1742 or #313 #1720
[mk-proof] #1743 quant-inst #1742
[mk-app] #1744 or #313 #1738
[mk-app] #1745 = #1742 #1744
[mk-proof] #1746 monotonicity #1740 #1745
[mk-app] #1747 = #1744 #1741
[mk-proof] #1748 rewrite #1747
[mk-app] #1749 = #1742 #1741
[mk-proof] #1750 trans #1746 #1748 #1749
[mk-proof] #1751 mp #1743 #1750 #1741
[instance] 0x12595e4b0 #1743 ; 30
[assign] #1721 justification -1: p146
[assign] (not #1733) justification -1: (not p5)
[attach-enode] #1714 30
[attach-enode] #1715 30
[attach-enode] #1716 30
[attach-enode] #1717 30
[attach-enode] #1718 30
[assign] #1719 justification -1: p3 p156 (not p157)
[end-of-instance]
[assign] #1708 clause p154 (not p153)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 15::Int idx))))) -15::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 15::Int idx))))) -15::Int)) 

[assign] #1709 clause p155 (not p153)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 15::Int idx))))) -15::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 15::Int idx))))) -15::Int)) 

[mk-app] #1752 = #1619 #1714
[attach-meaning] #82 arith (- 1)
[mk-app] #1753 * #82 #1714
[mk-app] #1754 + #1619 #1753
[mk-app] #1755 <= #1754 #55
[mk-app] #1756 >= #1754 #55
[assign] #1752 justification -1: p152
[attach-enode] #1752 0
[attach-enode] #1753 0
[attach-enode] #1754 0
[assign] #1755 justification -1: p159
[assign] #1756 justification -1: p159
[new-match] 0x1259455a8 #49 #37 #1664 #60 ; #1715 (#1667 #1667)
[mk-app] #1757 + #33 #1664
[mk-app] #1758 slot #60 #1757
[mk-app] #1759 = #1715 #1758
[mk-app] #1760 Int
[attach-meaning] #1760 arith 16
[mk-app] #1761 + #1760 #102
[inst-discovered] theory-solving 0x0 arith# ; #1757
[mk-app] #1762 = #1757 #1761
[mk-proof] #1763 rewrite #1762
[instance] 0x0 #1762
[end-of-instance]
[mk-app] #1764 slot #60 #1761
[mk-app] #1765 = #1758 #1764
[mk-proof] #1766 monotonicity #1763 #1765
[mk-app] #1767 = #1715 #1764
[mk-app] #1768 = #1759 #1767
[mk-proof] #1769 monotonicity #1766 #1768
[mk-app] #1770 or #293 #1767
[mk-app] #1771 or #293 #1759
[mk-proof] #1772 quant-inst #1771
[mk-app] #1773 = #1771 #1770
[mk-proof] #1774 monotonicity #1769 #1773
[mk-app] #1775 = #1770 #1770
[mk-proof] #1776 rewrite #1775
[mk-proof] #1777 trans #1774 #1776 #1773
[mk-proof] #1778 mp #1772 #1777 #1770
[instance] 0x1259455a8 #1772 ; 31
[attach-enode] #1760 31
[attach-enode] #1761 31
[attach-enode] #1764 31
[attach-enode] #1767 31
[assign] #1767 justification -1: p2
[end-of-instance]
[eq-expl] #1761 root
[new-match] 0x125945908 #209 #29 #1761 #60 ; #1764
[eq-expl] #1715 lit #1767 ; #1764
[eq-expl] #1764 root
[new-match] 0x125945940 #96 #67 #1761 ; #1716 (#59 #59) (#1715 #1764) (#60 #60)
[mk-app] #1779 slot_inverse #60 #1764
[mk-app] #1780 * #82 #1779
[mk-app] #1781 + #1761 #1780
[mk-app] #1782 = #1781 #55
[mk-app] #1783 + #1760 #102 #1780
[inst-discovered] theory-solving 0x0 arith# ; #1781
[mk-app] #1784 = #1781 #1783
[mk-proof] #1785 rewrite #1784
[instance] 0x0 #1784
[end-of-instance]
[mk-app] #1786 = #1783 #55
[mk-app] #1787 = #1782 #1786
[mk-proof] #1788 monotonicity #1785 #1787
[mk-app] #1789 Int
[attach-meaning] #1789 arith (- 16)
[mk-app] #1790 + #102 #1780
[mk-app] #1791 = #1790 #1789
[inst-discovered] theory-solving 0x0 arith# ; #1786
[mk-app] #1792 = #1786 #1791
[mk-proof] #1793 rewrite #1792
[instance] 0x0 #1792
[end-of-instance]
[mk-app] #1794 = #1782 #1791
[mk-proof] #1795 trans #1788 #1793 #1794
[mk-app] #1796 or #285 #1791
[mk-app] #1797 or #285 #1782
[mk-proof] #1798 quant-inst #1797
[mk-app] #1799 = #1797 #1796
[mk-proof] #1800 monotonicity #1795 #1799
[mk-app] #1801 = #1796 #1796
[mk-proof] #1802 rewrite #1801
[mk-proof] #1803 trans #1800 #1802 #1799
[mk-proof] #1804 mp #1798 #1803 #1796
[instance] 0x125945908 #1798 ; 32
[attach-enode] #1779 32
[attach-enode] #1780 32
[attach-enode] #1790 32
[attach-enode] #1789 32
[attach-enode] #1791 32
[mk-app] #1805 <= #1790 #1789
[mk-app] #1806 >= #1790 #1789
[assign] #1791 justification -1: p1
[end-of-instance]
[mk-app] #1807 >= #1761 #55
[mk-app] #1808 not #1807
[mk-app] #1809 + #1761 #83
[mk-app] #1810 >= #1809 #55
[mk-app] #1811 lookup #59 #1764
[mk-app] #1812 next #1764
[mk-app] #1813 lookup #59 #1812
[mk-app] #1814 * #82 #1813
[mk-app] #1815 + #1811 #1814
[mk-app] #1816 <= #1815 #55
[mk-app] #1817 or #1808 #1810 #1816
[attach-meaning] #1789 arith (- 16)
[mk-app] #1818 >= #102 #1789
[inst-discovered] theory-solving 0x0 arith# ; #1807
[mk-app] #1819 = #1807 #1818
[mk-proof] #1820 rewrite #1819
[instance] 0x0 #1819
[end-of-instance]
[mk-app] #1821 not #1818
[mk-app] #1822 = #1808 #1821
[mk-proof] #1823 monotonicity #1820 #1822
[attach-meaning] #1760 arith 16
[mk-app] #1824 + #1760 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1809
[mk-app] #1825 = #1809 #1824
[mk-proof] #1826 rewrite #1825
[instance] 0x0 #1825
[end-of-instance]
[mk-app] #1827 >= #1824 #55
[mk-app] #1828 = #1810 #1827
[mk-proof] #1829 monotonicity #1826 #1828
[attach-meaning] #1789 arith (- 16)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #1760 arith 16
[mk-app] #1830 <= #122 #1760
[inst-discovered] theory-solving 0x0 arith# ; #1827
[mk-app] #1831 = #1827 #1830
[mk-proof] #1832 rewrite #1831
[instance] 0x0 #1831
[end-of-instance]
[mk-app] #1833 = #1810 #1830
[mk-proof] #1834 trans #1829 #1832 #1833
[mk-app] #1835 or #1821 #1830 #1816
[mk-app] #1836 = #1817 #1835
[mk-proof] #1837 monotonicity #1823 #1834 #1836
[mk-app] #1838 or #313 #1821 #1830 #1816
[mk-app] #1839 or #313 #1817
[mk-proof] #1840 quant-inst #1839
[mk-app] #1841 or #313 #1835
[mk-app] #1842 = #1839 #1841
[mk-proof] #1843 monotonicity #1837 #1842
[mk-app] #1844 = #1841 #1838
[mk-proof] #1845 rewrite #1844
[mk-app] #1846 = #1839 #1838
[mk-proof] #1847 trans #1843 #1845 #1846
[mk-proof] #1848 mp #1840 #1847 #1838
[instance] 0x125945940 #1840 ; 32
[assign] #1818 justification -1: p156
[assign] (not #1830) justification -1: (not p5)
[attach-enode] #1811 32
[attach-enode] #1812 32
[attach-enode] #1813 32
[attach-enode] #1814 32
[attach-enode] #1815 32
[assign] #1816 justification -1: p3 p166 (not p167)
[end-of-instance]
[assign] #1805 clause p164 (not p163)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 16::Int idx))))) -16::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 16::Int idx))))) -16::Int)) 

[assign] #1806 clause p165 (not p163)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 16::Int idx))))) -16::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 16::Int idx))))) -16::Int)) 

[mk-app] #1849 = #1716 #1811
[attach-meaning] #82 arith (- 1)
[mk-app] #1850 * #82 #1811
[mk-app] #1851 + #1716 #1850
[mk-app] #1852 <= #1851 #55
[mk-app] #1853 >= #1851 #55
[assign] #1849 justification -1: p162
[attach-enode] #1849 0
[attach-enode] #1850 0
[attach-enode] #1851 0
[assign] #1852 justification -1: p169
[assign] #1853 justification -1: p169
[new-match] 0x125946610 #49 #37 #1761 #60 ; #1812 (#1764 #1764)
[mk-app] #1854 + #33 #1761
[mk-app] #1855 slot #60 #1854
[mk-app] #1856 = #1812 #1855
[mk-app] #1857 Int
[attach-meaning] #1857 arith 17
[mk-app] #1858 + #1857 #102
[inst-discovered] theory-solving 0x0 arith# ; #1854
[mk-app] #1859 = #1854 #1858
[mk-proof] #1860 rewrite #1859
[instance] 0x0 #1859
[end-of-instance]
[mk-app] #1861 slot #60 #1858
[mk-app] #1862 = #1855 #1861
[mk-proof] #1863 monotonicity #1860 #1862
[mk-app] #1864 = #1812 #1861
[mk-app] #1865 = #1856 #1864
[mk-proof] #1866 monotonicity #1863 #1865
[mk-app] #1867 or #293 #1864
[mk-app] #1868 or #293 #1856
[mk-proof] #1869 quant-inst #1868
[mk-app] #1870 = #1868 #1867
[mk-proof] #1871 monotonicity #1866 #1870
[mk-app] #1872 = #1867 #1867
[mk-proof] #1873 rewrite #1872
[mk-proof] #1874 trans #1871 #1873 #1870
[mk-proof] #1875 mp #1869 #1874 #1867
[instance] 0x125946610 #1869 ; 33
[attach-enode] #1857 33
[attach-enode] #1858 33
[attach-enode] #1861 33
[attach-enode] #1864 33
[assign] #1864 justification -1: p2
[end-of-instance]
[eq-expl] #1858 root
[new-match] 0x125946970 #209 #29 #1858 #60 ; #1861
[eq-expl] #1812 lit #1864 ; #1861
[eq-expl] #1861 root
[new-match] 0x1259469a8 #96 #67 #1858 ; #1813 (#59 #59) (#1812 #1861) (#60 #60)
[mk-app] #1876 slot_inverse #60 #1861
[mk-app] #1877 * #82 #1876
[mk-app] #1878 + #1858 #1877
[mk-app] #1879 = #1878 #55
[mk-app] #1880 + #1857 #102 #1877
[inst-discovered] theory-solving 0x0 arith# ; #1878
[mk-app] #1881 = #1878 #1880
[mk-proof] #1882 rewrite #1881
[instance] 0x0 #1881
[end-of-instance]
[mk-app] #1883 = #1880 #55
[mk-app] #1884 = #1879 #1883
[mk-proof] #1885 monotonicity #1882 #1884
[mk-app] #1886 Int
[attach-meaning] #1886 arith (- 17)
[mk-app] #1887 + #102 #1877
[mk-app] #1888 = #1887 #1886
[inst-discovered] theory-solving 0x0 arith# ; #1883
[mk-app] #1889 = #1883 #1888
[mk-proof] #1890 rewrite #1889
[instance] 0x0 #1889
[end-of-instance]
[mk-app] #1891 = #1879 #1888
[mk-proof] #1892 trans #1885 #1890 #1891
[mk-app] #1893 or #285 #1888
[mk-app] #1894 or #285 #1879
[mk-proof] #1895 quant-inst #1894
[mk-app] #1896 = #1894 #1893
[mk-proof] #1897 monotonicity #1892 #1896
[mk-app] #1898 = #1893 #1893
[mk-proof] #1899 rewrite #1898
[mk-proof] #1900 trans #1897 #1899 #1896
[mk-proof] #1901 mp #1895 #1900 #1893
[instance] 0x125946970 #1895 ; 34
[attach-enode] #1876 34
[attach-enode] #1877 34
[attach-enode] #1887 34
[attach-enode] #1886 34
[attach-enode] #1888 34
[mk-app] #1902 <= #1887 #1886
[mk-app] #1903 >= #1887 #1886
[assign] #1888 justification -1: p1
[end-of-instance]
[mk-app] #1904 >= #1858 #55
[mk-app] #1905 not #1904
[mk-app] #1906 + #1858 #83
[mk-app] #1907 >= #1906 #55
[mk-app] #1908 lookup #59 #1861
[mk-app] #1909 next #1861
[mk-app] #1910 lookup #59 #1909
[mk-app] #1911 * #82 #1910
[mk-app] #1912 + #1908 #1911
[mk-app] #1913 <= #1912 #55
[mk-app] #1914 or #1905 #1907 #1913
[attach-meaning] #1886 arith (- 17)
[mk-app] #1915 >= #102 #1886
[inst-discovered] theory-solving 0x0 arith# ; #1904
[mk-app] #1916 = #1904 #1915
[mk-proof] #1917 rewrite #1916
[instance] 0x0 #1916
[end-of-instance]
[mk-app] #1918 not #1915
[mk-app] #1919 = #1905 #1918
[mk-proof] #1920 monotonicity #1917 #1919
[attach-meaning] #1857 arith 17
[mk-app] #1921 + #1857 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #1906
[mk-app] #1922 = #1906 #1921
[mk-proof] #1923 rewrite #1922
[instance] 0x0 #1922
[end-of-instance]
[mk-app] #1924 >= #1921 #55
[mk-app] #1925 = #1907 #1924
[mk-proof] #1926 monotonicity #1923 #1925
[attach-meaning] #1886 arith (- 17)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #1857 arith 17
[mk-app] #1927 <= #122 #1857
[inst-discovered] theory-solving 0x0 arith# ; #1924
[mk-app] #1928 = #1924 #1927
[mk-proof] #1929 rewrite #1928
[instance] 0x0 #1928
[end-of-instance]
[mk-app] #1930 = #1907 #1927
[mk-proof] #1931 trans #1926 #1929 #1930
[mk-app] #1932 or #1918 #1927 #1913
[mk-app] #1933 = #1914 #1932
[mk-proof] #1934 monotonicity #1920 #1931 #1933
[mk-app] #1935 or #313 #1918 #1927 #1913
[mk-app] #1936 or #313 #1914
[mk-proof] #1937 quant-inst #1936
[mk-app] #1938 or #313 #1932
[mk-app] #1939 = #1936 #1938
[mk-proof] #1940 monotonicity #1934 #1939
[mk-app] #1941 = #1938 #1935
[mk-proof] #1942 rewrite #1941
[mk-app] #1943 = #1936 #1935
[mk-proof] #1944 trans #1940 #1942 #1943
[mk-proof] #1945 mp #1937 #1944 #1935
[instance] 0x1259469a8 #1937 ; 34
[assign] #1915 justification -1: p166
[assign] (not #1927) justification -1: (not p5)
[attach-enode] #1908 34
[attach-enode] #1909 34
[attach-enode] #1910 34
[attach-enode] #1911 34
[attach-enode] #1912 34
[assign] #1913 justification -1: p3 p176 (not p177)
[end-of-instance]
[assign] #1902 clause p174 (not p173)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 17::Int idx))))) -17::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 17::Int idx))))) -17::Int)) 

[assign] #1903 clause p175 (not p173)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 17::Int idx))))) -17::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 17::Int idx))))) -17::Int)) 

[mk-app] #1946 = #1813 #1908
[attach-meaning] #82 arith (- 1)
[mk-app] #1947 * #82 #1908
[mk-app] #1948 + #1813 #1947
[mk-app] #1949 <= #1948 #55
[mk-app] #1950 >= #1948 #55
[assign] #1946 justification -1: p172
[attach-enode] #1946 0
[attach-enode] #1947 0
[attach-enode] #1948 0
[assign] #1949 justification -1: p179
[assign] #1950 justification -1: p179
[new-match] 0x12597b498 #49 #37 #1858 #60 ; #1909 (#1861 #1861)
[mk-app] #1951 + #33 #1858
[mk-app] #1952 slot #60 #1951
[mk-app] #1953 = #1909 #1952
[mk-app] #1954 Int
[attach-meaning] #1954 arith 18
[mk-app] #1955 + #1954 #102
[inst-discovered] theory-solving 0x0 arith# ; #1951
[mk-app] #1956 = #1951 #1955
[mk-proof] #1957 rewrite #1956
[instance] 0x0 #1956
[end-of-instance]
[mk-app] #1958 slot #60 #1955
[mk-app] #1959 = #1952 #1958
[mk-proof] #1960 monotonicity #1957 #1959
[mk-app] #1961 = #1909 #1958
[mk-app] #1962 = #1953 #1961
[mk-proof] #1963 monotonicity #1960 #1962
[mk-app] #1964 or #293 #1961
[mk-app] #1965 or #293 #1953
[mk-proof] #1966 quant-inst #1965
[mk-app] #1967 = #1965 #1964
[mk-proof] #1968 monotonicity #1963 #1967
[mk-app] #1969 = #1964 #1964
[mk-proof] #1970 rewrite #1969
[mk-proof] #1971 trans #1968 #1970 #1967
[mk-proof] #1972 mp #1966 #1971 #1964
[instance] 0x12597b498 #1966 ; 35
[attach-enode] #1954 35
[attach-enode] #1955 35
[attach-enode] #1958 35
[attach-enode] #1961 35
[assign] #1961 justification -1: p2
[end-of-instance]
[eq-expl] #1955 root
[new-match] 0x12597b7f8 #209 #29 #1955 #60 ; #1958
[eq-expl] #1909 lit #1961 ; #1958
[eq-expl] #1958 root
[new-match] 0x12597b830 #96 #67 #1955 ; #1910 (#59 #59) (#1909 #1958) (#60 #60)
[mk-app] #1973 slot_inverse #60 #1958
[mk-app] #1974 * #82 #1973
[mk-app] #1975 + #1955 #1974
[mk-app] #1976 = #1975 #55
[mk-app] #1977 + #1954 #102 #1974
[inst-discovered] theory-solving 0x0 arith# ; #1975
[mk-app] #1978 = #1975 #1977
[mk-proof] #1979 rewrite #1978
[instance] 0x0 #1978
[end-of-instance]
[mk-app] #1980 = #1977 #55
[mk-app] #1981 = #1976 #1980
[mk-proof] #1982 monotonicity #1979 #1981
[mk-app] #1983 Int
[attach-meaning] #1983 arith (- 18)
[mk-app] #1984 + #102 #1974
[mk-app] #1985 = #1984 #1983
[inst-discovered] theory-solving 0x0 arith# ; #1980
[mk-app] #1986 = #1980 #1985
[mk-proof] #1987 rewrite #1986
[instance] 0x0 #1986
[end-of-instance]
[mk-app] #1988 = #1976 #1985
[mk-proof] #1989 trans #1982 #1987 #1988
[mk-app] #1990 or #285 #1985
[mk-app] #1991 or #285 #1976
[mk-proof] #1992 quant-inst #1991
[mk-app] #1993 = #1991 #1990
[mk-proof] #1994 monotonicity #1989 #1993
[mk-app] #1995 = #1990 #1990
[mk-proof] #1996 rewrite #1995
[mk-proof] #1997 trans #1994 #1996 #1993
[mk-proof] #1998 mp #1992 #1997 #1990
[instance] 0x12597b7f8 #1992 ; 36
[attach-enode] #1973 36
[attach-enode] #1974 36
[attach-enode] #1984 36
[attach-enode] #1983 36
[attach-enode] #1985 36
[mk-app] #1999 <= #1984 #1983
[mk-app] #2000 >= #1984 #1983
[assign] #1985 justification -1: p1
[end-of-instance]
[mk-app] #2001 >= #1955 #55
[mk-app] #2002 not #2001
[mk-app] #2003 + #1955 #83
[mk-app] #2004 >= #2003 #55
[mk-app] #2005 lookup #59 #1958
[mk-app] #2006 next #1958
[mk-app] #2007 lookup #59 #2006
[mk-app] #2008 * #82 #2007
[mk-app] #2009 + #2005 #2008
[mk-app] #2010 <= #2009 #55
[mk-app] #2011 or #2002 #2004 #2010
[attach-meaning] #1983 arith (- 18)
[mk-app] #2012 >= #102 #1983
[inst-discovered] theory-solving 0x0 arith# ; #2001
[mk-app] #2013 = #2001 #2012
[mk-proof] #2014 rewrite #2013
[instance] 0x0 #2013
[end-of-instance]
[mk-app] #2015 not #2012
[mk-app] #2016 = #2002 #2015
[mk-proof] #2017 monotonicity #2014 #2016
[attach-meaning] #1954 arith 18
[mk-app] #2018 + #1954 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2003
[mk-app] #2019 = #2003 #2018
[mk-proof] #2020 rewrite #2019
[instance] 0x0 #2019
[end-of-instance]
[mk-app] #2021 >= #2018 #55
[mk-app] #2022 = #2004 #2021
[mk-proof] #2023 monotonicity #2020 #2022
[attach-meaning] #1983 arith (- 18)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #1954 arith 18
[mk-app] #2024 <= #122 #1954
[inst-discovered] theory-solving 0x0 arith# ; #2021
[mk-app] #2025 = #2021 #2024
[mk-proof] #2026 rewrite #2025
[instance] 0x0 #2025
[end-of-instance]
[mk-app] #2027 = #2004 #2024
[mk-proof] #2028 trans #2023 #2026 #2027
[mk-app] #2029 or #2015 #2024 #2010
[mk-app] #2030 = #2011 #2029
[mk-proof] #2031 monotonicity #2017 #2028 #2030
[mk-app] #2032 or #313 #2015 #2024 #2010
[mk-app] #2033 or #313 #2011
[mk-proof] #2034 quant-inst #2033
[mk-app] #2035 or #313 #2029
[mk-app] #2036 = #2033 #2035
[mk-proof] #2037 monotonicity #2031 #2036
[mk-app] #2038 = #2035 #2032
[mk-proof] #2039 rewrite #2038
[mk-app] #2040 = #2033 #2032
[mk-proof] #2041 trans #2037 #2039 #2040
[mk-proof] #2042 mp #2034 #2041 #2032
[instance] 0x12597b830 #2034 ; 36
[assign] #2012 justification -1: p176
[assign] (not #2024) justification -1: (not p5)
[attach-enode] #2005 36
[attach-enode] #2006 36
[attach-enode] #2007 36
[attach-enode] #2008 36
[attach-enode] #2009 36
[assign] #2010 justification -1: p3 p186 (not p187)
[end-of-instance]
[assign] #1999 clause p184 (not p183)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 18::Int idx))))) -18::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 18::Int idx))))) -18::Int)) 

[assign] #2000 clause p185 (not p183)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 18::Int idx))))) -18::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 18::Int idx))))) -18::Int)) 

[mk-app] #2043 = #1910 #2005
[attach-meaning] #82 arith (- 1)
[mk-app] #2044 * #82 #2005
[mk-app] #2045 + #1910 #2044
[mk-app] #2046 <= #2045 #55
[mk-app] #2047 >= #2045 #55
[assign] #2043 justification -1: p182
[attach-enode] #2043 0
[attach-enode] #2044 0
[attach-enode] #2045 0
[assign] #2046 justification -1: p189
[assign] #2047 justification -1: p189
[new-match] 0x12597c500 #49 #37 #1955 #60 ; #2006 (#1958 #1958)
[mk-app] #2048 + #33 #1955
[mk-app] #2049 slot #60 #2048
[mk-app] #2050 = #2006 #2049
[mk-app] #2051 Int
[attach-meaning] #2051 arith 19
[mk-app] #2052 + #2051 #102
[inst-discovered] theory-solving 0x0 arith# ; #2048
[mk-app] #2053 = #2048 #2052
[mk-proof] #2054 rewrite #2053
[instance] 0x0 #2053
[end-of-instance]
[mk-app] #2055 slot #60 #2052
[mk-app] #2056 = #2049 #2055
[mk-proof] #2057 monotonicity #2054 #2056
[mk-app] #2058 = #2006 #2055
[mk-app] #2059 = #2050 #2058
[mk-proof] #2060 monotonicity #2057 #2059
[mk-app] #2061 or #293 #2058
[mk-app] #2062 or #293 #2050
[mk-proof] #2063 quant-inst #2062
[mk-app] #2064 = #2062 #2061
[mk-proof] #2065 monotonicity #2060 #2064
[mk-app] #2066 = #2061 #2061
[mk-proof] #2067 rewrite #2066
[mk-proof] #2068 trans #2065 #2067 #2064
[mk-proof] #2069 mp #2063 #2068 #2061
[instance] 0x12597c500 #2063 ; 37
[attach-enode] #2051 37
[attach-enode] #2052 37
[attach-enode] #2055 37
[attach-enode] #2058 37
[assign] #2058 justification -1: p2
[end-of-instance]
[eq-expl] #2052 root
[new-match] 0x12597c860 #209 #29 #2052 #60 ; #2055
[eq-expl] #2006 lit #2058 ; #2055
[eq-expl] #2055 root
[new-match] 0x12597c898 #96 #67 #2052 ; #2007 (#59 #59) (#2006 #2055) (#60 #60)
[mk-app] #2070 slot_inverse #60 #2055
[mk-app] #2071 * #82 #2070
[mk-app] #2072 + #2052 #2071
[mk-app] #2073 = #2072 #55
[mk-app] #2074 + #2051 #102 #2071
[inst-discovered] theory-solving 0x0 arith# ; #2072
[mk-app] #2075 = #2072 #2074
[mk-proof] #2076 rewrite #2075
[instance] 0x0 #2075
[end-of-instance]
[mk-app] #2077 = #2074 #55
[mk-app] #2078 = #2073 #2077
[mk-proof] #2079 monotonicity #2076 #2078
[mk-app] #2080 Int
[attach-meaning] #2080 arith (- 19)
[mk-app] #2081 + #102 #2071
[mk-app] #2082 = #2081 #2080
[inst-discovered] theory-solving 0x0 arith# ; #2077
[mk-app] #2083 = #2077 #2082
[mk-proof] #2084 rewrite #2083
[instance] 0x0 #2083
[end-of-instance]
[mk-app] #2085 = #2073 #2082
[mk-proof] #2086 trans #2079 #2084 #2085
[mk-app] #2087 or #285 #2082
[mk-app] #2088 or #285 #2073
[mk-proof] #2089 quant-inst #2088
[mk-app] #2090 = #2088 #2087
[mk-proof] #2091 monotonicity #2086 #2090
[mk-app] #2092 = #2087 #2087
[mk-proof] #2093 rewrite #2092
[mk-proof] #2094 trans #2091 #2093 #2090
[mk-proof] #2095 mp #2089 #2094 #2087
[instance] 0x12597c860 #2089 ; 38
[attach-enode] #2070 38
[attach-enode] #2071 38
[attach-enode] #2081 38
[attach-enode] #2080 38
[attach-enode] #2082 38
[mk-app] #2096 <= #2081 #2080
[mk-app] #2097 >= #2081 #2080
[assign] #2082 justification -1: p1
[end-of-instance]
[mk-app] #2098 >= #2052 #55
[mk-app] #2099 not #2098
[mk-app] #2100 + #2052 #83
[mk-app] #2101 >= #2100 #55
[mk-app] #2102 lookup #59 #2055
[mk-app] #2103 next #2055
[mk-app] #2104 lookup #59 #2103
[mk-app] #2105 * #82 #2104
[mk-app] #2106 + #2102 #2105
[mk-app] #2107 <= #2106 #55
[mk-app] #2108 or #2099 #2101 #2107
[attach-meaning] #2080 arith (- 19)
[mk-app] #2109 >= #102 #2080
[inst-discovered] theory-solving 0x0 arith# ; #2098
[mk-app] #2110 = #2098 #2109
[mk-proof] #2111 rewrite #2110
[instance] 0x0 #2110
[end-of-instance]
[mk-app] #2112 not #2109
[mk-app] #2113 = #2099 #2112
[mk-proof] #2114 monotonicity #2111 #2113
[attach-meaning] #2051 arith 19
[mk-app] #2115 + #2051 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2100
[mk-app] #2116 = #2100 #2115
[mk-proof] #2117 rewrite #2116
[instance] 0x0 #2116
[end-of-instance]
[mk-app] #2118 >= #2115 #55
[mk-app] #2119 = #2101 #2118
[mk-proof] #2120 monotonicity #2117 #2119
[attach-meaning] #2080 arith (- 19)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2051 arith 19
[mk-app] #2121 <= #122 #2051
[inst-discovered] theory-solving 0x0 arith# ; #2118
[mk-app] #2122 = #2118 #2121
[mk-proof] #2123 rewrite #2122
[instance] 0x0 #2122
[end-of-instance]
[mk-app] #2124 = #2101 #2121
[mk-proof] #2125 trans #2120 #2123 #2124
[mk-app] #2126 or #2112 #2121 #2107
[mk-app] #2127 = #2108 #2126
[mk-proof] #2128 monotonicity #2114 #2125 #2127
[mk-app] #2129 or #313 #2112 #2121 #2107
[mk-app] #2130 or #313 #2108
[mk-proof] #2131 quant-inst #2130
[mk-app] #2132 or #313 #2126
[mk-app] #2133 = #2130 #2132
[mk-proof] #2134 monotonicity #2128 #2133
[mk-app] #2135 = #2132 #2129
[mk-proof] #2136 rewrite #2135
[mk-app] #2137 = #2130 #2129
[mk-proof] #2138 trans #2134 #2136 #2137
[mk-proof] #2139 mp #2131 #2138 #2129
[instance] 0x12597c898 #2131 ; 38
[assign] #2109 justification -1: p186
[assign] (not #2121) justification -1: (not p5)
[attach-enode] #2102 38
[attach-enode] #2103 38
[attach-enode] #2104 38
[attach-enode] #2105 38
[attach-enode] #2106 38
[assign] #2107 justification -1: p3 p196 (not p197)
[end-of-instance]
[assign] #2096 clause p194 (not p193)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 19::Int idx))))) -19::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 19::Int idx))))) -19::Int)) 

[assign] #2097 clause p195 (not p193)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 19::Int idx))))) -19::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 19::Int idx))))) -19::Int)) 

[mk-app] #2140 = #2007 #2102
[attach-meaning] #82 arith (- 1)
[mk-app] #2141 * #82 #2102
[mk-app] #2142 + #2007 #2141
[mk-app] #2143 <= #2142 #55
[mk-app] #2144 >= #2142 #55
[assign] #2140 justification -1: p192
[attach-enode] #2140 0
[attach-enode] #2141 0
[attach-enode] #2142 0
[assign] #2143 justification -1: p199
[assign] #2144 justification -1: p199
[new-match] 0x124009378 #49 #37 #2052 #60 ; #2103 (#2055 #2055)
[mk-app] #2145 + #33 #2052
[mk-app] #2146 slot #60 #2145
[mk-app] #2147 = #2103 #2146
[mk-app] #2148 Int
[attach-meaning] #2148 arith 20
[mk-app] #2149 + #2148 #102
[inst-discovered] theory-solving 0x0 arith# ; #2145
[mk-app] #2150 = #2145 #2149
[mk-proof] #2151 rewrite #2150
[instance] 0x0 #2150
[end-of-instance]
[mk-app] #2152 slot #60 #2149
[mk-app] #2153 = #2146 #2152
[mk-proof] #2154 monotonicity #2151 #2153
[mk-app] #2155 = #2103 #2152
[mk-app] #2156 = #2147 #2155
[mk-proof] #2157 monotonicity #2154 #2156
[mk-app] #2158 or #293 #2155
[mk-app] #2159 or #293 #2147
[mk-proof] #2160 quant-inst #2159
[mk-app] #2161 = #2159 #2158
[mk-proof] #2162 monotonicity #2157 #2161
[mk-app] #2163 = #2158 #2158
[mk-proof] #2164 rewrite #2163
[mk-proof] #2165 trans #2162 #2164 #2161
[mk-proof] #2166 mp #2160 #2165 #2158
[instance] 0x124009378 #2160 ; 39
[attach-enode] #2148 39
[attach-enode] #2149 39
[attach-enode] #2152 39
[attach-enode] #2155 39
[assign] #2155 justification -1: p2
[end-of-instance]
[eq-expl] #2149 root
[new-match] 0x1240096d8 #209 #29 #2149 #60 ; #2152
[eq-expl] #2103 lit #2155 ; #2152
[eq-expl] #2152 root
[new-match] 0x124009710 #96 #67 #2149 ; #2104 (#59 #59) (#2103 #2152) (#60 #60)
[mk-app] #2167 slot_inverse #60 #2152
[mk-app] #2168 * #82 #2167
[mk-app] #2169 + #2149 #2168
[mk-app] #2170 = #2169 #55
[mk-app] #2171 + #2148 #102 #2168
[inst-discovered] theory-solving 0x0 arith# ; #2169
[mk-app] #2172 = #2169 #2171
[mk-proof] #2173 rewrite #2172
[instance] 0x0 #2172
[end-of-instance]
[mk-app] #2174 = #2171 #55
[mk-app] #2175 = #2170 #2174
[mk-proof] #2176 monotonicity #2173 #2175
[mk-app] #2177 Int
[attach-meaning] #2177 arith (- 20)
[mk-app] #2178 + #102 #2168
[mk-app] #2179 = #2178 #2177
[inst-discovered] theory-solving 0x0 arith# ; #2174
[mk-app] #2180 = #2174 #2179
[mk-proof] #2181 rewrite #2180
[instance] 0x0 #2180
[end-of-instance]
[mk-app] #2182 = #2170 #2179
[mk-proof] #2183 trans #2176 #2181 #2182
[mk-app] #2184 or #285 #2179
[mk-app] #2185 or #285 #2170
[mk-proof] #2186 quant-inst #2185
[mk-app] #2187 = #2185 #2184
[mk-proof] #2188 monotonicity #2183 #2187
[mk-app] #2189 = #2184 #2184
[mk-proof] #2190 rewrite #2189
[mk-proof] #2191 trans #2188 #2190 #2187
[mk-proof] #2192 mp #2186 #2191 #2184
[instance] 0x1240096d8 #2186 ; 40
[attach-enode] #2167 40
[attach-enode] #2168 40
[attach-enode] #2178 40
[attach-enode] #2177 40
[attach-enode] #2179 40
[mk-app] #2193 <= #2178 #2177
[mk-app] #2194 >= #2178 #2177
[assign] #2179 justification -1: p1
[end-of-instance]
[mk-app] #2195 >= #2149 #55
[mk-app] #2196 not #2195
[mk-app] #2197 + #2149 #83
[mk-app] #2198 >= #2197 #55
[mk-app] #2199 lookup #59 #2152
[mk-app] #2200 next #2152
[mk-app] #2201 lookup #59 #2200
[mk-app] #2202 * #82 #2201
[mk-app] #2203 + #2199 #2202
[mk-app] #2204 <= #2203 #55
[mk-app] #2205 or #2196 #2198 #2204
[attach-meaning] #2177 arith (- 20)
[mk-app] #2206 >= #102 #2177
[inst-discovered] theory-solving 0x0 arith# ; #2195
[mk-app] #2207 = #2195 #2206
[mk-proof] #2208 rewrite #2207
[instance] 0x0 #2207
[end-of-instance]
[mk-app] #2209 not #2206
[mk-app] #2210 = #2196 #2209
[mk-proof] #2211 monotonicity #2208 #2210
[attach-meaning] #2148 arith 20
[mk-app] #2212 + #2148 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2197
[mk-app] #2213 = #2197 #2212
[mk-proof] #2214 rewrite #2213
[instance] 0x0 #2213
[end-of-instance]
[mk-app] #2215 >= #2212 #55
[mk-app] #2216 = #2198 #2215
[mk-proof] #2217 monotonicity #2214 #2216
[attach-meaning] #2177 arith (- 20)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2148 arith 20
[mk-app] #2218 <= #122 #2148
[inst-discovered] theory-solving 0x0 arith# ; #2215
[mk-app] #2219 = #2215 #2218
[mk-proof] #2220 rewrite #2219
[instance] 0x0 #2219
[end-of-instance]
[mk-app] #2221 = #2198 #2218
[mk-proof] #2222 trans #2217 #2220 #2221
[mk-app] #2223 or #2209 #2218 #2204
[mk-app] #2224 = #2205 #2223
[mk-proof] #2225 monotonicity #2211 #2222 #2224
[mk-app] #2226 or #313 #2209 #2218 #2204
[mk-app] #2227 or #313 #2205
[mk-proof] #2228 quant-inst #2227
[mk-app] #2229 or #313 #2223
[mk-app] #2230 = #2227 #2229
[mk-proof] #2231 monotonicity #2225 #2230
[mk-app] #2232 = #2229 #2226
[mk-proof] #2233 rewrite #2232
[mk-app] #2234 = #2227 #2226
[mk-proof] #2235 trans #2231 #2233 #2234
[mk-proof] #2236 mp #2228 #2235 #2226
[instance] 0x124009710 #2228 ; 40
[assign] #2206 justification -1: p196
[assign] (not #2218) justification -1: (not p5)
[attach-enode] #2199 40
[attach-enode] #2200 40
[attach-enode] #2201 40
[attach-enode] #2202 40
[attach-enode] #2203 40
[assign] #2204 justification -1: p3 p206 (not p207)
[end-of-instance]
[assign] #2193 clause p204 (not p203)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 20::Int idx))))) -20::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 20::Int idx))))) -20::Int)) 

[assign] #2194 clause p205 (not p203)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 20::Int idx))))) -20::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 20::Int idx))))) -20::Int)) 

[mk-app] #2237 = #2104 #2199
[attach-meaning] #82 arith (- 1)
[mk-app] #2238 * #82 #2199
[mk-app] #2239 + #2104 #2238
[mk-app] #2240 <= #2239 #55
[mk-app] #2241 >= #2239 #55
[assign] #2237 justification -1: p202
[attach-enode] #2237 0
[attach-enode] #2238 0
[attach-enode] #2239 0
[assign] #2240 justification -1: p209
[assign] #2241 justification -1: p209
[new-match] 0x12400a3e0 #49 #37 #2149 #60 ; #2200 (#2152 #2152)
[mk-app] #2242 + #33 #2149
[mk-app] #2243 slot #60 #2242
[mk-app] #2244 = #2200 #2243
[mk-app] #2245 Int
[attach-meaning] #2245 arith 21
[mk-app] #2246 + #2245 #102
[inst-discovered] theory-solving 0x0 arith# ; #2242
[mk-app] #2247 = #2242 #2246
[mk-proof] #2248 rewrite #2247
[instance] 0x0 #2247
[end-of-instance]
[mk-app] #2249 slot #60 #2246
[mk-app] #2250 = #2243 #2249
[mk-proof] #2251 monotonicity #2248 #2250
[mk-app] #2252 = #2200 #2249
[mk-app] #2253 = #2244 #2252
[mk-proof] #2254 monotonicity #2251 #2253
[mk-app] #2255 or #293 #2252
[mk-app] #2256 or #293 #2244
[mk-proof] #2257 quant-inst #2256
[mk-app] #2258 = #2256 #2255
[mk-proof] #2259 monotonicity #2254 #2258
[mk-app] #2260 = #2255 #2255
[mk-proof] #2261 rewrite #2260
[mk-proof] #2262 trans #2259 #2261 #2258
[mk-proof] #2263 mp #2257 #2262 #2255
[instance] 0x12400a3e0 #2257 ; 41
[attach-enode] #2245 41
[attach-enode] #2246 41
[attach-enode] #2249 41
[attach-enode] #2252 41
[assign] #2252 justification -1: p2
[end-of-instance]
[eq-expl] #2246 root
[new-match] 0x12400a740 #209 #29 #2246 #60 ; #2249
[eq-expl] #2200 lit #2252 ; #2249
[eq-expl] #2249 root
[new-match] 0x12400a778 #96 #67 #2246 ; #2201 (#59 #59) (#2200 #2249) (#60 #60)
[mk-app] #2264 slot_inverse #60 #2249
[mk-app] #2265 * #82 #2264
[mk-app] #2266 + #2246 #2265
[mk-app] #2267 = #2266 #55
[mk-app] #2268 + #2245 #102 #2265
[inst-discovered] theory-solving 0x0 arith# ; #2266
[mk-app] #2269 = #2266 #2268
[mk-proof] #2270 rewrite #2269
[instance] 0x0 #2269
[end-of-instance]
[mk-app] #2271 = #2268 #55
[mk-app] #2272 = #2267 #2271
[mk-proof] #2273 monotonicity #2270 #2272
[mk-app] #2274 Int
[attach-meaning] #2274 arith (- 21)
[mk-app] #2275 + #102 #2265
[mk-app] #2276 = #2275 #2274
[inst-discovered] theory-solving 0x0 arith# ; #2271
[mk-app] #2277 = #2271 #2276
[mk-proof] #2278 rewrite #2277
[instance] 0x0 #2277
[end-of-instance]
[mk-app] #2279 = #2267 #2276
[mk-proof] #2280 trans #2273 #2278 #2279
[mk-app] #2281 or #285 #2276
[mk-app] #2282 or #285 #2267
[mk-proof] #2283 quant-inst #2282
[mk-app] #2284 = #2282 #2281
[mk-proof] #2285 monotonicity #2280 #2284
[mk-app] #2286 = #2281 #2281
[mk-proof] #2287 rewrite #2286
[mk-proof] #2288 trans #2285 #2287 #2284
[mk-proof] #2289 mp #2283 #2288 #2281
[instance] 0x12400a740 #2283 ; 42
[attach-enode] #2264 42
[attach-enode] #2265 42
[attach-enode] #2275 42
[attach-enode] #2274 42
[attach-enode] #2276 42
[mk-app] #2290 <= #2275 #2274
[mk-app] #2291 >= #2275 #2274
[assign] #2276 justification -1: p1
[end-of-instance]
[mk-app] #2292 >= #2246 #55
[mk-app] #2293 not #2292
[mk-app] #2294 + #2246 #83
[mk-app] #2295 >= #2294 #55
[mk-app] #2296 lookup #59 #2249
[mk-app] #2297 next #2249
[mk-app] #2298 lookup #59 #2297
[mk-app] #2299 * #82 #2298
[mk-app] #2300 + #2296 #2299
[mk-app] #2301 <= #2300 #55
[mk-app] #2302 or #2293 #2295 #2301
[attach-meaning] #2274 arith (- 21)
[mk-app] #2303 >= #102 #2274
[inst-discovered] theory-solving 0x0 arith# ; #2292
[mk-app] #2304 = #2292 #2303
[mk-proof] #2305 rewrite #2304
[instance] 0x0 #2304
[end-of-instance]
[mk-app] #2306 not #2303
[mk-app] #2307 = #2293 #2306
[mk-proof] #2308 monotonicity #2305 #2307
[attach-meaning] #2245 arith 21
[mk-app] #2309 + #2245 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2294
[mk-app] #2310 = #2294 #2309
[mk-proof] #2311 rewrite #2310
[instance] 0x0 #2310
[end-of-instance]
[mk-app] #2312 >= #2309 #55
[mk-app] #2313 = #2295 #2312
[mk-proof] #2314 monotonicity #2311 #2313
[attach-meaning] #2274 arith (- 21)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2245 arith 21
[mk-app] #2315 <= #122 #2245
[inst-discovered] theory-solving 0x0 arith# ; #2312
[mk-app] #2316 = #2312 #2315
[mk-proof] #2317 rewrite #2316
[instance] 0x0 #2316
[end-of-instance]
[mk-app] #2318 = #2295 #2315
[mk-proof] #2319 trans #2314 #2317 #2318
[mk-app] #2320 or #2306 #2315 #2301
[mk-app] #2321 = #2302 #2320
[mk-proof] #2322 monotonicity #2308 #2319 #2321
[mk-app] #2323 or #313 #2306 #2315 #2301
[mk-app] #2324 or #313 #2302
[mk-proof] #2325 quant-inst #2324
[mk-app] #2326 or #313 #2320
[mk-app] #2327 = #2324 #2326
[mk-proof] #2328 monotonicity #2322 #2327
[mk-app] #2329 = #2326 #2323
[mk-proof] #2330 rewrite #2329
[mk-app] #2331 = #2324 #2323
[mk-proof] #2332 trans #2328 #2330 #2331
[mk-proof] #2333 mp #2325 #2332 #2323
[instance] 0x12400a778 #2325 ; 42
[assign] #2303 justification -1: p206
[assign] (not #2315) justification -1: (not p5)
[attach-enode] #2296 42
[attach-enode] #2297 42
[attach-enode] #2298 42
[attach-enode] #2299 42
[attach-enode] #2300 42
[assign] #2301 justification -1: p3 p216 (not p217)
[end-of-instance]
[assign] #2290 clause p214 (not p213)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 21::Int idx))))) -21::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 21::Int idx))))) -21::Int)) 

[assign] #2291 clause p215 (not p213)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 21::Int idx))))) -21::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 21::Int idx))))) -21::Int)) 

[mk-app] #2334 = #2201 #2296
[attach-meaning] #82 arith (- 1)
[mk-app] #2335 * #82 #2296
[mk-app] #2336 + #2201 #2335
[mk-app] #2337 <= #2336 #55
[mk-app] #2338 >= #2336 #55
[assign] #2334 justification -1: p212
[attach-enode] #2334 0
[attach-enode] #2335 0
[attach-enode] #2336 0
[assign] #2337 justification -1: p219
[assign] #2338 justification -1: p219
[new-match] 0x124024858 #49 #37 #2246 #60 ; #2297 (#2249 #2249)
[mk-app] #2339 + #33 #2246
[mk-app] #2340 slot #60 #2339
[mk-app] #2341 = #2297 #2340
[mk-app] #2342 Int
[attach-meaning] #2342 arith 22
[mk-app] #2343 + #2342 #102
[inst-discovered] theory-solving 0x0 arith# ; #2339
[mk-app] #2344 = #2339 #2343
[mk-proof] #2345 rewrite #2344
[instance] 0x0 #2344
[end-of-instance]
[mk-app] #2346 slot #60 #2343
[mk-app] #2347 = #2340 #2346
[mk-proof] #2348 monotonicity #2345 #2347
[mk-app] #2349 = #2297 #2346
[mk-app] #2350 = #2341 #2349
[mk-proof] #2351 monotonicity #2348 #2350
[mk-app] #2352 or #293 #2349
[mk-app] #2353 or #293 #2341
[mk-proof] #2354 quant-inst #2353
[mk-app] #2355 = #2353 #2352
[mk-proof] #2356 monotonicity #2351 #2355
[mk-app] #2357 = #2352 #2352
[mk-proof] #2358 rewrite #2357
[mk-proof] #2359 trans #2356 #2358 #2355
[mk-proof] #2360 mp #2354 #2359 #2352
[instance] 0x124024858 #2354 ; 43
[attach-enode] #2342 43
[attach-enode] #2343 43
[attach-enode] #2346 43
[attach-enode] #2349 43
[assign] #2349 justification -1: p2
[end-of-instance]
[eq-expl] #2343 root
[new-match] 0x124024bb8 #209 #29 #2343 #60 ; #2346
[eq-expl] #2297 lit #2349 ; #2346
[eq-expl] #2346 root
[new-match] 0x124024bf0 #96 #67 #2343 ; #2298 (#59 #59) (#2297 #2346) (#60 #60)
[mk-app] #2361 slot_inverse #60 #2346
[mk-app] #2362 * #82 #2361
[mk-app] #2363 + #2343 #2362
[mk-app] #2364 = #2363 #55
[mk-app] #2365 + #2342 #102 #2362
[inst-discovered] theory-solving 0x0 arith# ; #2363
[mk-app] #2366 = #2363 #2365
[mk-proof] #2367 rewrite #2366
[instance] 0x0 #2366
[end-of-instance]
[mk-app] #2368 = #2365 #55
[mk-app] #2369 = #2364 #2368
[mk-proof] #2370 monotonicity #2367 #2369
[mk-app] #2371 Int
[attach-meaning] #2371 arith (- 22)
[mk-app] #2372 + #102 #2362
[mk-app] #2373 = #2372 #2371
[inst-discovered] theory-solving 0x0 arith# ; #2368
[mk-app] #2374 = #2368 #2373
[mk-proof] #2375 rewrite #2374
[instance] 0x0 #2374
[end-of-instance]
[mk-app] #2376 = #2364 #2373
[mk-proof] #2377 trans #2370 #2375 #2376
[mk-app] #2378 or #285 #2373
[mk-app] #2379 or #285 #2364
[mk-proof] #2380 quant-inst #2379
[mk-app] #2381 = #2379 #2378
[mk-proof] #2382 monotonicity #2377 #2381
[mk-app] #2383 = #2378 #2378
[mk-proof] #2384 rewrite #2383
[mk-proof] #2385 trans #2382 #2384 #2381
[mk-proof] #2386 mp #2380 #2385 #2378
[instance] 0x124024bb8 #2380 ; 44
[attach-enode] #2361 44
[attach-enode] #2362 44
[attach-enode] #2372 44
[attach-enode] #2371 44
[attach-enode] #2373 44
[mk-app] #2387 <= #2372 #2371
[mk-app] #2388 >= #2372 #2371
[assign] #2373 justification -1: p1
[end-of-instance]
[mk-app] #2389 >= #2343 #55
[mk-app] #2390 not #2389
[mk-app] #2391 + #2343 #83
[mk-app] #2392 >= #2391 #55
[mk-app] #2393 lookup #59 #2346
[mk-app] #2394 next #2346
[mk-app] #2395 lookup #59 #2394
[mk-app] #2396 * #82 #2395
[mk-app] #2397 + #2393 #2396
[mk-app] #2398 <= #2397 #55
[mk-app] #2399 or #2390 #2392 #2398
[attach-meaning] #2371 arith (- 22)
[mk-app] #2400 >= #102 #2371
[inst-discovered] theory-solving 0x0 arith# ; #2389
[mk-app] #2401 = #2389 #2400
[mk-proof] #2402 rewrite #2401
[instance] 0x0 #2401
[end-of-instance]
[mk-app] #2403 not #2400
[mk-app] #2404 = #2390 #2403
[mk-proof] #2405 monotonicity #2402 #2404
[attach-meaning] #2342 arith 22
[mk-app] #2406 + #2342 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2391
[mk-app] #2407 = #2391 #2406
[mk-proof] #2408 rewrite #2407
[instance] 0x0 #2407
[end-of-instance]
[mk-app] #2409 >= #2406 #55
[mk-app] #2410 = #2392 #2409
[mk-proof] #2411 monotonicity #2408 #2410
[attach-meaning] #2371 arith (- 22)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2342 arith 22
[mk-app] #2412 <= #122 #2342
[inst-discovered] theory-solving 0x0 arith# ; #2409
[mk-app] #2413 = #2409 #2412
[mk-proof] #2414 rewrite #2413
[instance] 0x0 #2413
[end-of-instance]
[mk-app] #2415 = #2392 #2412
[mk-proof] #2416 trans #2411 #2414 #2415
[mk-app] #2417 or #2403 #2412 #2398
[mk-app] #2418 = #2399 #2417
[mk-proof] #2419 monotonicity #2405 #2416 #2418
[mk-app] #2420 or #313 #2403 #2412 #2398
[mk-app] #2421 or #313 #2399
[mk-proof] #2422 quant-inst #2421
[mk-app] #2423 or #313 #2417
[mk-app] #2424 = #2421 #2423
[mk-proof] #2425 monotonicity #2419 #2424
[mk-app] #2426 = #2423 #2420
[mk-proof] #2427 rewrite #2426
[mk-app] #2428 = #2421 #2420
[mk-proof] #2429 trans #2425 #2427 #2428
[mk-proof] #2430 mp #2422 #2429 #2420
[instance] 0x124024bf0 #2422 ; 44
[assign] #2400 justification -1: p216
[assign] (not #2412) justification -1: (not p5)
[attach-enode] #2393 44
[attach-enode] #2394 44
[attach-enode] #2395 44
[attach-enode] #2396 44
[attach-enode] #2397 44
[assign] #2398 justification -1: p3 p226 (not p227)
[end-of-instance]
[assign] #2387 clause p224 (not p223)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 22::Int idx))))) -22::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 22::Int idx))))) -22::Int)) 

[assign] #2388 clause p225 (not p223)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 22::Int idx))))) -22::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 22::Int idx))))) -22::Int)) 

[mk-app] #2431 = #2298 #2393
[attach-meaning] #82 arith (- 1)
[mk-app] #2432 * #82 #2393
[mk-app] #2433 + #2298 #2432
[mk-app] #2434 <= #2433 #55
[mk-app] #2435 >= #2433 #55
[assign] #2431 justification -1: p222
[attach-enode] #2431 0
[attach-enode] #2432 0
[attach-enode] #2433 0
[assign] #2434 justification -1: p229
[assign] #2435 justification -1: p229
[new-match] 0x1240258c0 #49 #37 #2343 #60 ; #2394 (#2346 #2346)
[mk-app] #2436 + #33 #2343
[mk-app] #2437 slot #60 #2436
[mk-app] #2438 = #2394 #2437
[mk-app] #2439 Int
[attach-meaning] #2439 arith 23
[mk-app] #2440 + #2439 #102
[inst-discovered] theory-solving 0x0 arith# ; #2436
[mk-app] #2441 = #2436 #2440
[mk-proof] #2442 rewrite #2441
[instance] 0x0 #2441
[end-of-instance]
[mk-app] #2443 slot #60 #2440
[mk-app] #2444 = #2437 #2443
[mk-proof] #2445 monotonicity #2442 #2444
[mk-app] #2446 = #2394 #2443
[mk-app] #2447 = #2438 #2446
[mk-proof] #2448 monotonicity #2445 #2447
[mk-app] #2449 or #293 #2446
[mk-app] #2450 or #293 #2438
[mk-proof] #2451 quant-inst #2450
[mk-app] #2452 = #2450 #2449
[mk-proof] #2453 monotonicity #2448 #2452
[mk-app] #2454 = #2449 #2449
[mk-proof] #2455 rewrite #2454
[mk-proof] #2456 trans #2453 #2455 #2452
[mk-proof] #2457 mp #2451 #2456 #2449
[instance] 0x1240258c0 #2451 ; 45
[attach-enode] #2439 45
[attach-enode] #2440 45
[attach-enode] #2443 45
[attach-enode] #2446 45
[assign] #2446 justification -1: p2
[end-of-instance]
[eq-expl] #2440 root
[new-match] 0x124025c20 #209 #29 #2440 #60 ; #2443
[eq-expl] #2394 lit #2446 ; #2443
[eq-expl] #2443 root
[new-match] 0x124025c58 #96 #67 #2440 ; #2395 (#59 #59) (#2394 #2443) (#60 #60)
[mk-app] #2458 slot_inverse #60 #2443
[mk-app] #2459 * #82 #2458
[mk-app] #2460 + #2440 #2459
[mk-app] #2461 = #2460 #55
[mk-app] #2462 + #2439 #102 #2459
[inst-discovered] theory-solving 0x0 arith# ; #2460
[mk-app] #2463 = #2460 #2462
[mk-proof] #2464 rewrite #2463
[instance] 0x0 #2463
[end-of-instance]
[mk-app] #2465 = #2462 #55
[mk-app] #2466 = #2461 #2465
[mk-proof] #2467 monotonicity #2464 #2466
[mk-app] #2468 Int
[attach-meaning] #2468 arith (- 23)
[mk-app] #2469 + #102 #2459
[mk-app] #2470 = #2469 #2468
[inst-discovered] theory-solving 0x0 arith# ; #2465
[mk-app] #2471 = #2465 #2470
[mk-proof] #2472 rewrite #2471
[instance] 0x0 #2471
[end-of-instance]
[mk-app] #2473 = #2461 #2470
[mk-proof] #2474 trans #2467 #2472 #2473
[mk-app] #2475 or #285 #2470
[mk-app] #2476 or #285 #2461
[mk-proof] #2477 quant-inst #2476
[mk-app] #2478 = #2476 #2475
[mk-proof] #2479 monotonicity #2474 #2478
[mk-app] #2480 = #2475 #2475
[mk-proof] #2481 rewrite #2480
[mk-proof] #2482 trans #2479 #2481 #2478
[mk-proof] #2483 mp #2477 #2482 #2475
[instance] 0x124025c20 #2477 ; 46
[attach-enode] #2458 46
[attach-enode] #2459 46
[attach-enode] #2469 46
[attach-enode] #2468 46
[attach-enode] #2470 46
[mk-app] #2484 <= #2469 #2468
[mk-app] #2485 >= #2469 #2468
[assign] #2470 justification -1: p1
[end-of-instance]
[mk-app] #2486 >= #2440 #55
[mk-app] #2487 not #2486
[mk-app] #2488 + #2440 #83
[mk-app] #2489 >= #2488 #55
[mk-app] #2490 lookup #59 #2443
[mk-app] #2491 next #2443
[mk-app] #2492 lookup #59 #2491
[mk-app] #2493 * #82 #2492
[mk-app] #2494 + #2490 #2493
[mk-app] #2495 <= #2494 #55
[mk-app] #2496 or #2487 #2489 #2495
[attach-meaning] #2468 arith (- 23)
[mk-app] #2497 >= #102 #2468
[inst-discovered] theory-solving 0x0 arith# ; #2486
[mk-app] #2498 = #2486 #2497
[mk-proof] #2499 rewrite #2498
[instance] 0x0 #2498
[end-of-instance]
[mk-app] #2500 not #2497
[mk-app] #2501 = #2487 #2500
[mk-proof] #2502 monotonicity #2499 #2501
[attach-meaning] #2439 arith 23
[mk-app] #2503 + #2439 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2488
[mk-app] #2504 = #2488 #2503
[mk-proof] #2505 rewrite #2504
[instance] 0x0 #2504
[end-of-instance]
[mk-app] #2506 >= #2503 #55
[mk-app] #2507 = #2489 #2506
[mk-proof] #2508 monotonicity #2505 #2507
[attach-meaning] #2468 arith (- 23)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2439 arith 23
[mk-app] #2509 <= #122 #2439
[inst-discovered] theory-solving 0x0 arith# ; #2506
[mk-app] #2510 = #2506 #2509
[mk-proof] #2511 rewrite #2510
[instance] 0x0 #2510
[end-of-instance]
[mk-app] #2512 = #2489 #2509
[mk-proof] #2513 trans #2508 #2511 #2512
[mk-app] #2514 or #2500 #2509 #2495
[mk-app] #2515 = #2496 #2514
[mk-proof] #2516 monotonicity #2502 #2513 #2515
[mk-app] #2517 or #313 #2500 #2509 #2495
[mk-app] #2518 or #313 #2496
[mk-proof] #2519 quant-inst #2518
[mk-app] #2520 or #313 #2514
[mk-app] #2521 = #2518 #2520
[mk-proof] #2522 monotonicity #2516 #2521
[mk-app] #2523 = #2520 #2517
[mk-proof] #2524 rewrite #2523
[mk-app] #2525 = #2518 #2517
[mk-proof] #2526 trans #2522 #2524 #2525
[mk-proof] #2527 mp #2519 #2526 #2517
[instance] 0x124025c58 #2519 ; 46
[assign] #2497 justification -1: p226
[assign] (not #2509) justification -1: (not p5)
[attach-enode] #2490 46
[attach-enode] #2491 46
[attach-enode] #2492 46
[attach-enode] #2493 46
[attach-enode] #2494 46
[assign] #2495 justification -1: p3 p236 (not p237)
[end-of-instance]
[assign] #2484 clause p234 (not p233)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 23::Int idx))))) -23::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 23::Int idx))))) -23::Int)) 

[assign] #2485 clause p235 (not p233)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 23::Int idx))))) -23::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 23::Int idx))))) -23::Int)) 

[mk-app] #2528 = #2395 #2490
[attach-meaning] #82 arith (- 1)
[mk-app] #2529 * #82 #2490
[mk-app] #2530 + #2395 #2529
[mk-app] #2531 <= #2530 #55
[mk-app] #2532 >= #2530 #55
[assign] #2528 justification -1: p232
[attach-enode] #2528 0
[attach-enode] #2529 0
[attach-enode] #2530 0
[assign] #2531 justification -1: p239
[assign] #2532 justification -1: p239
[new-match] 0x124044788 #49 #37 #2440 #60 ; #2491 (#2443 #2443)
[mk-app] #2533 + #33 #2440
[mk-app] #2534 slot #60 #2533
[mk-app] #2535 = #2491 #2534
[mk-app] #2536 Int
[attach-meaning] #2536 arith 24
[mk-app] #2537 + #2536 #102
[inst-discovered] theory-solving 0x0 arith# ; #2533
[mk-app] #2538 = #2533 #2537
[mk-proof] #2539 rewrite #2538
[instance] 0x0 #2538
[end-of-instance]
[mk-app] #2540 slot #60 #2537
[mk-app] #2541 = #2534 #2540
[mk-proof] #2542 monotonicity #2539 #2541
[mk-app] #2543 = #2491 #2540
[mk-app] #2544 = #2535 #2543
[mk-proof] #2545 monotonicity #2542 #2544
[mk-app] #2546 or #293 #2543
[mk-app] #2547 or #293 #2535
[mk-proof] #2548 quant-inst #2547
[mk-app] #2549 = #2547 #2546
[mk-proof] #2550 monotonicity #2545 #2549
[mk-app] #2551 = #2546 #2546
[mk-proof] #2552 rewrite #2551
[mk-proof] #2553 trans #2550 #2552 #2549
[mk-proof] #2554 mp #2548 #2553 #2546
[instance] 0x124044788 #2548 ; 47
[attach-enode] #2536 47
[attach-enode] #2537 47
[attach-enode] #2540 47
[attach-enode] #2543 47
[assign] #2543 justification -1: p2
[end-of-instance]
[eq-expl] #2537 root
[new-match] 0x124044ae8 #209 #29 #2537 #60 ; #2540
[eq-expl] #2491 lit #2543 ; #2540
[eq-expl] #2540 root
[new-match] 0x124044b20 #96 #67 #2537 ; #2492 (#59 #59) (#2491 #2540) (#60 #60)
[mk-app] #2555 slot_inverse #60 #2540
[mk-app] #2556 * #82 #2555
[mk-app] #2557 + #2537 #2556
[mk-app] #2558 = #2557 #55
[mk-app] #2559 + #2536 #102 #2556
[inst-discovered] theory-solving 0x0 arith# ; #2557
[mk-app] #2560 = #2557 #2559
[mk-proof] #2561 rewrite #2560
[instance] 0x0 #2560
[end-of-instance]
[mk-app] #2562 = #2559 #55
[mk-app] #2563 = #2558 #2562
[mk-proof] #2564 monotonicity #2561 #2563
[mk-app] #2565 Int
[attach-meaning] #2565 arith (- 24)
[mk-app] #2566 + #102 #2556
[mk-app] #2567 = #2566 #2565
[inst-discovered] theory-solving 0x0 arith# ; #2562
[mk-app] #2568 = #2562 #2567
[mk-proof] #2569 rewrite #2568
[instance] 0x0 #2568
[end-of-instance]
[mk-app] #2570 = #2558 #2567
[mk-proof] #2571 trans #2564 #2569 #2570
[mk-app] #2572 or #285 #2567
[mk-app] #2573 or #285 #2558
[mk-proof] #2574 quant-inst #2573
[mk-app] #2575 = #2573 #2572
[mk-proof] #2576 monotonicity #2571 #2575
[mk-app] #2577 = #2572 #2572
[mk-proof] #2578 rewrite #2577
[mk-proof] #2579 trans #2576 #2578 #2575
[mk-proof] #2580 mp #2574 #2579 #2572
[instance] 0x124044ae8 #2574 ; 48
[attach-enode] #2555 48
[attach-enode] #2556 48
[attach-enode] #2566 48
[attach-enode] #2565 48
[attach-enode] #2567 48
[mk-app] #2581 <= #2566 #2565
[mk-app] #2582 >= #2566 #2565
[assign] #2567 justification -1: p1
[end-of-instance]
[mk-app] #2583 >= #2537 #55
[mk-app] #2584 not #2583
[mk-app] #2585 + #2537 #83
[mk-app] #2586 >= #2585 #55
[mk-app] #2587 lookup #59 #2540
[mk-app] #2588 next #2540
[mk-app] #2589 lookup #59 #2588
[mk-app] #2590 * #82 #2589
[mk-app] #2591 + #2587 #2590
[mk-app] #2592 <= #2591 #55
[mk-app] #2593 or #2584 #2586 #2592
[attach-meaning] #2565 arith (- 24)
[mk-app] #2594 >= #102 #2565
[inst-discovered] theory-solving 0x0 arith# ; #2583
[mk-app] #2595 = #2583 #2594
[mk-proof] #2596 rewrite #2595
[instance] 0x0 #2595
[end-of-instance]
[mk-app] #2597 not #2594
[mk-app] #2598 = #2584 #2597
[mk-proof] #2599 monotonicity #2596 #2598
[attach-meaning] #2536 arith 24
[mk-app] #2600 + #2536 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2585
[mk-app] #2601 = #2585 #2600
[mk-proof] #2602 rewrite #2601
[instance] 0x0 #2601
[end-of-instance]
[mk-app] #2603 >= #2600 #55
[mk-app] #2604 = #2586 #2603
[mk-proof] #2605 monotonicity #2602 #2604
[attach-meaning] #2565 arith (- 24)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2536 arith 24
[mk-app] #2606 <= #122 #2536
[inst-discovered] theory-solving 0x0 arith# ; #2603
[mk-app] #2607 = #2603 #2606
[mk-proof] #2608 rewrite #2607
[instance] 0x0 #2607
[end-of-instance]
[mk-app] #2609 = #2586 #2606
[mk-proof] #2610 trans #2605 #2608 #2609
[mk-app] #2611 or #2597 #2606 #2592
[mk-app] #2612 = #2593 #2611
[mk-proof] #2613 monotonicity #2599 #2610 #2612
[mk-app] #2614 or #313 #2597 #2606 #2592
[mk-app] #2615 or #313 #2593
[mk-proof] #2616 quant-inst #2615
[mk-app] #2617 or #313 #2611
[mk-app] #2618 = #2615 #2617
[mk-proof] #2619 monotonicity #2613 #2618
[mk-app] #2620 = #2617 #2614
[mk-proof] #2621 rewrite #2620
[mk-app] #2622 = #2615 #2614
[mk-proof] #2623 trans #2619 #2621 #2622
[mk-proof] #2624 mp #2616 #2623 #2614
[instance] 0x124044b20 #2616 ; 48
[assign] #2594 justification -1: p236
[assign] (not #2606) justification -1: (not p5)
[attach-enode] #2587 48
[attach-enode] #2588 48
[attach-enode] #2589 48
[attach-enode] #2590 48
[attach-enode] #2591 48
[assign] #2592 justification -1: p3 p246 (not p247)
[end-of-instance]
[assign] #2581 clause p244 (not p243)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 24::Int idx))))) -24::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 24::Int idx))))) -24::Int)) 

[assign] #2582 clause p245 (not p243)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 24::Int idx))))) -24::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 24::Int idx))))) -24::Int)) 

[mk-app] #2625 = #2492 #2587
[attach-meaning] #82 arith (- 1)
[mk-app] #2626 * #82 #2587
[mk-app] #2627 + #2492 #2626
[mk-app] #2628 <= #2627 #55
[mk-app] #2629 >= #2627 #55
[assign] #2625 justification -1: p242
[attach-enode] #2625 0
[attach-enode] #2626 0
[attach-enode] #2627 0
[assign] #2628 justification -1: p249
[assign] #2629 justification -1: p249
[new-match] 0x1240457f0 #49 #37 #2537 #60 ; #2588 (#2540 #2540)
[mk-app] #2630 + #33 #2537
[mk-app] #2631 slot #60 #2630
[mk-app] #2632 = #2588 #2631
[mk-app] #2633 Int
[attach-meaning] #2633 arith 25
[mk-app] #2634 + #2633 #102
[inst-discovered] theory-solving 0x0 arith# ; #2630
[mk-app] #2635 = #2630 #2634
[mk-proof] #2636 rewrite #2635
[instance] 0x0 #2635
[end-of-instance]
[mk-app] #2637 slot #60 #2634
[mk-app] #2638 = #2631 #2637
[mk-proof] #2639 monotonicity #2636 #2638
[mk-app] #2640 = #2588 #2637
[mk-app] #2641 = #2632 #2640
[mk-proof] #2642 monotonicity #2639 #2641
[mk-app] #2643 or #293 #2640
[mk-app] #2644 or #293 #2632
[mk-proof] #2645 quant-inst #2644
[mk-app] #2646 = #2644 #2643
[mk-proof] #2647 monotonicity #2642 #2646
[mk-app] #2648 = #2643 #2643
[mk-proof] #2649 rewrite #2648
[mk-proof] #2650 trans #2647 #2649 #2646
[mk-proof] #2651 mp #2645 #2650 #2643
[instance] 0x1240457f0 #2645 ; 49
[attach-enode] #2633 49
[attach-enode] #2634 49
[attach-enode] #2637 49
[attach-enode] #2640 49
[assign] #2640 justification -1: p2
[end-of-instance]
[eq-expl] #2634 root
[new-match] 0x124045b50 #209 #29 #2634 #60 ; #2637
[eq-expl] #2588 lit #2640 ; #2637
[eq-expl] #2637 root
[new-match] 0x124045b88 #96 #67 #2634 ; #2589 (#59 #59) (#2588 #2637) (#60 #60)
[mk-app] #2652 slot_inverse #60 #2637
[mk-app] #2653 * #82 #2652
[mk-app] #2654 + #2634 #2653
[mk-app] #2655 = #2654 #55
[mk-app] #2656 + #2633 #102 #2653
[inst-discovered] theory-solving 0x0 arith# ; #2654
[mk-app] #2657 = #2654 #2656
[mk-proof] #2658 rewrite #2657
[instance] 0x0 #2657
[end-of-instance]
[mk-app] #2659 = #2656 #55
[mk-app] #2660 = #2655 #2659
[mk-proof] #2661 monotonicity #2658 #2660
[mk-app] #2662 Int
[attach-meaning] #2662 arith (- 25)
[mk-app] #2663 + #102 #2653
[mk-app] #2664 = #2663 #2662
[inst-discovered] theory-solving 0x0 arith# ; #2659
[mk-app] #2665 = #2659 #2664
[mk-proof] #2666 rewrite #2665
[instance] 0x0 #2665
[end-of-instance]
[mk-app] #2667 = #2655 #2664
[mk-proof] #2668 trans #2661 #2666 #2667
[mk-app] #2669 or #285 #2664
[mk-app] #2670 or #285 #2655
[mk-proof] #2671 quant-inst #2670
[mk-app] #2672 = #2670 #2669
[mk-proof] #2673 monotonicity #2668 #2672
[mk-app] #2674 = #2669 #2669
[mk-proof] #2675 rewrite #2674
[mk-proof] #2676 trans #2673 #2675 #2672
[mk-proof] #2677 mp #2671 #2676 #2669
[instance] 0x124045b50 #2671 ; 50
[attach-enode] #2652 50
[attach-enode] #2653 50
[attach-enode] #2663 50
[attach-enode] #2662 50
[attach-enode] #2664 50
[mk-app] #2678 <= #2663 #2662
[mk-app] #2679 >= #2663 #2662
[assign] #2664 justification -1: p1
[end-of-instance]
[mk-app] #2680 >= #2634 #55
[mk-app] #2681 not #2680
[mk-app] #2682 + #2634 #83
[mk-app] #2683 >= #2682 #55
[mk-app] #2684 lookup #59 #2637
[mk-app] #2685 next #2637
[mk-app] #2686 lookup #59 #2685
[mk-app] #2687 * #82 #2686
[mk-app] #2688 + #2684 #2687
[mk-app] #2689 <= #2688 #55
[mk-app] #2690 or #2681 #2683 #2689
[attach-meaning] #2662 arith (- 25)
[mk-app] #2691 >= #102 #2662
[inst-discovered] theory-solving 0x0 arith# ; #2680
[mk-app] #2692 = #2680 #2691
[mk-proof] #2693 rewrite #2692
[instance] 0x0 #2692
[end-of-instance]
[mk-app] #2694 not #2691
[mk-app] #2695 = #2681 #2694
[mk-proof] #2696 monotonicity #2693 #2695
[attach-meaning] #2633 arith 25
[mk-app] #2697 + #2633 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2682
[mk-app] #2698 = #2682 #2697
[mk-proof] #2699 rewrite #2698
[instance] 0x0 #2698
[end-of-instance]
[mk-app] #2700 >= #2697 #55
[mk-app] #2701 = #2683 #2700
[mk-proof] #2702 monotonicity #2699 #2701
[attach-meaning] #2662 arith (- 25)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2633 arith 25
[mk-app] #2703 <= #122 #2633
[inst-discovered] theory-solving 0x0 arith# ; #2700
[mk-app] #2704 = #2700 #2703
[mk-proof] #2705 rewrite #2704
[instance] 0x0 #2704
[end-of-instance]
[mk-app] #2706 = #2683 #2703
[mk-proof] #2707 trans #2702 #2705 #2706
[mk-app] #2708 or #2694 #2703 #2689
[mk-app] #2709 = #2690 #2708
[mk-proof] #2710 monotonicity #2696 #2707 #2709
[mk-app] #2711 or #313 #2694 #2703 #2689
[mk-app] #2712 or #313 #2690
[mk-proof] #2713 quant-inst #2712
[mk-app] #2714 or #313 #2708
[mk-app] #2715 = #2712 #2714
[mk-proof] #2716 monotonicity #2710 #2715
[mk-app] #2717 = #2714 #2711
[mk-proof] #2718 rewrite #2717
[mk-app] #2719 = #2712 #2711
[mk-proof] #2720 trans #2716 #2718 #2719
[mk-proof] #2721 mp #2713 #2720 #2711
[instance] 0x124045b88 #2713 ; 50
[assign] #2691 justification -1: p246
[assign] (not #2703) justification -1: (not p5)
[attach-enode] #2684 50
[attach-enode] #2685 50
[attach-enode] #2686 50
[attach-enode] #2687 50
[attach-enode] #2688 50
[assign] #2689 justification -1: p3 p256 (not p257)
[end-of-instance]
[assign] #2678 clause p254 (not p253)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 25::Int idx))))) -25::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 25::Int idx))))) -25::Int)) 

[assign] #2679 clause p255 (not p253)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 25::Int idx))))) -25::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 25::Int idx))))) -25::Int)) 

[mk-app] #2722 = #2589 #2684
[attach-meaning] #82 arith (- 1)
[mk-app] #2723 * #82 #2684
[mk-app] #2724 + #2589 #2723
[mk-app] #2725 <= #2724 #55
[mk-app] #2726 >= #2724 #55
[assign] #2722 justification -1: p252
[attach-enode] #2722 0
[attach-enode] #2723 0
[attach-enode] #2724 0
[assign] #2725 justification -1: p259
[assign] #2726 justification -1: p259
[new-match] 0x12405d8b0 #49 #37 #2634 #60 ; #2685 (#2637 #2637)
[mk-app] #2727 + #33 #2634
[mk-app] #2728 slot #60 #2727
[mk-app] #2729 = #2685 #2728
[mk-app] #2730 Int
[attach-meaning] #2730 arith 26
[mk-app] #2731 + #2730 #102
[inst-discovered] theory-solving 0x0 arith# ; #2727
[mk-app] #2732 = #2727 #2731
[mk-proof] #2733 rewrite #2732
[instance] 0x0 #2732
[end-of-instance]
[mk-app] #2734 slot #60 #2731
[mk-app] #2735 = #2728 #2734
[mk-proof] #2736 monotonicity #2733 #2735
[mk-app] #2737 = #2685 #2734
[mk-app] #2738 = #2729 #2737
[mk-proof] #2739 monotonicity #2736 #2738
[mk-app] #2740 or #293 #2737
[mk-app] #2741 or #293 #2729
[mk-proof] #2742 quant-inst #2741
[mk-app] #2743 = #2741 #2740
[mk-proof] #2744 monotonicity #2739 #2743
[mk-app] #2745 = #2740 #2740
[mk-proof] #2746 rewrite #2745
[mk-proof] #2747 trans #2744 #2746 #2743
[mk-proof] #2748 mp #2742 #2747 #2740
[instance] 0x12405d8b0 #2742 ; 51
[attach-enode] #2730 51
[attach-enode] #2731 51
[attach-enode] #2734 51
[attach-enode] #2737 51
[assign] #2737 justification -1: p2
[end-of-instance]
[eq-expl] #2731 root
[new-match] 0x12405dc10 #209 #29 #2731 #60 ; #2734
[eq-expl] #2685 lit #2737 ; #2734
[eq-expl] #2734 root
[new-match] 0x12405dc48 #96 #67 #2731 ; #2686 (#59 #59) (#2685 #2734) (#60 #60)
[mk-app] #2749 slot_inverse #60 #2734
[mk-app] #2750 * #82 #2749
[mk-app] #2751 + #2731 #2750
[mk-app] #2752 = #2751 #55
[mk-app] #2753 + #2730 #102 #2750
[inst-discovered] theory-solving 0x0 arith# ; #2751
[mk-app] #2754 = #2751 #2753
[mk-proof] #2755 rewrite #2754
[instance] 0x0 #2754
[end-of-instance]
[mk-app] #2756 = #2753 #55
[mk-app] #2757 = #2752 #2756
[mk-proof] #2758 monotonicity #2755 #2757
[mk-app] #2759 Int
[attach-meaning] #2759 arith (- 26)
[mk-app] #2760 + #102 #2750
[mk-app] #2761 = #2760 #2759
[inst-discovered] theory-solving 0x0 arith# ; #2756
[mk-app] #2762 = #2756 #2761
[mk-proof] #2763 rewrite #2762
[instance] 0x0 #2762
[end-of-instance]
[mk-app] #2764 = #2752 #2761
[mk-proof] #2765 trans #2758 #2763 #2764
[mk-app] #2766 or #285 #2761
[mk-app] #2767 or #285 #2752
[mk-proof] #2768 quant-inst #2767
[mk-app] #2769 = #2767 #2766
[mk-proof] #2770 monotonicity #2765 #2769
[mk-app] #2771 = #2766 #2766
[mk-proof] #2772 rewrite #2771
[mk-proof] #2773 trans #2770 #2772 #2769
[mk-proof] #2774 mp #2768 #2773 #2766
[instance] 0x12405dc10 #2768 ; 52
[attach-enode] #2749 52
[attach-enode] #2750 52
[attach-enode] #2760 52
[attach-enode] #2759 52
[attach-enode] #2761 52
[mk-app] #2775 <= #2760 #2759
[mk-app] #2776 >= #2760 #2759
[assign] #2761 justification -1: p1
[end-of-instance]
[mk-app] #2777 >= #2731 #55
[mk-app] #2778 not #2777
[mk-app] #2779 + #2731 #83
[mk-app] #2780 >= #2779 #55
[mk-app] #2781 lookup #59 #2734
[mk-app] #2782 next #2734
[mk-app] #2783 lookup #59 #2782
[mk-app] #2784 * #82 #2783
[mk-app] #2785 + #2781 #2784
[mk-app] #2786 <= #2785 #55
[mk-app] #2787 or #2778 #2780 #2786
[attach-meaning] #2759 arith (- 26)
[mk-app] #2788 >= #102 #2759
[inst-discovered] theory-solving 0x0 arith# ; #2777
[mk-app] #2789 = #2777 #2788
[mk-proof] #2790 rewrite #2789
[instance] 0x0 #2789
[end-of-instance]
[mk-app] #2791 not #2788
[mk-app] #2792 = #2778 #2791
[mk-proof] #2793 monotonicity #2790 #2792
[attach-meaning] #2730 arith 26
[mk-app] #2794 + #2730 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2779
[mk-app] #2795 = #2779 #2794
[mk-proof] #2796 rewrite #2795
[instance] 0x0 #2795
[end-of-instance]
[mk-app] #2797 >= #2794 #55
[mk-app] #2798 = #2780 #2797
[mk-proof] #2799 monotonicity #2796 #2798
[attach-meaning] #2759 arith (- 26)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2730 arith 26
[mk-app] #2800 <= #122 #2730
[inst-discovered] theory-solving 0x0 arith# ; #2797
[mk-app] #2801 = #2797 #2800
[mk-proof] #2802 rewrite #2801
[instance] 0x0 #2801
[end-of-instance]
[mk-app] #2803 = #2780 #2800
[mk-proof] #2804 trans #2799 #2802 #2803
[mk-app] #2805 or #2791 #2800 #2786
[mk-app] #2806 = #2787 #2805
[mk-proof] #2807 monotonicity #2793 #2804 #2806
[mk-app] #2808 or #313 #2791 #2800 #2786
[mk-app] #2809 or #313 #2787
[mk-proof] #2810 quant-inst #2809
[mk-app] #2811 or #313 #2805
[mk-app] #2812 = #2809 #2811
[mk-proof] #2813 monotonicity #2807 #2812
[mk-app] #2814 = #2811 #2808
[mk-proof] #2815 rewrite #2814
[mk-app] #2816 = #2809 #2808
[mk-proof] #2817 trans #2813 #2815 #2816
[mk-proof] #2818 mp #2810 #2817 #2808
[instance] 0x12405dc48 #2810 ; 52
[assign] #2788 justification -1: p256
[assign] (not #2800) justification -1: (not p5)
[attach-enode] #2781 52
[attach-enode] #2782 52
[attach-enode] #2783 52
[attach-enode] #2784 52
[attach-enode] #2785 52
[assign] #2786 justification -1: p3 p266 (not p267)
[end-of-instance]
[assign] #2775 clause p264 (not p263)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 26::Int idx))))) -26::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 26::Int idx))))) -26::Int)) 

[assign] #2776 clause p265 (not p263)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 26::Int idx))))) -26::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 26::Int idx))))) -26::Int)) 

[mk-app] #2819 = #2686 #2781
[attach-meaning] #82 arith (- 1)
[mk-app] #2820 * #82 #2781
[mk-app] #2821 + #2686 #2820
[mk-app] #2822 <= #2821 #55
[mk-app] #2823 >= #2821 #55
[assign] #2819 justification -1: p262
[attach-enode] #2819 0
[attach-enode] #2820 0
[attach-enode] #2821 0
[assign] #2822 justification -1: p269
[assign] #2823 justification -1: p269
[new-match] 0x12405e918 #49 #37 #2731 #60 ; #2782 (#2734 #2734)
[mk-app] #2824 + #33 #2731
[mk-app] #2825 slot #60 #2824
[mk-app] #2826 = #2782 #2825
[mk-app] #2827 Int
[attach-meaning] #2827 arith 27
[mk-app] #2828 + #2827 #102
[inst-discovered] theory-solving 0x0 arith# ; #2824
[mk-app] #2829 = #2824 #2828
[mk-proof] #2830 rewrite #2829
[instance] 0x0 #2829
[end-of-instance]
[mk-app] #2831 slot #60 #2828
[mk-app] #2832 = #2825 #2831
[mk-proof] #2833 monotonicity #2830 #2832
[mk-app] #2834 = #2782 #2831
[mk-app] #2835 = #2826 #2834
[mk-proof] #2836 monotonicity #2833 #2835
[mk-app] #2837 or #293 #2834
[mk-app] #2838 or #293 #2826
[mk-proof] #2839 quant-inst #2838
[mk-app] #2840 = #2838 #2837
[mk-proof] #2841 monotonicity #2836 #2840
[mk-app] #2842 = #2837 #2837
[mk-proof] #2843 rewrite #2842
[mk-proof] #2844 trans #2841 #2843 #2840
[mk-proof] #2845 mp #2839 #2844 #2837
[instance] 0x12405e918 #2839 ; 53
[attach-enode] #2827 53
[attach-enode] #2828 53
[attach-enode] #2831 53
[attach-enode] #2834 53
[assign] #2834 justification -1: p2
[end-of-instance]
[eq-expl] #2828 root
[new-match] 0x124069ea0 #209 #29 #2828 #60 ; #2831
[eq-expl] #2782 lit #2834 ; #2831
[eq-expl] #2831 root
[new-match] 0x124069ed8 #96 #67 #2828 ; #2783 (#59 #59) (#2782 #2831) (#60 #60)
[mk-app] #2846 slot_inverse #60 #2831
[mk-app] #2847 * #82 #2846
[mk-app] #2848 + #2828 #2847
[mk-app] #2849 = #2848 #55
[mk-app] #2850 + #2827 #102 #2847
[inst-discovered] theory-solving 0x0 arith# ; #2848
[mk-app] #2851 = #2848 #2850
[mk-proof] #2852 rewrite #2851
[instance] 0x0 #2851
[end-of-instance]
[mk-app] #2853 = #2850 #55
[mk-app] #2854 = #2849 #2853
[mk-proof] #2855 monotonicity #2852 #2854
[mk-app] #2856 Int
[attach-meaning] #2856 arith (- 27)
[mk-app] #2857 + #102 #2847
[mk-app] #2858 = #2857 #2856
[inst-discovered] theory-solving 0x0 arith# ; #2853
[mk-app] #2859 = #2853 #2858
[mk-proof] #2860 rewrite #2859
[instance] 0x0 #2859
[end-of-instance]
[mk-app] #2861 = #2849 #2858
[mk-proof] #2862 trans #2855 #2860 #2861
[mk-app] #2863 or #285 #2858
[mk-app] #2864 or #285 #2849
[mk-proof] #2865 quant-inst #2864
[mk-app] #2866 = #2864 #2863
[mk-proof] #2867 monotonicity #2862 #2866
[mk-app] #2868 = #2863 #2863
[mk-proof] #2869 rewrite #2868
[mk-proof] #2870 trans #2867 #2869 #2866
[mk-proof] #2871 mp #2865 #2870 #2863
[instance] 0x124069ea0 #2865 ; 54
[attach-enode] #2846 54
[attach-enode] #2847 54
[attach-enode] #2857 54
[attach-enode] #2856 54
[attach-enode] #2858 54
[mk-app] #2872 <= #2857 #2856
[mk-app] #2873 >= #2857 #2856
[assign] #2858 justification -1: p1
[end-of-instance]
[mk-app] #2874 >= #2828 #55
[mk-app] #2875 not #2874
[mk-app] #2876 + #2828 #83
[mk-app] #2877 >= #2876 #55
[mk-app] #2878 lookup #59 #2831
[mk-app] #2879 next #2831
[mk-app] #2880 lookup #59 #2879
[mk-app] #2881 * #82 #2880
[mk-app] #2882 + #2878 #2881
[mk-app] #2883 <= #2882 #55
[mk-app] #2884 or #2875 #2877 #2883
[attach-meaning] #2856 arith (- 27)
[mk-app] #2885 >= #102 #2856
[inst-discovered] theory-solving 0x0 arith# ; #2874
[mk-app] #2886 = #2874 #2885
[mk-proof] #2887 rewrite #2886
[instance] 0x0 #2886
[end-of-instance]
[mk-app] #2888 not #2885
[mk-app] #2889 = #2875 #2888
[mk-proof] #2890 monotonicity #2887 #2889
[attach-meaning] #2827 arith 27
[mk-app] #2891 + #2827 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2876
[mk-app] #2892 = #2876 #2891
[mk-proof] #2893 rewrite #2892
[instance] 0x0 #2892
[end-of-instance]
[mk-app] #2894 >= #2891 #55
[mk-app] #2895 = #2877 #2894
[mk-proof] #2896 monotonicity #2893 #2895
[attach-meaning] #2856 arith (- 27)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2827 arith 27
[mk-app] #2897 <= #122 #2827
[inst-discovered] theory-solving 0x0 arith# ; #2894
[mk-app] #2898 = #2894 #2897
[mk-proof] #2899 rewrite #2898
[instance] 0x0 #2898
[end-of-instance]
[mk-app] #2900 = #2877 #2897
[mk-proof] #2901 trans #2896 #2899 #2900
[mk-app] #2902 or #2888 #2897 #2883
[mk-app] #2903 = #2884 #2902
[mk-proof] #2904 monotonicity #2890 #2901 #2903
[mk-app] #2905 or #313 #2888 #2897 #2883
[mk-app] #2906 or #313 #2884
[mk-proof] #2907 quant-inst #2906
[mk-app] #2908 or #313 #2902
[mk-app] #2909 = #2906 #2908
[mk-proof] #2910 monotonicity #2904 #2909
[mk-app] #2911 = #2908 #2905
[mk-proof] #2912 rewrite #2911
[mk-app] #2913 = #2906 #2905
[mk-proof] #2914 trans #2910 #2912 #2913
[mk-proof] #2915 mp #2907 #2914 #2905
[instance] 0x124069ed8 #2907 ; 54
[assign] #2885 justification -1: p266
[assign] (not #2897) justification -1: (not p5)
[attach-enode] #2878 54
[attach-enode] #2879 54
[attach-enode] #2880 54
[attach-enode] #2881 54
[attach-enode] #2882 54
[assign] #2883 justification -1: p3 p276 (not p277)
[end-of-instance]
[assign] #2872 clause p274 (not p273)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 27::Int idx))))) -27::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 27::Int idx))))) -27::Int)) 

[assign] #2873 clause p275 (not p273)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 27::Int idx))))) -27::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 27::Int idx))))) -27::Int)) 

[mk-app] #2916 = #2783 #2878
[attach-meaning] #82 arith (- 1)
[mk-app] #2917 * #82 #2878
[mk-app] #2918 + #2783 #2917
[mk-app] #2919 <= #2918 #55
[mk-app] #2920 >= #2918 #55
[assign] #2916 justification -1: p272
[attach-enode] #2916 0
[attach-enode] #2917 0
[attach-enode] #2918 0
[assign] #2919 justification -1: p279
[assign] #2920 justification -1: p279
[new-match] 0x12406aba8 #49 #37 #2828 #60 ; #2879 (#2831 #2831)
[mk-app] #2921 + #33 #2828
[mk-app] #2922 slot #60 #2921
[mk-app] #2923 = #2879 #2922
[mk-app] #2924 Int
[attach-meaning] #2924 arith 28
[mk-app] #2925 + #2924 #102
[inst-discovered] theory-solving 0x0 arith# ; #2921
[mk-app] #2926 = #2921 #2925
[mk-proof] #2927 rewrite #2926
[instance] 0x0 #2926
[end-of-instance]
[mk-app] #2928 slot #60 #2925
[mk-app] #2929 = #2922 #2928
[mk-proof] #2930 monotonicity #2927 #2929
[mk-app] #2931 = #2879 #2928
[mk-app] #2932 = #2923 #2931
[mk-proof] #2933 monotonicity #2930 #2932
[mk-app] #2934 or #293 #2931
[mk-app] #2935 or #293 #2923
[mk-proof] #2936 quant-inst #2935
[mk-app] #2937 = #2935 #2934
[mk-proof] #2938 monotonicity #2933 #2937
[mk-app] #2939 = #2934 #2934
[mk-proof] #2940 rewrite #2939
[mk-proof] #2941 trans #2938 #2940 #2937
[mk-proof] #2942 mp #2936 #2941 #2934
[instance] 0x12406aba8 #2936 ; 55
[attach-enode] #2924 55
[attach-enode] #2925 55
[attach-enode] #2928 55
[attach-enode] #2931 55
[assign] #2931 justification -1: p2
[end-of-instance]
[eq-expl] #2925 root
[new-match] 0x12406af08 #209 #29 #2925 #60 ; #2928
[eq-expl] #2879 lit #2931 ; #2928
[eq-expl] #2928 root
[new-match] 0x12406af40 #96 #67 #2925 ; #2880 (#59 #59) (#2879 #2928) (#60 #60)
[mk-app] #2943 slot_inverse #60 #2928
[mk-app] #2944 * #82 #2943
[mk-app] #2945 + #2925 #2944
[mk-app] #2946 = #2945 #55
[mk-app] #2947 + #2924 #102 #2944
[inst-discovered] theory-solving 0x0 arith# ; #2945
[mk-app] #2948 = #2945 #2947
[mk-proof] #2949 rewrite #2948
[instance] 0x0 #2948
[end-of-instance]
[mk-app] #2950 = #2947 #55
[mk-app] #2951 = #2946 #2950
[mk-proof] #2952 monotonicity #2949 #2951
[mk-app] #2953 Int
[attach-meaning] #2953 arith (- 28)
[mk-app] #2954 + #102 #2944
[mk-app] #2955 = #2954 #2953
[inst-discovered] theory-solving 0x0 arith# ; #2950
[mk-app] #2956 = #2950 #2955
[mk-proof] #2957 rewrite #2956
[instance] 0x0 #2956
[end-of-instance]
[mk-app] #2958 = #2946 #2955
[mk-proof] #2959 trans #2952 #2957 #2958
[mk-app] #2960 or #285 #2955
[mk-app] #2961 or #285 #2946
[mk-proof] #2962 quant-inst #2961
[mk-app] #2963 = #2961 #2960
[mk-proof] #2964 monotonicity #2959 #2963
[mk-app] #2965 = #2960 #2960
[mk-proof] #2966 rewrite #2965
[mk-proof] #2967 trans #2964 #2966 #2963
[mk-proof] #2968 mp #2962 #2967 #2960
[instance] 0x12406af08 #2962 ; 56
[attach-enode] #2943 56
[attach-enode] #2944 56
[attach-enode] #2954 56
[attach-enode] #2953 56
[attach-enode] #2955 56
[mk-app] #2969 <= #2954 #2953
[mk-app] #2970 >= #2954 #2953
[assign] #2955 justification -1: p1
[end-of-instance]
[mk-app] #2971 >= #2925 #55
[mk-app] #2972 not #2971
[mk-app] #2973 + #2925 #83
[mk-app] #2974 >= #2973 #55
[mk-app] #2975 lookup #59 #2928
[mk-app] #2976 next #2928
[mk-app] #2977 lookup #59 #2976
[mk-app] #2978 * #82 #2977
[mk-app] #2979 + #2975 #2978
[mk-app] #2980 <= #2979 #55
[mk-app] #2981 or #2972 #2974 #2980
[attach-meaning] #2953 arith (- 28)
[mk-app] #2982 >= #102 #2953
[inst-discovered] theory-solving 0x0 arith# ; #2971
[mk-app] #2983 = #2971 #2982
[mk-proof] #2984 rewrite #2983
[instance] 0x0 #2983
[end-of-instance]
[mk-app] #2985 not #2982
[mk-app] #2986 = #2972 #2985
[mk-proof] #2987 monotonicity #2984 #2986
[attach-meaning] #2924 arith 28
[mk-app] #2988 + #2924 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #2973
[mk-app] #2989 = #2973 #2988
[mk-proof] #2990 rewrite #2989
[instance] 0x0 #2989
[end-of-instance]
[mk-app] #2991 >= #2988 #55
[mk-app] #2992 = #2974 #2991
[mk-proof] #2993 monotonicity #2990 #2992
[attach-meaning] #2953 arith (- 28)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #2924 arith 28
[mk-app] #2994 <= #122 #2924
[inst-discovered] theory-solving 0x0 arith# ; #2991
[mk-app] #2995 = #2991 #2994
[mk-proof] #2996 rewrite #2995
[instance] 0x0 #2995
[end-of-instance]
[mk-app] #2997 = #2974 #2994
[mk-proof] #2998 trans #2993 #2996 #2997
[mk-app] #2999 or #2985 #2994 #2980
[mk-app] #3000 = #2981 #2999
[mk-proof] #3001 monotonicity #2987 #2998 #3000
[mk-app] #3002 or #313 #2985 #2994 #2980
[mk-app] #3003 or #313 #2981
[mk-proof] #3004 quant-inst #3003
[mk-app] #3005 or #313 #2999
[mk-app] #3006 = #3003 #3005
[mk-proof] #3007 monotonicity #3001 #3006
[mk-app] #3008 = #3005 #3002
[mk-proof] #3009 rewrite #3008
[mk-app] #3010 = #3003 #3002
[mk-proof] #3011 trans #3007 #3009 #3010
[mk-proof] #3012 mp #3004 #3011 #3002
[instance] 0x12406af40 #3004 ; 56
[assign] #2982 justification -1: p276
[assign] (not #2994) justification -1: (not p5)
[attach-enode] #2975 56
[attach-enode] #2976 56
[attach-enode] #2977 56
[attach-enode] #2978 56
[attach-enode] #2979 56
[assign] #2980 justification -1: p3 p286 (not p287)
[end-of-instance]
[assign] #2969 clause p284 (not p283)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 28::Int idx))))) -28::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 28::Int idx))))) -28::Int)) 

[assign] #2970 clause p285 (not p283)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 28::Int idx))))) -28::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 28::Int idx))))) -28::Int)) 

[mk-app] #3013 = #2880 #2975
[attach-meaning] #82 arith (- 1)
[mk-app] #3014 * #82 #2975
[mk-app] #3015 + #2880 #3014
[mk-app] #3016 <= #3015 #55
[mk-app] #3017 >= #3015 #55
[assign] #3013 justification -1: p282
[attach-enode] #3013 0
[attach-enode] #3014 0
[attach-enode] #3015 0
[assign] #3016 justification -1: p289
[assign] #3017 justification -1: p289
[new-match] 0x12406bc10 #49 #37 #2925 #60 ; #2976 (#2928 #2928)
[mk-app] #3018 + #33 #2925
[mk-app] #3019 slot #60 #3018
[mk-app] #3020 = #2976 #3019
[mk-app] #3021 Int
[attach-meaning] #3021 arith 29
[mk-app] #3022 + #3021 #102
[inst-discovered] theory-solving 0x0 arith# ; #3018
[mk-app] #3023 = #3018 #3022
[mk-proof] #3024 rewrite #3023
[instance] 0x0 #3023
[end-of-instance]
[mk-app] #3025 slot #60 #3022
[mk-app] #3026 = #3019 #3025
[mk-proof] #3027 monotonicity #3024 #3026
[mk-app] #3028 = #2976 #3025
[mk-app] #3029 = #3020 #3028
[mk-proof] #3030 monotonicity #3027 #3029
[mk-app] #3031 or #293 #3028
[mk-app] #3032 or #293 #3020
[mk-proof] #3033 quant-inst #3032
[mk-app] #3034 = #3032 #3031
[mk-proof] #3035 monotonicity #3030 #3034
[mk-app] #3036 = #3031 #3031
[mk-proof] #3037 rewrite #3036
[mk-proof] #3038 trans #3035 #3037 #3034
[mk-proof] #3039 mp #3033 #3038 #3031
[instance] 0x12406bc10 #3033 ; 57
[attach-enode] #3021 57
[attach-enode] #3022 57
[attach-enode] #3025 57
[attach-enode] #3028 57
[assign] #3028 justification -1: p2
[end-of-instance]
[eq-expl] #3022 root
[new-match] 0x124074580 #209 #29 #3022 #60 ; #3025
[eq-expl] #2976 lit #3028 ; #3025
[eq-expl] #3025 root
[new-match] 0x1240745b8 #96 #67 #3022 ; #2977 (#59 #59) (#2976 #3025) (#60 #60)
[mk-app] #3040 slot_inverse #60 #3025
[mk-app] #3041 * #82 #3040
[mk-app] #3042 + #3022 #3041
[mk-app] #3043 = #3042 #55
[mk-app] #3044 + #3021 #102 #3041
[inst-discovered] theory-solving 0x0 arith# ; #3042
[mk-app] #3045 = #3042 #3044
[mk-proof] #3046 rewrite #3045
[instance] 0x0 #3045
[end-of-instance]
[mk-app] #3047 = #3044 #55
[mk-app] #3048 = #3043 #3047
[mk-proof] #3049 monotonicity #3046 #3048
[mk-app] #3050 Int
[attach-meaning] #3050 arith (- 29)
[mk-app] #3051 + #102 #3041
[mk-app] #3052 = #3051 #3050
[inst-discovered] theory-solving 0x0 arith# ; #3047
[mk-app] #3053 = #3047 #3052
[mk-proof] #3054 rewrite #3053
[instance] 0x0 #3053
[end-of-instance]
[mk-app] #3055 = #3043 #3052
[mk-proof] #3056 trans #3049 #3054 #3055
[mk-app] #3057 or #285 #3052
[mk-app] #3058 or #285 #3043
[mk-proof] #3059 quant-inst #3058
[mk-app] #3060 = #3058 #3057
[mk-proof] #3061 monotonicity #3056 #3060
[mk-app] #3062 = #3057 #3057
[mk-proof] #3063 rewrite #3062
[mk-proof] #3064 trans #3061 #3063 #3060
[mk-proof] #3065 mp #3059 #3064 #3057
[instance] 0x124074580 #3059 ; 58
[attach-enode] #3040 58
[attach-enode] #3041 58
[attach-enode] #3051 58
[attach-enode] #3050 58
[attach-enode] #3052 58
[mk-app] #3066 <= #3051 #3050
[mk-app] #3067 >= #3051 #3050
[assign] #3052 justification -1: p1
[end-of-instance]
[mk-app] #3068 >= #3022 #55
[mk-app] #3069 not #3068
[mk-app] #3070 + #3022 #83
[mk-app] #3071 >= #3070 #55
[mk-app] #3072 lookup #59 #3025
[mk-app] #3073 next #3025
[mk-app] #3074 lookup #59 #3073
[mk-app] #3075 * #82 #3074
[mk-app] #3076 + #3072 #3075
[mk-app] #3077 <= #3076 #55
[mk-app] #3078 or #3069 #3071 #3077
[attach-meaning] #3050 arith (- 29)
[mk-app] #3079 >= #102 #3050
[inst-discovered] theory-solving 0x0 arith# ; #3068
[mk-app] #3080 = #3068 #3079
[mk-proof] #3081 rewrite #3080
[instance] 0x0 #3080
[end-of-instance]
[mk-app] #3082 not #3079
[mk-app] #3083 = #3069 #3082
[mk-proof] #3084 monotonicity #3081 #3083
[attach-meaning] #3021 arith 29
[mk-app] #3085 + #3021 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3070
[mk-app] #3086 = #3070 #3085
[mk-proof] #3087 rewrite #3086
[instance] 0x0 #3086
[end-of-instance]
[mk-app] #3088 >= #3085 #55
[mk-app] #3089 = #3071 #3088
[mk-proof] #3090 monotonicity #3087 #3089
[attach-meaning] #3050 arith (- 29)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3021 arith 29
[mk-app] #3091 <= #122 #3021
[inst-discovered] theory-solving 0x0 arith# ; #3088
[mk-app] #3092 = #3088 #3091
[mk-proof] #3093 rewrite #3092
[instance] 0x0 #3092
[end-of-instance]
[mk-app] #3094 = #3071 #3091
[mk-proof] #3095 trans #3090 #3093 #3094
[mk-app] #3096 or #3082 #3091 #3077
[mk-app] #3097 = #3078 #3096
[mk-proof] #3098 monotonicity #3084 #3095 #3097
[mk-app] #3099 or #313 #3082 #3091 #3077
[mk-app] #3100 or #313 #3078
[mk-proof] #3101 quant-inst #3100
[mk-app] #3102 or #313 #3096
[mk-app] #3103 = #3100 #3102
[mk-proof] #3104 monotonicity #3098 #3103
[mk-app] #3105 = #3102 #3099
[mk-proof] #3106 rewrite #3105
[mk-app] #3107 = #3100 #3099
[mk-proof] #3108 trans #3104 #3106 #3107
[mk-proof] #3109 mp #3101 #3108 #3099
[instance] 0x1240745b8 #3101 ; 58
[assign] #3079 justification -1: p286
[assign] (not #3091) justification -1: (not p5)
[attach-enode] #3072 58
[attach-enode] #3073 58
[attach-enode] #3074 58
[attach-enode] #3075 58
[attach-enode] #3076 58
[assign] #3077 justification -1: p3 p296 (not p297)
[end-of-instance]
[assign] #3066 clause p294 (not p293)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 29::Int idx))))) -29::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 29::Int idx))))) -29::Int)) 

[assign] #3067 clause p295 (not p293)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 29::Int idx))))) -29::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 29::Int idx))))) -29::Int)) 

[mk-app] #3110 = #2977 #3072
[attach-meaning] #82 arith (- 1)
[mk-app] #3111 * #82 #3072
[mk-app] #3112 + #2977 #3111
[mk-app] #3113 <= #3112 #55
[mk-app] #3114 >= #3112 #55
[assign] #3110 justification -1: p292
[attach-enode] #3110 0
[attach-enode] #3111 0
[attach-enode] #3112 0
[assign] #3113 justification -1: p299
[assign] #3114 justification -1: p299
[new-match] 0x124075288 #49 #37 #3022 #60 ; #3073 (#3025 #3025)
[mk-app] #3115 + #33 #3022
[mk-app] #3116 slot #60 #3115
[mk-app] #3117 = #3073 #3116
[mk-app] #3118 Int
[attach-meaning] #3118 arith 30
[mk-app] #3119 + #3118 #102
[inst-discovered] theory-solving 0x0 arith# ; #3115
[mk-app] #3120 = #3115 #3119
[mk-proof] #3121 rewrite #3120
[instance] 0x0 #3120
[end-of-instance]
[mk-app] #3122 slot #60 #3119
[mk-app] #3123 = #3116 #3122
[mk-proof] #3124 monotonicity #3121 #3123
[mk-app] #3125 = #3073 #3122
[mk-app] #3126 = #3117 #3125
[mk-proof] #3127 monotonicity #3124 #3126
[mk-app] #3128 or #293 #3125
[mk-app] #3129 or #293 #3117
[mk-proof] #3130 quant-inst #3129
[mk-app] #3131 = #3129 #3128
[mk-proof] #3132 monotonicity #3127 #3131
[mk-app] #3133 = #3128 #3128
[mk-proof] #3134 rewrite #3133
[mk-proof] #3135 trans #3132 #3134 #3131
[mk-proof] #3136 mp #3130 #3135 #3128
[instance] 0x124075288 #3130 ; 59
[attach-enode] #3118 59
[attach-enode] #3119 59
[attach-enode] #3122 59
[attach-enode] #3125 59
[assign] #3125 justification -1: p2
[end-of-instance]
[eq-expl] #3119 root
[new-match] 0x1240755e8 #209 #29 #3119 #60 ; #3122
[eq-expl] #3073 lit #3125 ; #3122
[eq-expl] #3122 root
[new-match] 0x124075620 #96 #67 #3119 ; #3074 (#59 #59) (#3073 #3122) (#60 #60)
[mk-app] #3137 slot_inverse #60 #3122
[mk-app] #3138 * #82 #3137
[mk-app] #3139 + #3119 #3138
[mk-app] #3140 = #3139 #55
[mk-app] #3141 + #3118 #102 #3138
[inst-discovered] theory-solving 0x0 arith# ; #3139
[mk-app] #3142 = #3139 #3141
[mk-proof] #3143 rewrite #3142
[instance] 0x0 #3142
[end-of-instance]
[mk-app] #3144 = #3141 #55
[mk-app] #3145 = #3140 #3144
[mk-proof] #3146 monotonicity #3143 #3145
[mk-app] #3147 Int
[attach-meaning] #3147 arith (- 30)
[mk-app] #3148 + #102 #3138
[mk-app] #3149 = #3148 #3147
[inst-discovered] theory-solving 0x0 arith# ; #3144
[mk-app] #3150 = #3144 #3149
[mk-proof] #3151 rewrite #3150
[instance] 0x0 #3150
[end-of-instance]
[mk-app] #3152 = #3140 #3149
[mk-proof] #3153 trans #3146 #3151 #3152
[mk-app] #3154 or #285 #3149
[mk-app] #3155 or #285 #3140
[mk-proof] #3156 quant-inst #3155
[mk-app] #3157 = #3155 #3154
[mk-proof] #3158 monotonicity #3153 #3157
[mk-app] #3159 = #3154 #3154
[mk-proof] #3160 rewrite #3159
[mk-proof] #3161 trans #3158 #3160 #3157
[mk-proof] #3162 mp #3156 #3161 #3154
[instance] 0x1240755e8 #3156 ; 60
[attach-enode] #3137 60
[attach-enode] #3138 60
[attach-enode] #3148 60
[attach-enode] #3147 60
[attach-enode] #3149 60
[mk-app] #3163 <= #3148 #3147
[mk-app] #3164 >= #3148 #3147
[assign] #3149 justification -1: p1
[end-of-instance]
[mk-app] #3165 >= #3119 #55
[mk-app] #3166 not #3165
[mk-app] #3167 + #3119 #83
[mk-app] #3168 >= #3167 #55
[mk-app] #3169 lookup #59 #3122
[mk-app] #3170 next #3122
[mk-app] #3171 lookup #59 #3170
[mk-app] #3172 * #82 #3171
[mk-app] #3173 + #3169 #3172
[mk-app] #3174 <= #3173 #55
[mk-app] #3175 or #3166 #3168 #3174
[attach-meaning] #3147 arith (- 30)
[mk-app] #3176 >= #102 #3147
[inst-discovered] theory-solving 0x0 arith# ; #3165
[mk-app] #3177 = #3165 #3176
[mk-proof] #3178 rewrite #3177
[instance] 0x0 #3177
[end-of-instance]
[mk-app] #3179 not #3176
[mk-app] #3180 = #3166 #3179
[mk-proof] #3181 monotonicity #3178 #3180
[attach-meaning] #3118 arith 30
[mk-app] #3182 + #3118 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3167
[mk-app] #3183 = #3167 #3182
[mk-proof] #3184 rewrite #3183
[instance] 0x0 #3183
[end-of-instance]
[mk-app] #3185 >= #3182 #55
[mk-app] #3186 = #3168 #3185
[mk-proof] #3187 monotonicity #3184 #3186
[attach-meaning] #3147 arith (- 30)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3118 arith 30
[mk-app] #3188 <= #122 #3118
[inst-discovered] theory-solving 0x0 arith# ; #3185
[mk-app] #3189 = #3185 #3188
[mk-proof] #3190 rewrite #3189
[instance] 0x0 #3189
[end-of-instance]
[mk-app] #3191 = #3168 #3188
[mk-proof] #3192 trans #3187 #3190 #3191
[mk-app] #3193 or #3179 #3188 #3174
[mk-app] #3194 = #3175 #3193
[mk-proof] #3195 monotonicity #3181 #3192 #3194
[mk-app] #3196 or #313 #3179 #3188 #3174
[mk-app] #3197 or #313 #3175
[mk-proof] #3198 quant-inst #3197
[mk-app] #3199 or #313 #3193
[mk-app] #3200 = #3197 #3199
[mk-proof] #3201 monotonicity #3195 #3200
[mk-app] #3202 = #3199 #3196
[mk-proof] #3203 rewrite #3202
[mk-app] #3204 = #3197 #3196
[mk-proof] #3205 trans #3201 #3203 #3204
[mk-proof] #3206 mp #3198 #3205 #3196
[instance] 0x124075620 #3198 ; 60
[assign] #3176 justification -1: p296
[assign] (not #3188) justification -1: (not p5)
[attach-enode] #3169 60
[attach-enode] #3170 60
[attach-enode] #3171 60
[attach-enode] #3172 60
[attach-enode] #3173 60
[assign] #3174 justification -1: p3 p306 (not p307)
[end-of-instance]
[assign] #3163 clause p304 (not p303)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 30::Int idx))))) -30::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 30::Int idx))))) -30::Int)) 

[assign] #3164 clause p305 (not p303)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 30::Int idx))))) -30::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 30::Int idx))))) -30::Int)) 

[mk-app] #3207 = #3074 #3169
[attach-meaning] #82 arith (- 1)
[mk-app] #3208 * #82 #3169
[mk-app] #3209 + #3074 #3208
[mk-app] #3210 <= #3209 #55
[mk-app] #3211 >= #3209 #55
[assign] #3207 justification -1: p302
[attach-enode] #3207 0
[attach-enode] #3208 0
[attach-enode] #3209 0
[assign] #3210 justification -1: p309
[assign] #3211 justification -1: p309
[new-match] 0x1240762f0 #49 #37 #3119 #60 ; #3170 (#3122 #3122)
[mk-app] #3212 + #33 #3119
[mk-app] #3213 slot #60 #3212
[mk-app] #3214 = #3170 #3213
[mk-app] #3215 Int
[attach-meaning] #3215 arith 31
[mk-app] #3216 + #3215 #102
[inst-discovered] theory-solving 0x0 arith# ; #3212
[mk-app] #3217 = #3212 #3216
[mk-proof] #3218 rewrite #3217
[instance] 0x0 #3217
[end-of-instance]
[mk-app] #3219 slot #60 #3216
[mk-app] #3220 = #3213 #3219
[mk-proof] #3221 monotonicity #3218 #3220
[mk-app] #3222 = #3170 #3219
[mk-app] #3223 = #3214 #3222
[mk-proof] #3224 monotonicity #3221 #3223
[mk-app] #3225 or #293 #3222
[mk-app] #3226 or #293 #3214
[mk-proof] #3227 quant-inst #3226
[mk-app] #3228 = #3226 #3225
[mk-proof] #3229 monotonicity #3224 #3228
[mk-app] #3230 = #3225 #3225
[mk-proof] #3231 rewrite #3230
[mk-proof] #3232 trans #3229 #3231 #3228
[mk-proof] #3233 mp #3227 #3232 #3225
[instance] 0x1240762f0 #3227 ; 61
[attach-enode] #3215 61
[attach-enode] #3216 61
[attach-enode] #3219 61
[attach-enode] #3222 61
[assign] #3222 justification -1: p2
[end-of-instance]
[eq-expl] #3216 root
[new-match] 0x124078aa8 #209 #29 #3216 #60 ; #3219
[eq-expl] #3170 lit #3222 ; #3219
[eq-expl] #3219 root
[new-match] 0x124078ae0 #96 #67 #3216 ; #3171 (#59 #59) (#3170 #3219) (#60 #60)
[mk-app] #3234 slot_inverse #60 #3219
[mk-app] #3235 * #82 #3234
[mk-app] #3236 + #3216 #3235
[mk-app] #3237 = #3236 #55
[mk-app] #3238 + #3215 #102 #3235
[inst-discovered] theory-solving 0x0 arith# ; #3236
[mk-app] #3239 = #3236 #3238
[mk-proof] #3240 rewrite #3239
[instance] 0x0 #3239
[end-of-instance]
[mk-app] #3241 = #3238 #55
[mk-app] #3242 = #3237 #3241
[mk-proof] #3243 monotonicity #3240 #3242
[mk-app] #3244 Int
[attach-meaning] #3244 arith (- 31)
[mk-app] #3245 + #102 #3235
[mk-app] #3246 = #3245 #3244
[inst-discovered] theory-solving 0x0 arith# ; #3241
[mk-app] #3247 = #3241 #3246
[mk-proof] #3248 rewrite #3247
[instance] 0x0 #3247
[end-of-instance]
[mk-app] #3249 = #3237 #3246
[mk-proof] #3250 trans #3243 #3248 #3249
[mk-app] #3251 or #285 #3246
[mk-app] #3252 or #285 #3237
[mk-proof] #3253 quant-inst #3252
[mk-app] #3254 = #3252 #3251
[mk-proof] #3255 monotonicity #3250 #3254
[mk-app] #3256 = #3251 #3251
[mk-proof] #3257 rewrite #3256
[mk-proof] #3258 trans #3255 #3257 #3254
[mk-proof] #3259 mp #3253 #3258 #3251
[instance] 0x124078aa8 #3253 ; 62
[attach-enode] #3234 62
[attach-enode] #3235 62
[attach-enode] #3245 62
[attach-enode] #3244 62
[attach-enode] #3246 62
[mk-app] #3260 <= #3245 #3244
[mk-app] #3261 >= #3245 #3244
[assign] #3246 justification -1: p1
[end-of-instance]
[mk-app] #3262 >= #3216 #55
[mk-app] #3263 not #3262
[mk-app] #3264 + #3216 #83
[mk-app] #3265 >= #3264 #55
[mk-app] #3266 lookup #59 #3219
[mk-app] #3267 next #3219
[mk-app] #3268 lookup #59 #3267
[mk-app] #3269 * #82 #3268
[mk-app] #3270 + #3266 #3269
[mk-app] #3271 <= #3270 #55
[mk-app] #3272 or #3263 #3265 #3271
[attach-meaning] #3244 arith (- 31)
[mk-app] #3273 >= #102 #3244
[inst-discovered] theory-solving 0x0 arith# ; #3262
[mk-app] #3274 = #3262 #3273
[mk-proof] #3275 rewrite #3274
[instance] 0x0 #3274
[end-of-instance]
[mk-app] #3276 not #3273
[mk-app] #3277 = #3263 #3276
[mk-proof] #3278 monotonicity #3275 #3277
[attach-meaning] #3215 arith 31
[mk-app] #3279 + #3215 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3264
[mk-app] #3280 = #3264 #3279
[mk-proof] #3281 rewrite #3280
[instance] 0x0 #3280
[end-of-instance]
[mk-app] #3282 >= #3279 #55
[mk-app] #3283 = #3265 #3282
[mk-proof] #3284 monotonicity #3281 #3283
[attach-meaning] #3244 arith (- 31)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3215 arith 31
[mk-app] #3285 <= #122 #3215
[inst-discovered] theory-solving 0x0 arith# ; #3282
[mk-app] #3286 = #3282 #3285
[mk-proof] #3287 rewrite #3286
[instance] 0x0 #3286
[end-of-instance]
[mk-app] #3288 = #3265 #3285
[mk-proof] #3289 trans #3284 #3287 #3288
[mk-app] #3290 or #3276 #3285 #3271
[mk-app] #3291 = #3272 #3290
[mk-proof] #3292 monotonicity #3278 #3289 #3291
[mk-app] #3293 or #313 #3276 #3285 #3271
[mk-app] #3294 or #313 #3272
[mk-proof] #3295 quant-inst #3294
[mk-app] #3296 or #313 #3290
[mk-app] #3297 = #3294 #3296
[mk-proof] #3298 monotonicity #3292 #3297
[mk-app] #3299 = #3296 #3293
[mk-proof] #3300 rewrite #3299
[mk-app] #3301 = #3294 #3293
[mk-proof] #3302 trans #3298 #3300 #3301
[mk-proof] #3303 mp #3295 #3302 #3293
[instance] 0x124078ae0 #3295 ; 62
[assign] #3273 justification -1: p306
[assign] (not #3285) justification -1: (not p5)
[attach-enode] #3266 62
[attach-enode] #3267 62
[attach-enode] #3268 62
[attach-enode] #3269 62
[attach-enode] #3270 62
[assign] #3271 justification -1: p3 p316 (not p317)
[end-of-instance]
[assign] #3260 clause p314 (not p313)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 31::Int idx))))) -31::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 31::Int idx))))) -31::Int)) 

[assign] #3261 clause p315 (not p313)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 31::Int idx))))) -31::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 31::Int idx))))) -31::Int)) 

[mk-app] #3304 = #3171 #3266
[attach-meaning] #82 arith (- 1)
[mk-app] #3305 * #82 #3266
[mk-app] #3306 + #3171 #3305
[mk-app] #3307 <= #3306 #55
[mk-app] #3308 >= #3306 #55
[assign] #3304 justification -1: p312
[attach-enode] #3304 0
[attach-enode] #3305 0
[attach-enode] #3306 0
[assign] #3307 justification -1: p319
[assign] #3308 justification -1: p319
[new-match] 0x1240797b0 #49 #37 #3216 #60 ; #3267 (#3219 #3219)
[mk-app] #3309 + #33 #3216
[mk-app] #3310 slot #60 #3309
[mk-app] #3311 = #3267 #3310
[mk-app] #3312 Int
[attach-meaning] #3312 arith 32
[mk-app] #3313 + #3312 #102
[inst-discovered] theory-solving 0x0 arith# ; #3309
[mk-app] #3314 = #3309 #3313
[mk-proof] #3315 rewrite #3314
[instance] 0x0 #3314
[end-of-instance]
[mk-app] #3316 slot #60 #3313
[mk-app] #3317 = #3310 #3316
[mk-proof] #3318 monotonicity #3315 #3317
[mk-app] #3319 = #3267 #3316
[mk-app] #3320 = #3311 #3319
[mk-proof] #3321 monotonicity #3318 #3320
[mk-app] #3322 or #293 #3319
[mk-app] #3323 or #293 #3311
[mk-proof] #3324 quant-inst #3323
[mk-app] #3325 = #3323 #3322
[mk-proof] #3326 monotonicity #3321 #3325
[mk-app] #3327 = #3322 #3322
[mk-proof] #3328 rewrite #3327
[mk-proof] #3329 trans #3326 #3328 #3325
[mk-proof] #3330 mp #3324 #3329 #3322
[instance] 0x1240797b0 #3324 ; 63
[attach-enode] #3312 63
[attach-enode] #3313 63
[attach-enode] #3316 63
[attach-enode] #3319 63
[assign] #3319 justification -1: p2
[end-of-instance]
[eq-expl] #3313 root
[new-match] 0x124079b10 #209 #29 #3313 #60 ; #3316
[eq-expl] #3267 lit #3319 ; #3316
[eq-expl] #3316 root
[new-match] 0x124079b48 #96 #67 #3313 ; #3268 (#59 #59) (#3267 #3316) (#60 #60)
[mk-app] #3331 slot_inverse #60 #3316
[mk-app] #3332 * #82 #3331
[mk-app] #3333 + #3313 #3332
[mk-app] #3334 = #3333 #55
[mk-app] #3335 + #3312 #102 #3332
[inst-discovered] theory-solving 0x0 arith# ; #3333
[mk-app] #3336 = #3333 #3335
[mk-proof] #3337 rewrite #3336
[instance] 0x0 #3336
[end-of-instance]
[mk-app] #3338 = #3335 #55
[mk-app] #3339 = #3334 #3338
[mk-proof] #3340 monotonicity #3337 #3339
[mk-app] #3341 Int
[attach-meaning] #3341 arith (- 32)
[mk-app] #3342 + #102 #3332
[mk-app] #3343 = #3342 #3341
[inst-discovered] theory-solving 0x0 arith# ; #3338
[mk-app] #3344 = #3338 #3343
[mk-proof] #3345 rewrite #3344
[instance] 0x0 #3344
[end-of-instance]
[mk-app] #3346 = #3334 #3343
[mk-proof] #3347 trans #3340 #3345 #3346
[mk-app] #3348 or #285 #3343
[mk-app] #3349 or #285 #3334
[mk-proof] #3350 quant-inst #3349
[mk-app] #3351 = #3349 #3348
[mk-proof] #3352 monotonicity #3347 #3351
[mk-app] #3353 = #3348 #3348
[mk-proof] #3354 rewrite #3353
[mk-proof] #3355 trans #3352 #3354 #3351
[mk-proof] #3356 mp #3350 #3355 #3348
[instance] 0x124079b10 #3350 ; 64
[attach-enode] #3331 64
[attach-enode] #3332 64
[attach-enode] #3342 64
[attach-enode] #3341 64
[attach-enode] #3343 64
[mk-app] #3357 <= #3342 #3341
[mk-app] #3358 >= #3342 #3341
[assign] #3343 justification -1: p1
[end-of-instance]
[mk-app] #3359 >= #3313 #55
[mk-app] #3360 not #3359
[mk-app] #3361 + #3313 #83
[mk-app] #3362 >= #3361 #55
[mk-app] #3363 lookup #59 #3316
[mk-app] #3364 next #3316
[mk-app] #3365 lookup #59 #3364
[mk-app] #3366 * #82 #3365
[mk-app] #3367 + #3363 #3366
[mk-app] #3368 <= #3367 #55
[mk-app] #3369 or #3360 #3362 #3368
[attach-meaning] #3341 arith (- 32)
[mk-app] #3370 >= #102 #3341
[inst-discovered] theory-solving 0x0 arith# ; #3359
[mk-app] #3371 = #3359 #3370
[mk-proof] #3372 rewrite #3371
[instance] 0x0 #3371
[end-of-instance]
[mk-app] #3373 not #3370
[mk-app] #3374 = #3360 #3373
[mk-proof] #3375 monotonicity #3372 #3374
[attach-meaning] #3312 arith 32
[mk-app] #3376 + #3312 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3361
[mk-app] #3377 = #3361 #3376
[mk-proof] #3378 rewrite #3377
[instance] 0x0 #3377
[end-of-instance]
[mk-app] #3379 >= #3376 #55
[mk-app] #3380 = #3362 #3379
[mk-proof] #3381 monotonicity #3378 #3380
[attach-meaning] #3341 arith (- 32)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3312 arith 32
[mk-app] #3382 <= #122 #3312
[inst-discovered] theory-solving 0x0 arith# ; #3379
[mk-app] #3383 = #3379 #3382
[mk-proof] #3384 rewrite #3383
[instance] 0x0 #3383
[end-of-instance]
[mk-app] #3385 = #3362 #3382
[mk-proof] #3386 trans #3381 #3384 #3385
[mk-app] #3387 or #3373 #3382 #3368
[mk-app] #3388 = #3369 #3387
[mk-proof] #3389 monotonicity #3375 #3386 #3388
[mk-app] #3390 or #313 #3373 #3382 #3368
[mk-app] #3391 or #313 #3369
[mk-proof] #3392 quant-inst #3391
[mk-app] #3393 or #313 #3387
[mk-app] #3394 = #3391 #3393
[mk-proof] #3395 monotonicity #3389 #3394
[mk-app] #3396 = #3393 #3390
[mk-proof] #3397 rewrite #3396
[mk-app] #3398 = #3391 #3390
[mk-proof] #3399 trans #3395 #3397 #3398
[mk-proof] #3400 mp #3392 #3399 #3390
[instance] 0x124079b48 #3392 ; 64
[assign] #3370 justification -1: p316
[assign] (not #3382) justification -1: (not p5)
[attach-enode] #3363 64
[attach-enode] #3364 64
[attach-enode] #3365 64
[attach-enode] #3366 64
[attach-enode] #3367 64
[assign] #3368 justification -1: p3 p326 (not p327)
[end-of-instance]
[assign] #3357 clause p324 (not p323)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 32::Int idx))))) -32::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 32::Int idx))))) -32::Int)) 

[assign] #3358 clause p325 (not p323)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 32::Int idx))))) -32::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 32::Int idx))))) -32::Int)) 

[mk-app] #3401 = #3268 #3363
[attach-meaning] #82 arith (- 1)
[mk-app] #3402 * #82 #3363
[mk-app] #3403 + #3268 #3402
[mk-app] #3404 <= #3403 #55
[mk-app] #3405 >= #3403 #55
[assign] #3401 justification -1: p322
[attach-enode] #3401 0
[attach-enode] #3402 0
[attach-enode] #3403 0
[assign] #3404 justification -1: p329
[assign] #3405 justification -1: p329
[new-match] 0x124086658 #49 #37 #3313 #60 ; #3364 (#3316 #3316)
[mk-app] #3406 + #33 #3313
[mk-app] #3407 slot #60 #3406
[mk-app] #3408 = #3364 #3407
[mk-app] #3409 Int
[attach-meaning] #3409 arith 33
[mk-app] #3410 + #3409 #102
[inst-discovered] theory-solving 0x0 arith# ; #3406
[mk-app] #3411 = #3406 #3410
[mk-proof] #3412 rewrite #3411
[instance] 0x0 #3411
[end-of-instance]
[mk-app] #3413 slot #60 #3410
[mk-app] #3414 = #3407 #3413
[mk-proof] #3415 monotonicity #3412 #3414
[mk-app] #3416 = #3364 #3413
[mk-app] #3417 = #3408 #3416
[mk-proof] #3418 monotonicity #3415 #3417
[mk-app] #3419 or #293 #3416
[mk-app] #3420 or #293 #3408
[mk-proof] #3421 quant-inst #3420
[mk-app] #3422 = #3420 #3419
[mk-proof] #3423 monotonicity #3418 #3422
[mk-app] #3424 = #3419 #3419
[mk-proof] #3425 rewrite #3424
[mk-proof] #3426 trans #3423 #3425 #3422
[mk-proof] #3427 mp #3421 #3426 #3419
[instance] 0x124086658 #3421 ; 65
[attach-enode] #3409 65
[attach-enode] #3410 65
[attach-enode] #3413 65
[attach-enode] #3416 65
[assign] #3416 justification -1: p2
[end-of-instance]
[eq-expl] #3410 root
[new-match] 0x1240869b8 #209 #29 #3410 #60 ; #3413
[eq-expl] #3364 lit #3416 ; #3413
[eq-expl] #3413 root
[new-match] 0x1240869f0 #96 #67 #3410 ; #3365 (#59 #59) (#3364 #3413) (#60 #60)
[mk-app] #3428 slot_inverse #60 #3413
[mk-app] #3429 * #82 #3428
[mk-app] #3430 + #3410 #3429
[mk-app] #3431 = #3430 #55
[mk-app] #3432 + #3409 #102 #3429
[inst-discovered] theory-solving 0x0 arith# ; #3430
[mk-app] #3433 = #3430 #3432
[mk-proof] #3434 rewrite #3433
[instance] 0x0 #3433
[end-of-instance]
[mk-app] #3435 = #3432 #55
[mk-app] #3436 = #3431 #3435
[mk-proof] #3437 monotonicity #3434 #3436
[mk-app] #3438 Int
[attach-meaning] #3438 arith (- 33)
[mk-app] #3439 + #102 #3429
[mk-app] #3440 = #3439 #3438
[inst-discovered] theory-solving 0x0 arith# ; #3435
[mk-app] #3441 = #3435 #3440
[mk-proof] #3442 rewrite #3441
[instance] 0x0 #3441
[end-of-instance]
[mk-app] #3443 = #3431 #3440
[mk-proof] #3444 trans #3437 #3442 #3443
[mk-app] #3445 or #285 #3440
[mk-app] #3446 or #285 #3431
[mk-proof] #3447 quant-inst #3446
[mk-app] #3448 = #3446 #3445
[mk-proof] #3449 monotonicity #3444 #3448
[mk-app] #3450 = #3445 #3445
[mk-proof] #3451 rewrite #3450
[mk-proof] #3452 trans #3449 #3451 #3448
[mk-proof] #3453 mp #3447 #3452 #3445
[instance] 0x1240869b8 #3447 ; 66
[attach-enode] #3428 66
[attach-enode] #3429 66
[attach-enode] #3439 66
[attach-enode] #3438 66
[attach-enode] #3440 66
[mk-app] #3454 <= #3439 #3438
[mk-app] #3455 >= #3439 #3438
[assign] #3440 justification -1: p1
[end-of-instance]
[mk-app] #3456 >= #3410 #55
[mk-app] #3457 not #3456
[mk-app] #3458 + #3410 #83
[mk-app] #3459 >= #3458 #55
[mk-app] #3460 lookup #59 #3413
[mk-app] #3461 next #3413
[mk-app] #3462 lookup #59 #3461
[mk-app] #3463 * #82 #3462
[mk-app] #3464 + #3460 #3463
[mk-app] #3465 <= #3464 #55
[mk-app] #3466 or #3457 #3459 #3465
[attach-meaning] #3438 arith (- 33)
[mk-app] #3467 >= #102 #3438
[inst-discovered] theory-solving 0x0 arith# ; #3456
[mk-app] #3468 = #3456 #3467
[mk-proof] #3469 rewrite #3468
[instance] 0x0 #3468
[end-of-instance]
[mk-app] #3470 not #3467
[mk-app] #3471 = #3457 #3470
[mk-proof] #3472 monotonicity #3469 #3471
[attach-meaning] #3409 arith 33
[mk-app] #3473 + #3409 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3458
[mk-app] #3474 = #3458 #3473
[mk-proof] #3475 rewrite #3474
[instance] 0x0 #3474
[end-of-instance]
[mk-app] #3476 >= #3473 #55
[mk-app] #3477 = #3459 #3476
[mk-proof] #3478 monotonicity #3475 #3477
[attach-meaning] #3438 arith (- 33)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3409 arith 33
[mk-app] #3479 <= #122 #3409
[inst-discovered] theory-solving 0x0 arith# ; #3476
[mk-app] #3480 = #3476 #3479
[mk-proof] #3481 rewrite #3480
[instance] 0x0 #3480
[end-of-instance]
[mk-app] #3482 = #3459 #3479
[mk-proof] #3483 trans #3478 #3481 #3482
[mk-app] #3484 or #3470 #3479 #3465
[mk-app] #3485 = #3466 #3484
[mk-proof] #3486 monotonicity #3472 #3483 #3485
[mk-app] #3487 or #313 #3470 #3479 #3465
[mk-app] #3488 or #313 #3466
[mk-proof] #3489 quant-inst #3488
[mk-app] #3490 or #313 #3484
[mk-app] #3491 = #3488 #3490
[mk-proof] #3492 monotonicity #3486 #3491
[mk-app] #3493 = #3490 #3487
[mk-proof] #3494 rewrite #3493
[mk-app] #3495 = #3488 #3487
[mk-proof] #3496 trans #3492 #3494 #3495
[mk-proof] #3497 mp #3489 #3496 #3487
[instance] 0x1240869f0 #3489 ; 66
[assign] #3467 justification -1: p326
[assign] (not #3479) justification -1: (not p5)
[attach-enode] #3460 66
[attach-enode] #3461 66
[attach-enode] #3462 66
[attach-enode] #3463 66
[attach-enode] #3464 66
[assign] #3465 justification -1: p3 p336 (not p337)
[end-of-instance]
[assign] #3454 clause p334 (not p333)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 33::Int idx))))) -33::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 33::Int idx))))) -33::Int)) 

[assign] #3455 clause p335 (not p333)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 33::Int idx))))) -33::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 33::Int idx))))) -33::Int)) 

[mk-app] #3498 = #3365 #3460
[attach-meaning] #82 arith (- 1)
[mk-app] #3499 * #82 #3460
[mk-app] #3500 + #3365 #3499
[mk-app] #3501 <= #3500 #55
[mk-app] #3502 >= #3500 #55
[assign] #3498 justification -1: p332
[attach-enode] #3498 0
[attach-enode] #3499 0
[attach-enode] #3500 0
[assign] #3501 justification -1: p339
[assign] #3502 justification -1: p339
[new-match] 0x1240876c0 #49 #37 #3410 #60 ; #3461 (#3413 #3413)
[mk-app] #3503 + #33 #3410
[mk-app] #3504 slot #60 #3503
[mk-app] #3505 = #3461 #3504
[mk-app] #3506 Int
[attach-meaning] #3506 arith 34
[mk-app] #3507 + #3506 #102
[inst-discovered] theory-solving 0x0 arith# ; #3503
[mk-app] #3508 = #3503 #3507
[mk-proof] #3509 rewrite #3508
[instance] 0x0 #3508
[end-of-instance]
[mk-app] #3510 slot #60 #3507
[mk-app] #3511 = #3504 #3510
[mk-proof] #3512 monotonicity #3509 #3511
[mk-app] #3513 = #3461 #3510
[mk-app] #3514 = #3505 #3513
[mk-proof] #3515 monotonicity #3512 #3514
[mk-app] #3516 or #293 #3513
[mk-app] #3517 or #293 #3505
[mk-proof] #3518 quant-inst #3517
[mk-app] #3519 = #3517 #3516
[mk-proof] #3520 monotonicity #3515 #3519
[mk-app] #3521 = #3516 #3516
[mk-proof] #3522 rewrite #3521
[mk-proof] #3523 trans #3520 #3522 #3519
[mk-proof] #3524 mp #3518 #3523 #3516
[instance] 0x1240876c0 #3518 ; 67
[attach-enode] #3506 67
[attach-enode] #3507 67
[attach-enode] #3510 67
[attach-enode] #3513 67
[assign] #3513 justification -1: p2
[end-of-instance]
[eq-expl] #3507 root
[new-match] 0x124087a20 #209 #29 #3507 #60 ; #3510
[eq-expl] #3461 lit #3513 ; #3510
[eq-expl] #3510 root
[new-match] 0x124087a58 #96 #67 #3507 ; #3462 (#59 #59) (#3461 #3510) (#60 #60)
[mk-app] #3525 slot_inverse #60 #3510
[mk-app] #3526 * #82 #3525
[mk-app] #3527 + #3507 #3526
[mk-app] #3528 = #3527 #55
[mk-app] #3529 + #3506 #102 #3526
[inst-discovered] theory-solving 0x0 arith# ; #3527
[mk-app] #3530 = #3527 #3529
[mk-proof] #3531 rewrite #3530
[instance] 0x0 #3530
[end-of-instance]
[mk-app] #3532 = #3529 #55
[mk-app] #3533 = #3528 #3532
[mk-proof] #3534 monotonicity #3531 #3533
[mk-app] #3535 Int
[attach-meaning] #3535 arith (- 34)
[mk-app] #3536 + #102 #3526
[mk-app] #3537 = #3536 #3535
[inst-discovered] theory-solving 0x0 arith# ; #3532
[mk-app] #3538 = #3532 #3537
[mk-proof] #3539 rewrite #3538
[instance] 0x0 #3538
[end-of-instance]
[mk-app] #3540 = #3528 #3537
[mk-proof] #3541 trans #3534 #3539 #3540
[mk-app] #3542 or #285 #3537
[mk-app] #3543 or #285 #3528
[mk-proof] #3544 quant-inst #3543
[mk-app] #3545 = #3543 #3542
[mk-proof] #3546 monotonicity #3541 #3545
[mk-app] #3547 = #3542 #3542
[mk-proof] #3548 rewrite #3547
[mk-proof] #3549 trans #3546 #3548 #3545
[mk-proof] #3550 mp #3544 #3549 #3542
[instance] 0x124087a20 #3544 ; 68
[attach-enode] #3525 68
[attach-enode] #3526 68
[attach-enode] #3536 68
[attach-enode] #3535 68
[attach-enode] #3537 68
[mk-app] #3551 <= #3536 #3535
[mk-app] #3552 >= #3536 #3535
[assign] #3537 justification -1: p1
[end-of-instance]
[mk-app] #3553 >= #3507 #55
[mk-app] #3554 not #3553
[mk-app] #3555 + #3507 #83
[mk-app] #3556 >= #3555 #55
[mk-app] #3557 lookup #59 #3510
[mk-app] #3558 next #3510
[mk-app] #3559 lookup #59 #3558
[mk-app] #3560 * #82 #3559
[mk-app] #3561 + #3557 #3560
[mk-app] #3562 <= #3561 #55
[mk-app] #3563 or #3554 #3556 #3562
[attach-meaning] #3535 arith (- 34)
[mk-app] #3564 >= #102 #3535
[inst-discovered] theory-solving 0x0 arith# ; #3553
[mk-app] #3565 = #3553 #3564
[mk-proof] #3566 rewrite #3565
[instance] 0x0 #3565
[end-of-instance]
[mk-app] #3567 not #3564
[mk-app] #3568 = #3554 #3567
[mk-proof] #3569 monotonicity #3566 #3568
[attach-meaning] #3506 arith 34
[mk-app] #3570 + #3506 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3555
[mk-app] #3571 = #3555 #3570
[mk-proof] #3572 rewrite #3571
[instance] 0x0 #3571
[end-of-instance]
[mk-app] #3573 >= #3570 #55
[mk-app] #3574 = #3556 #3573
[mk-proof] #3575 monotonicity #3572 #3574
[attach-meaning] #3535 arith (- 34)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3506 arith 34
[mk-app] #3576 <= #122 #3506
[inst-discovered] theory-solving 0x0 arith# ; #3573
[mk-app] #3577 = #3573 #3576
[mk-proof] #3578 rewrite #3577
[instance] 0x0 #3577
[end-of-instance]
[mk-app] #3579 = #3556 #3576
[mk-proof] #3580 trans #3575 #3578 #3579
[mk-app] #3581 or #3567 #3576 #3562
[mk-app] #3582 = #3563 #3581
[mk-proof] #3583 monotonicity #3569 #3580 #3582
[mk-app] #3584 or #313 #3567 #3576 #3562
[mk-app] #3585 or #313 #3563
[mk-proof] #3586 quant-inst #3585
[mk-app] #3587 or #313 #3581
[mk-app] #3588 = #3585 #3587
[mk-proof] #3589 monotonicity #3583 #3588
[mk-app] #3590 = #3587 #3584
[mk-proof] #3591 rewrite #3590
[mk-app] #3592 = #3585 #3584
[mk-proof] #3593 trans #3589 #3591 #3592
[mk-proof] #3594 mp #3586 #3593 #3584
[instance] 0x124087a58 #3586 ; 68
[assign] #3564 justification -1: p336
[assign] (not #3576) justification -1: (not p5)
[attach-enode] #3557 68
[attach-enode] #3558 68
[attach-enode] #3559 68
[attach-enode] #3560 68
[attach-enode] #3561 68
[assign] #3562 justification -1: p3 p346 (not p347)
[end-of-instance]
[assign] #3551 clause p344 (not p343)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 34::Int idx))))) -34::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 34::Int idx))))) -34::Int)) 

[assign] #3552 clause p345 (not p343)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 34::Int idx))))) -34::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 34::Int idx))))) -34::Int)) 

[mk-app] #3595 = #3462 #3557
[attach-meaning] #82 arith (- 1)
[mk-app] #3596 * #82 #3557
[mk-app] #3597 + #3462 #3596
[mk-app] #3598 <= #3597 #55
[mk-app] #3599 >= #3597 #55
[assign] #3595 justification -1: p342
[attach-enode] #3595 0
[attach-enode] #3596 0
[attach-enode] #3597 0
[assign] #3598 justification -1: p349
[assign] #3599 justification -1: p349
[new-match] 0x12403cb50 #49 #37 #3507 #60 ; #3558 (#3510 #3510)
[mk-app] #3600 + #33 #3507
[mk-app] #3601 slot #60 #3600
[mk-app] #3602 = #3558 #3601
[mk-app] #3603 Int
[attach-meaning] #3603 arith 35
[mk-app] #3604 + #3603 #102
[inst-discovered] theory-solving 0x0 arith# ; #3600
[mk-app] #3605 = #3600 #3604
[mk-proof] #3606 rewrite #3605
[instance] 0x0 #3605
[end-of-instance]
[mk-app] #3607 slot #60 #3604
[mk-app] #3608 = #3601 #3607
[mk-proof] #3609 monotonicity #3606 #3608
[mk-app] #3610 = #3558 #3607
[mk-app] #3611 = #3602 #3610
[mk-proof] #3612 monotonicity #3609 #3611
[mk-app] #3613 or #293 #3610
[mk-app] #3614 or #293 #3602
[mk-proof] #3615 quant-inst #3614
[mk-app] #3616 = #3614 #3613
[mk-proof] #3617 monotonicity #3612 #3616
[mk-app] #3618 = #3613 #3613
[mk-proof] #3619 rewrite #3618
[mk-proof] #3620 trans #3617 #3619 #3616
[mk-proof] #3621 mp #3615 #3620 #3613
[instance] 0x12403cb50 #3615 ; 69
[attach-enode] #3603 69
[attach-enode] #3604 69
[attach-enode] #3607 69
[attach-enode] #3610 69
[assign] #3610 justification -1: p2
[end-of-instance]
[eq-expl] #3604 root
[new-match] 0x12403ceb0 #209 #29 #3604 #60 ; #3607
[eq-expl] #3558 lit #3610 ; #3607
[eq-expl] #3607 root
[new-match] 0x12403cee8 #96 #67 #3604 ; #3559 (#59 #59) (#3558 #3607) (#60 #60)
[mk-app] #3622 slot_inverse #60 #3607
[mk-app] #3623 * #82 #3622
[mk-app] #3624 + #3604 #3623
[mk-app] #3625 = #3624 #55
[mk-app] #3626 + #3603 #102 #3623
[inst-discovered] theory-solving 0x0 arith# ; #3624
[mk-app] #3627 = #3624 #3626
[mk-proof] #3628 rewrite #3627
[instance] 0x0 #3627
[end-of-instance]
[mk-app] #3629 = #3626 #55
[mk-app] #3630 = #3625 #3629
[mk-proof] #3631 monotonicity #3628 #3630
[mk-app] #3632 Int
[attach-meaning] #3632 arith (- 35)
[mk-app] #3633 + #102 #3623
[mk-app] #3634 = #3633 #3632
[inst-discovered] theory-solving 0x0 arith# ; #3629
[mk-app] #3635 = #3629 #3634
[mk-proof] #3636 rewrite #3635
[instance] 0x0 #3635
[end-of-instance]
[mk-app] #3637 = #3625 #3634
[mk-proof] #3638 trans #3631 #3636 #3637
[mk-app] #3639 or #285 #3634
[mk-app] #3640 or #285 #3625
[mk-proof] #3641 quant-inst #3640
[mk-app] #3642 = #3640 #3639
[mk-proof] #3643 monotonicity #3638 #3642
[mk-app] #3644 = #3639 #3639
[mk-proof] #3645 rewrite #3644
[mk-proof] #3646 trans #3643 #3645 #3642
[mk-proof] #3647 mp #3641 #3646 #3639
[instance] 0x12403ceb0 #3641 ; 70
[attach-enode] #3622 70
[attach-enode] #3623 70
[attach-enode] #3633 70
[attach-enode] #3632 70
[attach-enode] #3634 70
[mk-app] #3648 <= #3633 #3632
[mk-app] #3649 >= #3633 #3632
[assign] #3634 justification -1: p1
[end-of-instance]
[mk-app] #3650 >= #3604 #55
[mk-app] #3651 not #3650
[mk-app] #3652 + #3604 #83
[mk-app] #3653 >= #3652 #55
[mk-app] #3654 lookup #59 #3607
[mk-app] #3655 next #3607
[mk-app] #3656 lookup #59 #3655
[mk-app] #3657 * #82 #3656
[mk-app] #3658 + #3654 #3657
[mk-app] #3659 <= #3658 #55
[mk-app] #3660 or #3651 #3653 #3659
[attach-meaning] #3632 arith (- 35)
[mk-app] #3661 >= #102 #3632
[inst-discovered] theory-solving 0x0 arith# ; #3650
[mk-app] #3662 = #3650 #3661
[mk-proof] #3663 rewrite #3662
[instance] 0x0 #3662
[end-of-instance]
[mk-app] #3664 not #3661
[mk-app] #3665 = #3651 #3664
[mk-proof] #3666 monotonicity #3663 #3665
[attach-meaning] #3603 arith 35
[mk-app] #3667 + #3603 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3652
[mk-app] #3668 = #3652 #3667
[mk-proof] #3669 rewrite #3668
[instance] 0x0 #3668
[end-of-instance]
[mk-app] #3670 >= #3667 #55
[mk-app] #3671 = #3653 #3670
[mk-proof] #3672 monotonicity #3669 #3671
[attach-meaning] #3632 arith (- 35)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3603 arith 35
[mk-app] #3673 <= #122 #3603
[inst-discovered] theory-solving 0x0 arith# ; #3670
[mk-app] #3674 = #3670 #3673
[mk-proof] #3675 rewrite #3674
[instance] 0x0 #3674
[end-of-instance]
[mk-app] #3676 = #3653 #3673
[mk-proof] #3677 trans #3672 #3675 #3676
[mk-app] #3678 or #3664 #3673 #3659
[mk-app] #3679 = #3660 #3678
[mk-proof] #3680 monotonicity #3666 #3677 #3679
[mk-app] #3681 or #313 #3664 #3673 #3659
[mk-app] #3682 or #313 #3660
[mk-proof] #3683 quant-inst #3682
[mk-app] #3684 or #313 #3678
[mk-app] #3685 = #3682 #3684
[mk-proof] #3686 monotonicity #3680 #3685
[mk-app] #3687 = #3684 #3681
[mk-proof] #3688 rewrite #3687
[mk-app] #3689 = #3682 #3681
[mk-proof] #3690 trans #3686 #3688 #3689
[mk-proof] #3691 mp #3683 #3690 #3681
[instance] 0x12403cee8 #3683 ; 70
[assign] #3661 justification -1: p346
[assign] (not #3673) justification -1: (not p5)
[attach-enode] #3654 70
[attach-enode] #3655 70
[attach-enode] #3656 70
[attach-enode] #3657 70
[attach-enode] #3658 70
[assign] #3659 justification -1: p3 p356 (not p357)
[end-of-instance]
[assign] #3648 clause p354 (not p353)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 35::Int idx))))) -35::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 35::Int idx))))) -35::Int)) 

[assign] #3649 clause p355 (not p353)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 35::Int idx))))) -35::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 35::Int idx))))) -35::Int)) 

[mk-app] #3692 = #3559 #3654
[attach-meaning] #82 arith (- 1)
[mk-app] #3693 * #82 #3654
[mk-app] #3694 + #3559 #3693
[mk-app] #3695 <= #3694 #55
[mk-app] #3696 >= #3694 #55
[assign] #3692 justification -1: p352
[attach-enode] #3692 0
[attach-enode] #3693 0
[attach-enode] #3694 0
[assign] #3695 justification -1: p359
[assign] #3696 justification -1: p359
[new-match] 0x12403dbb8 #49 #37 #3604 #60 ; #3655 (#3607 #3607)
[mk-app] #3697 + #33 #3604
[mk-app] #3698 slot #60 #3697
[mk-app] #3699 = #3655 #3698
[mk-app] #3700 Int
[attach-meaning] #3700 arith 36
[mk-app] #3701 + #3700 #102
[inst-discovered] theory-solving 0x0 arith# ; #3697
[mk-app] #3702 = #3697 #3701
[mk-proof] #3703 rewrite #3702
[instance] 0x0 #3702
[end-of-instance]
[mk-app] #3704 slot #60 #3701
[mk-app] #3705 = #3698 #3704
[mk-proof] #3706 monotonicity #3703 #3705
[mk-app] #3707 = #3655 #3704
[mk-app] #3708 = #3699 #3707
[mk-proof] #3709 monotonicity #3706 #3708
[mk-app] #3710 or #293 #3707
[mk-app] #3711 or #293 #3699
[mk-proof] #3712 quant-inst #3711
[mk-app] #3713 = #3711 #3710
[mk-proof] #3714 monotonicity #3709 #3713
[mk-app] #3715 = #3710 #3710
[mk-proof] #3716 rewrite #3715
[mk-proof] #3717 trans #3714 #3716 #3713
[mk-proof] #3718 mp #3712 #3717 #3710
[instance] 0x12403dbb8 #3712 ; 71
[attach-enode] #3700 71
[attach-enode] #3701 71
[attach-enode] #3704 71
[attach-enode] #3707 71
[assign] #3707 justification -1: p2
[end-of-instance]
[eq-expl] #3701 root
[new-match] 0x12403df18 #209 #29 #3701 #60 ; #3704
[eq-expl] #3655 lit #3707 ; #3704
[eq-expl] #3704 root
[new-match] 0x12403df50 #96 #67 #3701 ; #3656 (#59 #59) (#3655 #3704) (#60 #60)
[mk-app] #3719 slot_inverse #60 #3704
[mk-app] #3720 * #82 #3719
[mk-app] #3721 + #3701 #3720
[mk-app] #3722 = #3721 #55
[mk-app] #3723 + #3700 #102 #3720
[inst-discovered] theory-solving 0x0 arith# ; #3721
[mk-app] #3724 = #3721 #3723
[mk-proof] #3725 rewrite #3724
[instance] 0x0 #3724
[end-of-instance]
[mk-app] #3726 = #3723 #55
[mk-app] #3727 = #3722 #3726
[mk-proof] #3728 monotonicity #3725 #3727
[mk-app] #3729 Int
[attach-meaning] #3729 arith (- 36)
[mk-app] #3730 + #102 #3720
[mk-app] #3731 = #3730 #3729
[inst-discovered] theory-solving 0x0 arith# ; #3726
[mk-app] #3732 = #3726 #3731
[mk-proof] #3733 rewrite #3732
[instance] 0x0 #3732
[end-of-instance]
[mk-app] #3734 = #3722 #3731
[mk-proof] #3735 trans #3728 #3733 #3734
[mk-app] #3736 or #285 #3731
[mk-app] #3737 or #285 #3722
[mk-proof] #3738 quant-inst #3737
[mk-app] #3739 = #3737 #3736
[mk-proof] #3740 monotonicity #3735 #3739
[mk-app] #3741 = #3736 #3736
[mk-proof] #3742 rewrite #3741
[mk-proof] #3743 trans #3740 #3742 #3739
[mk-proof] #3744 mp #3738 #3743 #3736
[instance] 0x12403df18 #3738 ; 72
[attach-enode] #3719 72
[attach-enode] #3720 72
[attach-enode] #3730 72
[attach-enode] #3729 72
[attach-enode] #3731 72
[mk-app] #3745 <= #3730 #3729
[mk-app] #3746 >= #3730 #3729
[assign] #3731 justification -1: p1
[end-of-instance]
[mk-app] #3747 >= #3701 #55
[mk-app] #3748 not #3747
[mk-app] #3749 + #3701 #83
[mk-app] #3750 >= #3749 #55
[mk-app] #3751 lookup #59 #3704
[mk-app] #3752 next #3704
[mk-app] #3753 lookup #59 #3752
[mk-app] #3754 * #82 #3753
[mk-app] #3755 + #3751 #3754
[mk-app] #3756 <= #3755 #55
[mk-app] #3757 or #3748 #3750 #3756
[attach-meaning] #3729 arith (- 36)
[mk-app] #3758 >= #102 #3729
[inst-discovered] theory-solving 0x0 arith# ; #3747
[mk-app] #3759 = #3747 #3758
[mk-proof] #3760 rewrite #3759
[instance] 0x0 #3759
[end-of-instance]
[mk-app] #3761 not #3758
[mk-app] #3762 = #3748 #3761
[mk-proof] #3763 monotonicity #3760 #3762
[attach-meaning] #3700 arith 36
[mk-app] #3764 + #3700 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3749
[mk-app] #3765 = #3749 #3764
[mk-proof] #3766 rewrite #3765
[instance] 0x0 #3765
[end-of-instance]
[mk-app] #3767 >= #3764 #55
[mk-app] #3768 = #3750 #3767
[mk-proof] #3769 monotonicity #3766 #3768
[attach-meaning] #3729 arith (- 36)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3700 arith 36
[mk-app] #3770 <= #122 #3700
[inst-discovered] theory-solving 0x0 arith# ; #3767
[mk-app] #3771 = #3767 #3770
[mk-proof] #3772 rewrite #3771
[instance] 0x0 #3771
[end-of-instance]
[mk-app] #3773 = #3750 #3770
[mk-proof] #3774 trans #3769 #3772 #3773
[mk-app] #3775 or #3761 #3770 #3756
[mk-app] #3776 = #3757 #3775
[mk-proof] #3777 monotonicity #3763 #3774 #3776
[mk-app] #3778 or #313 #3761 #3770 #3756
[mk-app] #3779 or #313 #3757
[mk-proof] #3780 quant-inst #3779
[mk-app] #3781 or #313 #3775
[mk-app] #3782 = #3779 #3781
[mk-proof] #3783 monotonicity #3777 #3782
[mk-app] #3784 = #3781 #3778
[mk-proof] #3785 rewrite #3784
[mk-app] #3786 = #3779 #3778
[mk-proof] #3787 trans #3783 #3785 #3786
[mk-proof] #3788 mp #3780 #3787 #3778
[instance] 0x12403df50 #3780 ; 72
[assign] #3758 justification -1: p356
[assign] (not #3770) justification -1: (not p5)
[attach-enode] #3751 72
[attach-enode] #3752 72
[attach-enode] #3753 72
[attach-enode] #3754 72
[attach-enode] #3755 72
[assign] #3756 justification -1: p3 p366 (not p367)
[end-of-instance]
[assign] #3745 clause p364 (not p363)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 36::Int idx))))) -36::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 36::Int idx))))) -36::Int)) 

[assign] #3746 clause p365 (not p363)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 36::Int idx))))) -36::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 36::Int idx))))) -36::Int)) 

[mk-app] #3789 = #3656 #3751
[attach-meaning] #82 arith (- 1)
[mk-app] #3790 * #82 #3751
[mk-app] #3791 + #3656 #3790
[mk-app] #3792 <= #3791 #55
[mk-app] #3793 >= #3791 #55
[assign] #3789 justification -1: p362
[attach-enode] #3789 0
[attach-enode] #3790 0
[attach-enode] #3791 0
[assign] #3792 justification -1: p369
[assign] #3793 justification -1: p369
[new-match] 0x12404a458 #49 #37 #3701 #60 ; #3752 (#3704 #3704)
[mk-app] #3794 + #33 #3701
[mk-app] #3795 slot #60 #3794
[mk-app] #3796 = #3752 #3795
[mk-app] #3797 Int
[attach-meaning] #3797 arith 37
[mk-app] #3798 + #3797 #102
[inst-discovered] theory-solving 0x0 arith# ; #3794
[mk-app] #3799 = #3794 #3798
[mk-proof] #3800 rewrite #3799
[instance] 0x0 #3799
[end-of-instance]
[mk-app] #3801 slot #60 #3798
[mk-app] #3802 = #3795 #3801
[mk-proof] #3803 monotonicity #3800 #3802
[mk-app] #3804 = #3752 #3801
[mk-app] #3805 = #3796 #3804
[mk-proof] #3806 monotonicity #3803 #3805
[mk-app] #3807 or #293 #3804
[mk-app] #3808 or #293 #3796
[mk-proof] #3809 quant-inst #3808
[mk-app] #3810 = #3808 #3807
[mk-proof] #3811 monotonicity #3806 #3810
[mk-app] #3812 = #3807 #3807
[mk-proof] #3813 rewrite #3812
[mk-proof] #3814 trans #3811 #3813 #3810
[mk-proof] #3815 mp #3809 #3814 #3807
[instance] 0x12404a458 #3809 ; 73
[attach-enode] #3797 73
[attach-enode] #3798 73
[attach-enode] #3801 73
[attach-enode] #3804 73
[assign] #3804 justification -1: p2
[end-of-instance]
[eq-expl] #3798 root
[new-match] 0x12404a7b8 #209 #29 #3798 #60 ; #3801
[eq-expl] #3752 lit #3804 ; #3801
[eq-expl] #3801 root
[new-match] 0x12404a7f0 #96 #67 #3798 ; #3753 (#59 #59) (#3752 #3801) (#60 #60)
[mk-app] #3816 slot_inverse #60 #3801
[mk-app] #3817 * #82 #3816
[mk-app] #3818 + #3798 #3817
[mk-app] #3819 = #3818 #55
[mk-app] #3820 + #3797 #102 #3817
[inst-discovered] theory-solving 0x0 arith# ; #3818
[mk-app] #3821 = #3818 #3820
[mk-proof] #3822 rewrite #3821
[instance] 0x0 #3821
[end-of-instance]
[mk-app] #3823 = #3820 #55
[mk-app] #3824 = #3819 #3823
[mk-proof] #3825 monotonicity #3822 #3824
[mk-app] #3826 Int
[attach-meaning] #3826 arith (- 37)
[mk-app] #3827 + #102 #3817
[mk-app] #3828 = #3827 #3826
[inst-discovered] theory-solving 0x0 arith# ; #3823
[mk-app] #3829 = #3823 #3828
[mk-proof] #3830 rewrite #3829
[instance] 0x0 #3829
[end-of-instance]
[mk-app] #3831 = #3819 #3828
[mk-proof] #3832 trans #3825 #3830 #3831
[mk-app] #3833 or #285 #3828
[mk-app] #3834 or #285 #3819
[mk-proof] #3835 quant-inst #3834
[mk-app] #3836 = #3834 #3833
[mk-proof] #3837 monotonicity #3832 #3836
[mk-app] #3838 = #3833 #3833
[mk-proof] #3839 rewrite #3838
[mk-proof] #3840 trans #3837 #3839 #3836
[mk-proof] #3841 mp #3835 #3840 #3833
[instance] 0x12404a7b8 #3835 ; 74
[attach-enode] #3816 74
[attach-enode] #3817 74
[attach-enode] #3827 74
[attach-enode] #3826 74
[attach-enode] #3828 74
[mk-app] #3842 <= #3827 #3826
[mk-app] #3843 >= #3827 #3826
[assign] #3828 justification -1: p1
[end-of-instance]
[mk-app] #3844 >= #3798 #55
[mk-app] #3845 not #3844
[mk-app] #3846 + #3798 #83
[mk-app] #3847 >= #3846 #55
[mk-app] #3848 lookup #59 #3801
[mk-app] #3849 next #3801
[mk-app] #3850 lookup #59 #3849
[mk-app] #3851 * #82 #3850
[mk-app] #3852 + #3848 #3851
[mk-app] #3853 <= #3852 #55
[mk-app] #3854 or #3845 #3847 #3853
[attach-meaning] #3826 arith (- 37)
[mk-app] #3855 >= #102 #3826
[inst-discovered] theory-solving 0x0 arith# ; #3844
[mk-app] #3856 = #3844 #3855
[mk-proof] #3857 rewrite #3856
[instance] 0x0 #3856
[end-of-instance]
[mk-app] #3858 not #3855
[mk-app] #3859 = #3845 #3858
[mk-proof] #3860 monotonicity #3857 #3859
[attach-meaning] #3797 arith 37
[mk-app] #3861 + #3797 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3846
[mk-app] #3862 = #3846 #3861
[mk-proof] #3863 rewrite #3862
[instance] 0x0 #3862
[end-of-instance]
[mk-app] #3864 >= #3861 #55
[mk-app] #3865 = #3847 #3864
[mk-proof] #3866 monotonicity #3863 #3865
[attach-meaning] #3826 arith (- 37)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3797 arith 37
[mk-app] #3867 <= #122 #3797
[inst-discovered] theory-solving 0x0 arith# ; #3864
[mk-app] #3868 = #3864 #3867
[mk-proof] #3869 rewrite #3868
[instance] 0x0 #3868
[end-of-instance]
[mk-app] #3870 = #3847 #3867
[mk-proof] #3871 trans #3866 #3869 #3870
[mk-app] #3872 or #3858 #3867 #3853
[mk-app] #3873 = #3854 #3872
[mk-proof] #3874 monotonicity #3860 #3871 #3873
[mk-app] #3875 or #313 #3858 #3867 #3853
[mk-app] #3876 or #313 #3854
[mk-proof] #3877 quant-inst #3876
[mk-app] #3878 or #313 #3872
[mk-app] #3879 = #3876 #3878
[mk-proof] #3880 monotonicity #3874 #3879
[mk-app] #3881 = #3878 #3875
[mk-proof] #3882 rewrite #3881
[mk-app] #3883 = #3876 #3875
[mk-proof] #3884 trans #3880 #3882 #3883
[mk-proof] #3885 mp #3877 #3884 #3875
[instance] 0x12404a7f0 #3877 ; 74
[assign] #3855 justification -1: p366
[assign] (not #3867) justification -1: (not p5)
[attach-enode] #3848 74
[attach-enode] #3849 74
[attach-enode] #3850 74
[attach-enode] #3851 74
[attach-enode] #3852 74
[assign] #3853 justification -1: p3 p376 (not p377)
[end-of-instance]
[assign] #3842 clause p374 (not p373)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 37::Int idx))))) -37::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 37::Int idx))))) -37::Int)) 

[assign] #3843 clause p375 (not p373)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 37::Int idx))))) -37::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 37::Int idx))))) -37::Int)) 

[mk-app] #3886 = #3753 #3848
[attach-meaning] #82 arith (- 1)
[mk-app] #3887 * #82 #3848
[mk-app] #3888 + #3753 #3887
[mk-app] #3889 <= #3888 #55
[mk-app] #3890 >= #3888 #55
[assign] #3886 justification -1: p372
[attach-enode] #3886 0
[attach-enode] #3887 0
[attach-enode] #3888 0
[assign] #3889 justification -1: p379
[assign] #3890 justification -1: p379
[new-match] 0x12404b4c0 #49 #37 #3798 #60 ; #3849 (#3801 #3801)
[mk-app] #3891 + #33 #3798
[mk-app] #3892 slot #60 #3891
[mk-app] #3893 = #3849 #3892
[mk-app] #3894 Int
[attach-meaning] #3894 arith 38
[mk-app] #3895 + #3894 #102
[inst-discovered] theory-solving 0x0 arith# ; #3891
[mk-app] #3896 = #3891 #3895
[mk-proof] #3897 rewrite #3896
[instance] 0x0 #3896
[end-of-instance]
[mk-app] #3898 slot #60 #3895
[mk-app] #3899 = #3892 #3898
[mk-proof] #3900 monotonicity #3897 #3899
[mk-app] #3901 = #3849 #3898
[mk-app] #3902 = #3893 #3901
[mk-proof] #3903 monotonicity #3900 #3902
[mk-app] #3904 or #293 #3901
[mk-app] #3905 or #293 #3893
[mk-proof] #3906 quant-inst #3905
[mk-app] #3907 = #3905 #3904
[mk-proof] #3908 monotonicity #3903 #3907
[mk-app] #3909 = #3904 #3904
[mk-proof] #3910 rewrite #3909
[mk-proof] #3911 trans #3908 #3910 #3907
[mk-proof] #3912 mp #3906 #3911 #3904
[instance] 0x12404b4c0 #3906 ; 75
[attach-enode] #3894 75
[attach-enode] #3895 75
[attach-enode] #3898 75
[attach-enode] #3901 75
[assign] #3901 justification -1: p2
[end-of-instance]
[eq-expl] #3895 root
[new-match] 0x12404b820 #209 #29 #3895 #60 ; #3898
[eq-expl] #3849 lit #3901 ; #3898
[eq-expl] #3898 root
[new-match] 0x12404b858 #96 #67 #3895 ; #3850 (#59 #59) (#3849 #3898) (#60 #60)
[mk-app] #3913 slot_inverse #60 #3898
[mk-app] #3914 * #82 #3913
[mk-app] #3915 + #3895 #3914
[mk-app] #3916 = #3915 #55
[mk-app] #3917 + #3894 #102 #3914
[inst-discovered] theory-solving 0x0 arith# ; #3915
[mk-app] #3918 = #3915 #3917
[mk-proof] #3919 rewrite #3918
[instance] 0x0 #3918
[end-of-instance]
[mk-app] #3920 = #3917 #55
[mk-app] #3921 = #3916 #3920
[mk-proof] #3922 monotonicity #3919 #3921
[mk-app] #3923 Int
[attach-meaning] #3923 arith (- 38)
[mk-app] #3924 + #102 #3914
[mk-app] #3925 = #3924 #3923
[inst-discovered] theory-solving 0x0 arith# ; #3920
[mk-app] #3926 = #3920 #3925
[mk-proof] #3927 rewrite #3926
[instance] 0x0 #3926
[end-of-instance]
[mk-app] #3928 = #3916 #3925
[mk-proof] #3929 trans #3922 #3927 #3928
[mk-app] #3930 or #285 #3925
[mk-app] #3931 or #285 #3916
[mk-proof] #3932 quant-inst #3931
[mk-app] #3933 = #3931 #3930
[mk-proof] #3934 monotonicity #3929 #3933
[mk-app] #3935 = #3930 #3930
[mk-proof] #3936 rewrite #3935
[mk-proof] #3937 trans #3934 #3936 #3933
[mk-proof] #3938 mp #3932 #3937 #3930
[instance] 0x12404b820 #3932 ; 76
[attach-enode] #3913 76
[attach-enode] #3914 76
[attach-enode] #3924 76
[attach-enode] #3923 76
[attach-enode] #3925 76
[mk-app] #3939 <= #3924 #3923
[mk-app] #3940 >= #3924 #3923
[assign] #3925 justification -1: p1
[end-of-instance]
[mk-app] #3941 >= #3895 #55
[mk-app] #3942 not #3941
[mk-app] #3943 + #3895 #83
[mk-app] #3944 >= #3943 #55
[mk-app] #3945 lookup #59 #3898
[mk-app] #3946 next #3898
[mk-app] #3947 lookup #59 #3946
[mk-app] #3948 * #82 #3947
[mk-app] #3949 + #3945 #3948
[mk-app] #3950 <= #3949 #55
[mk-app] #3951 or #3942 #3944 #3950
[attach-meaning] #3923 arith (- 38)
[mk-app] #3952 >= #102 #3923
[inst-discovered] theory-solving 0x0 arith# ; #3941
[mk-app] #3953 = #3941 #3952
[mk-proof] #3954 rewrite #3953
[instance] 0x0 #3953
[end-of-instance]
[mk-app] #3955 not #3952
[mk-app] #3956 = #3942 #3955
[mk-proof] #3957 monotonicity #3954 #3956
[attach-meaning] #3894 arith 38
[mk-app] #3958 + #3894 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #3943
[mk-app] #3959 = #3943 #3958
[mk-proof] #3960 rewrite #3959
[instance] 0x0 #3959
[end-of-instance]
[mk-app] #3961 >= #3958 #55
[mk-app] #3962 = #3944 #3961
[mk-proof] #3963 monotonicity #3960 #3962
[attach-meaning] #3923 arith (- 38)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3894 arith 38
[mk-app] #3964 <= #122 #3894
[inst-discovered] theory-solving 0x0 arith# ; #3961
[mk-app] #3965 = #3961 #3964
[mk-proof] #3966 rewrite #3965
[instance] 0x0 #3965
[end-of-instance]
[mk-app] #3967 = #3944 #3964
[mk-proof] #3968 trans #3963 #3966 #3967
[mk-app] #3969 or #3955 #3964 #3950
[mk-app] #3970 = #3951 #3969
[mk-proof] #3971 monotonicity #3957 #3968 #3970
[mk-app] #3972 or #313 #3955 #3964 #3950
[mk-app] #3973 or #313 #3951
[mk-proof] #3974 quant-inst #3973
[mk-app] #3975 or #313 #3969
[mk-app] #3976 = #3973 #3975
[mk-proof] #3977 monotonicity #3971 #3976
[mk-app] #3978 = #3975 #3972
[mk-proof] #3979 rewrite #3978
[mk-app] #3980 = #3973 #3972
[mk-proof] #3981 trans #3977 #3979 #3980
[mk-proof] #3982 mp #3974 #3981 #3972
[instance] 0x12404b858 #3974 ; 76
[assign] #3952 justification -1: p376
[assign] (not #3964) justification -1: (not p5)
[attach-enode] #3945 76
[attach-enode] #3946 76
[attach-enode] #3947 76
[attach-enode] #3948 76
[attach-enode] #3949 76
[assign] #3950 justification -1: p3 p386 (not p387)
[end-of-instance]
[assign] #3939 clause p384 (not p383)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 38::Int idx))))) -38::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 38::Int idx))))) -38::Int)) 

[assign] #3940 clause p385 (not p383)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 38::Int idx))))) -38::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 38::Int idx))))) -38::Int)) 

[mk-app] #3983 = #3850 #3945
[attach-meaning] #82 arith (- 1)
[mk-app] #3984 * #82 #3945
[mk-app] #3985 + #3850 #3984
[mk-app] #3986 <= #3985 #55
[mk-app] #3987 >= #3985 #55
[assign] #3983 justification -1: p382
[attach-enode] #3983 0
[attach-enode] #3984 0
[attach-enode] #3985 0
[assign] #3986 justification -1: p389
[assign] #3987 justification -1: p389
[new-match] 0x1240a3788 #49 #37 #3895 #60 ; #3946 (#3898 #3898)
[mk-app] #3988 + #33 #3895
[mk-app] #3989 slot #60 #3988
[mk-app] #3990 = #3946 #3989
[mk-app] #3991 Int
[attach-meaning] #3991 arith 39
[mk-app] #3992 + #3991 #102
[inst-discovered] theory-solving 0x0 arith# ; #3988
[mk-app] #3993 = #3988 #3992
[mk-proof] #3994 rewrite #3993
[instance] 0x0 #3993
[end-of-instance]
[mk-app] #3995 slot #60 #3992
[mk-app] #3996 = #3989 #3995
[mk-proof] #3997 monotonicity #3994 #3996
[mk-app] #3998 = #3946 #3995
[mk-app] #3999 = #3990 #3998
[mk-proof] #4000 monotonicity #3997 #3999
[mk-app] #4001 or #293 #3998
[mk-app] #4002 or #293 #3990
[mk-proof] #4003 quant-inst #4002
[mk-app] #4004 = #4002 #4001
[mk-proof] #4005 monotonicity #4000 #4004
[mk-app] #4006 = #4001 #4001
[mk-proof] #4007 rewrite #4006
[mk-proof] #4008 trans #4005 #4007 #4004
[mk-proof] #4009 mp #4003 #4008 #4001
[instance] 0x1240a3788 #4003 ; 77
[attach-enode] #3991 77
[attach-enode] #3992 77
[attach-enode] #3995 77
[attach-enode] #3998 77
[assign] #3998 justification -1: p2
[end-of-instance]
[eq-expl] #3992 root
[new-match] 0x1240a3ae8 #209 #29 #3992 #60 ; #3995
[eq-expl] #3946 lit #3998 ; #3995
[eq-expl] #3995 root
[new-match] 0x1240a3b20 #96 #67 #3992 ; #3947 (#59 #59) (#3946 #3995) (#60 #60)
[mk-app] #4010 slot_inverse #60 #3995
[mk-app] #4011 * #82 #4010
[mk-app] #4012 + #3992 #4011
[mk-app] #4013 = #4012 #55
[mk-app] #4014 + #3991 #102 #4011
[inst-discovered] theory-solving 0x0 arith# ; #4012
[mk-app] #4015 = #4012 #4014
[mk-proof] #4016 rewrite #4015
[instance] 0x0 #4015
[end-of-instance]
[mk-app] #4017 = #4014 #55
[mk-app] #4018 = #4013 #4017
[mk-proof] #4019 monotonicity #4016 #4018
[mk-app] #4020 Int
[attach-meaning] #4020 arith (- 39)
[mk-app] #4021 + #102 #4011
[mk-app] #4022 = #4021 #4020
[inst-discovered] theory-solving 0x0 arith# ; #4017
[mk-app] #4023 = #4017 #4022
[mk-proof] #4024 rewrite #4023
[instance] 0x0 #4023
[end-of-instance]
[mk-app] #4025 = #4013 #4022
[mk-proof] #4026 trans #4019 #4024 #4025
[mk-app] #4027 or #285 #4022
[mk-app] #4028 or #285 #4013
[mk-proof] #4029 quant-inst #4028
[mk-app] #4030 = #4028 #4027
[mk-proof] #4031 monotonicity #4026 #4030
[mk-app] #4032 = #4027 #4027
[mk-proof] #4033 rewrite #4032
[mk-proof] #4034 trans #4031 #4033 #4030
[mk-proof] #4035 mp #4029 #4034 #4027
[instance] 0x1240a3ae8 #4029 ; 78
[attach-enode] #4010 78
[attach-enode] #4011 78
[attach-enode] #4021 78
[attach-enode] #4020 78
[attach-enode] #4022 78
[mk-app] #4036 <= #4021 #4020
[mk-app] #4037 >= #4021 #4020
[assign] #4022 justification -1: p1
[end-of-instance]
[mk-app] #4038 >= #3992 #55
[mk-app] #4039 not #4038
[mk-app] #4040 + #3992 #83
[mk-app] #4041 >= #4040 #55
[mk-app] #4042 lookup #59 #3995
[mk-app] #4043 next #3995
[mk-app] #4044 lookup #59 #4043
[mk-app] #4045 * #82 #4044
[mk-app] #4046 + #4042 #4045
[mk-app] #4047 <= #4046 #55
[mk-app] #4048 or #4039 #4041 #4047
[attach-meaning] #4020 arith (- 39)
[mk-app] #4049 >= #102 #4020
[inst-discovered] theory-solving 0x0 arith# ; #4038
[mk-app] #4050 = #4038 #4049
[mk-proof] #4051 rewrite #4050
[instance] 0x0 #4050
[end-of-instance]
[mk-app] #4052 not #4049
[mk-app] #4053 = #4039 #4052
[mk-proof] #4054 monotonicity #4051 #4053
[attach-meaning] #3991 arith 39
[mk-app] #4055 + #3991 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4040
[mk-app] #4056 = #4040 #4055
[mk-proof] #4057 rewrite #4056
[instance] 0x0 #4056
[end-of-instance]
[mk-app] #4058 >= #4055 #55
[mk-app] #4059 = #4041 #4058
[mk-proof] #4060 monotonicity #4057 #4059
[attach-meaning] #4020 arith (- 39)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #3991 arith 39
[mk-app] #4061 <= #122 #3991
[inst-discovered] theory-solving 0x0 arith# ; #4058
[mk-app] #4062 = #4058 #4061
[mk-proof] #4063 rewrite #4062
[instance] 0x0 #4062
[end-of-instance]
[mk-app] #4064 = #4041 #4061
[mk-proof] #4065 trans #4060 #4063 #4064
[mk-app] #4066 or #4052 #4061 #4047
[mk-app] #4067 = #4048 #4066
[mk-proof] #4068 monotonicity #4054 #4065 #4067
[mk-app] #4069 or #313 #4052 #4061 #4047
[mk-app] #4070 or #313 #4048
[mk-proof] #4071 quant-inst #4070
[mk-app] #4072 or #313 #4066
[mk-app] #4073 = #4070 #4072
[mk-proof] #4074 monotonicity #4068 #4073
[mk-app] #4075 = #4072 #4069
[mk-proof] #4076 rewrite #4075
[mk-app] #4077 = #4070 #4069
[mk-proof] #4078 trans #4074 #4076 #4077
[mk-proof] #4079 mp #4071 #4078 #4069
[instance] 0x1240a3b20 #4071 ; 78
[assign] #4049 justification -1: p386
[assign] (not #4061) justification -1: (not p5)
[attach-enode] #4042 78
[attach-enode] #4043 78
[attach-enode] #4044 78
[attach-enode] #4045 78
[attach-enode] #4046 78
[assign] #4047 justification -1: p3 p396 (not p397)
[end-of-instance]
[assign] #4036 clause p394 (not p393)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 39::Int idx))))) -39::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 39::Int idx))))) -39::Int)) 

[assign] #4037 clause p395 (not p393)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 39::Int idx))))) -39::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 39::Int idx))))) -39::Int)) 

[mk-app] #4080 = #3947 #4042
[attach-meaning] #82 arith (- 1)
[mk-app] #4081 * #82 #4042
[mk-app] #4082 + #3947 #4081
[mk-app] #4083 <= #4082 #55
[mk-app] #4084 >= #4082 #55
[assign] #4080 justification -1: p392
[attach-enode] #4080 0
[attach-enode] #4081 0
[attach-enode] #4082 0
[assign] #4083 justification -1: p399
[assign] #4084 justification -1: p399
[new-match] 0x1240a47f0 #49 #37 #3992 #60 ; #4043 (#3995 #3995)
[mk-app] #4085 + #33 #3992
[mk-app] #4086 slot #60 #4085
[mk-app] #4087 = #4043 #4086
[mk-app] #4088 Int
[attach-meaning] #4088 arith 40
[mk-app] #4089 + #4088 #102
[inst-discovered] theory-solving 0x0 arith# ; #4085
[mk-app] #4090 = #4085 #4089
[mk-proof] #4091 rewrite #4090
[instance] 0x0 #4090
[end-of-instance]
[mk-app] #4092 slot #60 #4089
[mk-app] #4093 = #4086 #4092
[mk-proof] #4094 monotonicity #4091 #4093
[mk-app] #4095 = #4043 #4092
[mk-app] #4096 = #4087 #4095
[mk-proof] #4097 monotonicity #4094 #4096
[mk-app] #4098 or #293 #4095
[mk-app] #4099 or #293 #4087
[mk-proof] #4100 quant-inst #4099
[mk-app] #4101 = #4099 #4098
[mk-proof] #4102 monotonicity #4097 #4101
[mk-app] #4103 = #4098 #4098
[mk-proof] #4104 rewrite #4103
[mk-proof] #4105 trans #4102 #4104 #4101
[mk-proof] #4106 mp #4100 #4105 #4098
[instance] 0x1240a47f0 #4100 ; 79
[attach-enode] #4088 79
[attach-enode] #4089 79
[attach-enode] #4092 79
[attach-enode] #4095 79
[assign] #4095 justification -1: p2
[end-of-instance]
[eq-expl] #4089 root
[new-match] 0x1240a4b50 #209 #29 #4089 #60 ; #4092
[eq-expl] #4043 lit #4095 ; #4092
[eq-expl] #4092 root
[new-match] 0x1240a4b88 #96 #67 #4089 ; #4044 (#59 #59) (#4043 #4092) (#60 #60)
[mk-app] #4107 slot_inverse #60 #4092
[mk-app] #4108 * #82 #4107
[mk-app] #4109 + #4089 #4108
[mk-app] #4110 = #4109 #55
[mk-app] #4111 + #4088 #102 #4108
[inst-discovered] theory-solving 0x0 arith# ; #4109
[mk-app] #4112 = #4109 #4111
[mk-proof] #4113 rewrite #4112
[instance] 0x0 #4112
[end-of-instance]
[mk-app] #4114 = #4111 #55
[mk-app] #4115 = #4110 #4114
[mk-proof] #4116 monotonicity #4113 #4115
[mk-app] #4117 Int
[attach-meaning] #4117 arith (- 40)
[mk-app] #4118 + #102 #4108
[mk-app] #4119 = #4118 #4117
[inst-discovered] theory-solving 0x0 arith# ; #4114
[mk-app] #4120 = #4114 #4119
[mk-proof] #4121 rewrite #4120
[instance] 0x0 #4120
[end-of-instance]
[mk-app] #4122 = #4110 #4119
[mk-proof] #4123 trans #4116 #4121 #4122
[mk-app] #4124 or #285 #4119
[mk-app] #4125 or #285 #4110
[mk-proof] #4126 quant-inst #4125
[mk-app] #4127 = #4125 #4124
[mk-proof] #4128 monotonicity #4123 #4127
[mk-app] #4129 = #4124 #4124
[mk-proof] #4130 rewrite #4129
[mk-proof] #4131 trans #4128 #4130 #4127
[mk-proof] #4132 mp #4126 #4131 #4124
[instance] 0x1240a4b50 #4126 ; 80
[attach-enode] #4107 80
[attach-enode] #4108 80
[attach-enode] #4118 80
[attach-enode] #4117 80
[attach-enode] #4119 80
[mk-app] #4133 <= #4118 #4117
[mk-app] #4134 >= #4118 #4117
[assign] #4119 justification -1: p1
[end-of-instance]
[mk-app] #4135 >= #4089 #55
[mk-app] #4136 not #4135
[mk-app] #4137 + #4089 #83
[mk-app] #4138 >= #4137 #55
[mk-app] #4139 lookup #59 #4092
[mk-app] #4140 next #4092
[mk-app] #4141 lookup #59 #4140
[mk-app] #4142 * #82 #4141
[mk-app] #4143 + #4139 #4142
[mk-app] #4144 <= #4143 #55
[mk-app] #4145 or #4136 #4138 #4144
[attach-meaning] #4117 arith (- 40)
[mk-app] #4146 >= #102 #4117
[inst-discovered] theory-solving 0x0 arith# ; #4135
[mk-app] #4147 = #4135 #4146
[mk-proof] #4148 rewrite #4147
[instance] 0x0 #4147
[end-of-instance]
[mk-app] #4149 not #4146
[mk-app] #4150 = #4136 #4149
[mk-proof] #4151 monotonicity #4148 #4150
[attach-meaning] #4088 arith 40
[mk-app] #4152 + #4088 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4137
[mk-app] #4153 = #4137 #4152
[mk-proof] #4154 rewrite #4153
[instance] 0x0 #4153
[end-of-instance]
[mk-app] #4155 >= #4152 #55
[mk-app] #4156 = #4138 #4155
[mk-proof] #4157 monotonicity #4154 #4156
[attach-meaning] #4117 arith (- 40)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4088 arith 40
[mk-app] #4158 <= #122 #4088
[inst-discovered] theory-solving 0x0 arith# ; #4155
[mk-app] #4159 = #4155 #4158
[mk-proof] #4160 rewrite #4159
[instance] 0x0 #4159
[end-of-instance]
[mk-app] #4161 = #4138 #4158
[mk-proof] #4162 trans #4157 #4160 #4161
[mk-app] #4163 or #4149 #4158 #4144
[mk-app] #4164 = #4145 #4163
[mk-proof] #4165 monotonicity #4151 #4162 #4164
[mk-app] #4166 or #313 #4149 #4158 #4144
[mk-app] #4167 or #313 #4145
[mk-proof] #4168 quant-inst #4167
[mk-app] #4169 or #313 #4163
[mk-app] #4170 = #4167 #4169
[mk-proof] #4171 monotonicity #4165 #4170
[mk-app] #4172 = #4169 #4166
[mk-proof] #4173 rewrite #4172
[mk-app] #4174 = #4167 #4166
[mk-proof] #4175 trans #4171 #4173 #4174
[mk-proof] #4176 mp #4168 #4175 #4166
[instance] 0x1240a4b88 #4168 ; 80
[assign] #4146 justification -1: p396
[assign] (not #4158) justification -1: (not p5)
[attach-enode] #4139 80
[attach-enode] #4140 80
[attach-enode] #4141 80
[attach-enode] #4142 80
[attach-enode] #4143 80
[assign] #4144 justification -1: p3 p406 (not p407)
[end-of-instance]
[assign] #4133 clause p404 (not p403)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 40::Int idx))))) -40::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 40::Int idx))))) -40::Int)) 

[assign] #4134 clause p405 (not p403)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 40::Int idx))))) -40::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 40::Int idx))))) -40::Int)) 

[mk-app] #4177 = #4044 #4139
[attach-meaning] #82 arith (- 1)
[mk-app] #4178 * #82 #4139
[mk-app] #4179 + #4044 #4178
[mk-app] #4180 <= #4179 #55
[mk-app] #4181 >= #4179 #55
[assign] #4177 justification -1: p402
[attach-enode] #4177 0
[attach-enode] #4178 0
[attach-enode] #4179 0
[assign] #4180 justification -1: p409
[assign] #4181 justification -1: p409
[new-match] 0x1240ad868 #49 #37 #4089 #60 ; #4140 (#4092 #4092)
[mk-app] #4182 + #33 #4089
[mk-app] #4183 slot #60 #4182
[mk-app] #4184 = #4140 #4183
[mk-app] #4185 Int
[attach-meaning] #4185 arith 41
[mk-app] #4186 + #4185 #102
[inst-discovered] theory-solving 0x0 arith# ; #4182
[mk-app] #4187 = #4182 #4186
[mk-proof] #4188 rewrite #4187
[instance] 0x0 #4187
[end-of-instance]
[mk-app] #4189 slot #60 #4186
[mk-app] #4190 = #4183 #4189
[mk-proof] #4191 monotonicity #4188 #4190
[mk-app] #4192 = #4140 #4189
[mk-app] #4193 = #4184 #4192
[mk-proof] #4194 monotonicity #4191 #4193
[mk-app] #4195 or #293 #4192
[mk-app] #4196 or #293 #4184
[mk-proof] #4197 quant-inst #4196
[mk-app] #4198 = #4196 #4195
[mk-proof] #4199 monotonicity #4194 #4198
[mk-app] #4200 = #4195 #4195
[mk-proof] #4201 rewrite #4200
[mk-proof] #4202 trans #4199 #4201 #4198
[mk-proof] #4203 mp #4197 #4202 #4195
[instance] 0x1240ad868 #4197 ; 81
[attach-enode] #4185 81
[attach-enode] #4186 81
[attach-enode] #4189 81
[attach-enode] #4192 81
[assign] #4192 justification -1: p2
[end-of-instance]
[eq-expl] #4186 root
[new-match] 0x1240adbc8 #209 #29 #4186 #60 ; #4189
[eq-expl] #4140 lit #4192 ; #4189
[eq-expl] #4189 root
[new-match] 0x1240adc00 #96 #67 #4186 ; #4141 (#59 #59) (#4140 #4189) (#60 #60)
[mk-app] #4204 slot_inverse #60 #4189
[mk-app] #4205 * #82 #4204
[mk-app] #4206 + #4186 #4205
[mk-app] #4207 = #4206 #55
[mk-app] #4208 + #4185 #102 #4205
[inst-discovered] theory-solving 0x0 arith# ; #4206
[mk-app] #4209 = #4206 #4208
[mk-proof] #4210 rewrite #4209
[instance] 0x0 #4209
[end-of-instance]
[mk-app] #4211 = #4208 #55
[mk-app] #4212 = #4207 #4211
[mk-proof] #4213 monotonicity #4210 #4212
[mk-app] #4214 Int
[attach-meaning] #4214 arith (- 41)
[mk-app] #4215 + #102 #4205
[mk-app] #4216 = #4215 #4214
[inst-discovered] theory-solving 0x0 arith# ; #4211
[mk-app] #4217 = #4211 #4216
[mk-proof] #4218 rewrite #4217
[instance] 0x0 #4217
[end-of-instance]
[mk-app] #4219 = #4207 #4216
[mk-proof] #4220 trans #4213 #4218 #4219
[mk-app] #4221 or #285 #4216
[mk-app] #4222 or #285 #4207
[mk-proof] #4223 quant-inst #4222
[mk-app] #4224 = #4222 #4221
[mk-proof] #4225 monotonicity #4220 #4224
[mk-app] #4226 = #4221 #4221
[mk-proof] #4227 rewrite #4226
[mk-proof] #4228 trans #4225 #4227 #4224
[mk-proof] #4229 mp #4223 #4228 #4221
[instance] 0x1240adbc8 #4223 ; 82
[attach-enode] #4204 82
[attach-enode] #4205 82
[attach-enode] #4215 82
[attach-enode] #4214 82
[attach-enode] #4216 82
[mk-app] #4230 <= #4215 #4214
[mk-app] #4231 >= #4215 #4214
[assign] #4216 justification -1: p1
[end-of-instance]
[mk-app] #4232 >= #4186 #55
[mk-app] #4233 not #4232
[mk-app] #4234 + #4186 #83
[mk-app] #4235 >= #4234 #55
[mk-app] #4236 lookup #59 #4189
[mk-app] #4237 next #4189
[mk-app] #4238 lookup #59 #4237
[mk-app] #4239 * #82 #4238
[mk-app] #4240 + #4236 #4239
[mk-app] #4241 <= #4240 #55
[mk-app] #4242 or #4233 #4235 #4241
[attach-meaning] #4214 arith (- 41)
[mk-app] #4243 >= #102 #4214
[inst-discovered] theory-solving 0x0 arith# ; #4232
[mk-app] #4244 = #4232 #4243
[mk-proof] #4245 rewrite #4244
[instance] 0x0 #4244
[end-of-instance]
[mk-app] #4246 not #4243
[mk-app] #4247 = #4233 #4246
[mk-proof] #4248 monotonicity #4245 #4247
[attach-meaning] #4185 arith 41
[mk-app] #4249 + #4185 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4234
[mk-app] #4250 = #4234 #4249
[mk-proof] #4251 rewrite #4250
[instance] 0x0 #4250
[end-of-instance]
[mk-app] #4252 >= #4249 #55
[mk-app] #4253 = #4235 #4252
[mk-proof] #4254 monotonicity #4251 #4253
[attach-meaning] #4214 arith (- 41)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4185 arith 41
[mk-app] #4255 <= #122 #4185
[inst-discovered] theory-solving 0x0 arith# ; #4252
[mk-app] #4256 = #4252 #4255
[mk-proof] #4257 rewrite #4256
[instance] 0x0 #4256
[end-of-instance]
[mk-app] #4258 = #4235 #4255
[mk-proof] #4259 trans #4254 #4257 #4258
[mk-app] #4260 or #4246 #4255 #4241
[mk-app] #4261 = #4242 #4260
[mk-proof] #4262 monotonicity #4248 #4259 #4261
[mk-app] #4263 or #313 #4246 #4255 #4241
[mk-app] #4264 or #313 #4242
[mk-proof] #4265 quant-inst #4264
[mk-app] #4266 or #313 #4260
[mk-app] #4267 = #4264 #4266
[mk-proof] #4268 monotonicity #4262 #4267
[mk-app] #4269 = #4266 #4263
[mk-proof] #4270 rewrite #4269
[mk-app] #4271 = #4264 #4263
[mk-proof] #4272 trans #4268 #4270 #4271
[mk-proof] #4273 mp #4265 #4272 #4263
[instance] 0x1240adc00 #4265 ; 82
[assign] #4243 justification -1: p406
[assign] (not #4255) justification -1: (not p5)
[attach-enode] #4236 82
[attach-enode] #4237 82
[attach-enode] #4238 82
[attach-enode] #4239 82
[attach-enode] #4240 82
[assign] #4241 justification -1: p3 p416 (not p417)
[end-of-instance]
[assign] #4230 clause p414 (not p413)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 41::Int idx))))) -41::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 41::Int idx))))) -41::Int)) 

[assign] #4231 clause p415 (not p413)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 41::Int idx))))) -41::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 41::Int idx))))) -41::Int)) 

[mk-app] #4274 = #4141 #4236
[attach-meaning] #82 arith (- 1)
[mk-app] #4275 * #82 #4236
[mk-app] #4276 + #4141 #4275
[mk-app] #4277 <= #4276 #55
[mk-app] #4278 >= #4276 #55
[assign] #4274 justification -1: p412
[attach-enode] #4274 0
[attach-enode] #4275 0
[attach-enode] #4276 0
[assign] #4277 justification -1: p419
[assign] #4278 justification -1: p419
[new-match] 0x1240ae8d0 #49 #37 #4186 #60 ; #4237 (#4189 #4189)
[mk-app] #4279 + #33 #4186
[mk-app] #4280 slot #60 #4279
[mk-app] #4281 = #4237 #4280
[mk-app] #4282 Int
[attach-meaning] #4282 arith 42
[mk-app] #4283 + #4282 #102
[inst-discovered] theory-solving 0x0 arith# ; #4279
[mk-app] #4284 = #4279 #4283
[mk-proof] #4285 rewrite #4284
[instance] 0x0 #4284
[end-of-instance]
[mk-app] #4286 slot #60 #4283
[mk-app] #4287 = #4280 #4286
[mk-proof] #4288 monotonicity #4285 #4287
[mk-app] #4289 = #4237 #4286
[mk-app] #4290 = #4281 #4289
[mk-proof] #4291 monotonicity #4288 #4290
[mk-app] #4292 or #293 #4289
[mk-app] #4293 or #293 #4281
[mk-proof] #4294 quant-inst #4293
[mk-app] #4295 = #4293 #4292
[mk-proof] #4296 monotonicity #4291 #4295
[mk-app] #4297 = #4292 #4292
[mk-proof] #4298 rewrite #4297
[mk-proof] #4299 trans #4296 #4298 #4295
[mk-proof] #4300 mp #4294 #4299 #4292
[instance] 0x1240ae8d0 #4294 ; 83
[attach-enode] #4282 83
[attach-enode] #4283 83
[attach-enode] #4286 83
[attach-enode] #4289 83
[assign] #4289 justification -1: p2
[end-of-instance]
[eq-expl] #4283 root
[new-match] 0x1240aec30 #209 #29 #4283 #60 ; #4286
[eq-expl] #4237 lit #4289 ; #4286
[eq-expl] #4286 root
[new-match] 0x1240aec68 #96 #67 #4283 ; #4238 (#59 #59) (#4237 #4286) (#60 #60)
[mk-app] #4301 slot_inverse #60 #4286
[mk-app] #4302 * #82 #4301
[mk-app] #4303 + #4283 #4302
[mk-app] #4304 = #4303 #55
[mk-app] #4305 + #4282 #102 #4302
[inst-discovered] theory-solving 0x0 arith# ; #4303
[mk-app] #4306 = #4303 #4305
[mk-proof] #4307 rewrite #4306
[instance] 0x0 #4306
[end-of-instance]
[mk-app] #4308 = #4305 #55
[mk-app] #4309 = #4304 #4308
[mk-proof] #4310 monotonicity #4307 #4309
[mk-app] #4311 Int
[attach-meaning] #4311 arith (- 42)
[mk-app] #4312 + #102 #4302
[mk-app] #4313 = #4312 #4311
[inst-discovered] theory-solving 0x0 arith# ; #4308
[mk-app] #4314 = #4308 #4313
[mk-proof] #4315 rewrite #4314
[instance] 0x0 #4314
[end-of-instance]
[mk-app] #4316 = #4304 #4313
[mk-proof] #4317 trans #4310 #4315 #4316
[mk-app] #4318 or #285 #4313
[mk-app] #4319 or #285 #4304
[mk-proof] #4320 quant-inst #4319
[mk-app] #4321 = #4319 #4318
[mk-proof] #4322 monotonicity #4317 #4321
[mk-app] #4323 = #4318 #4318
[mk-proof] #4324 rewrite #4323
[mk-proof] #4325 trans #4322 #4324 #4321
[mk-proof] #4326 mp #4320 #4325 #4318
[instance] 0x1240aec30 #4320 ; 84
[attach-enode] #4301 84
[attach-enode] #4302 84
[attach-enode] #4312 84
[attach-enode] #4311 84
[attach-enode] #4313 84
[mk-app] #4327 <= #4312 #4311
[mk-app] #4328 >= #4312 #4311
[assign] #4313 justification -1: p1
[end-of-instance]
[mk-app] #4329 >= #4283 #55
[mk-app] #4330 not #4329
[mk-app] #4331 + #4283 #83
[mk-app] #4332 >= #4331 #55
[mk-app] #4333 lookup #59 #4286
[mk-app] #4334 next #4286
[mk-app] #4335 lookup #59 #4334
[mk-app] #4336 * #82 #4335
[mk-app] #4337 + #4333 #4336
[mk-app] #4338 <= #4337 #55
[mk-app] #4339 or #4330 #4332 #4338
[attach-meaning] #4311 arith (- 42)
[mk-app] #4340 >= #102 #4311
[inst-discovered] theory-solving 0x0 arith# ; #4329
[mk-app] #4341 = #4329 #4340
[mk-proof] #4342 rewrite #4341
[instance] 0x0 #4341
[end-of-instance]
[mk-app] #4343 not #4340
[mk-app] #4344 = #4330 #4343
[mk-proof] #4345 monotonicity #4342 #4344
[attach-meaning] #4282 arith 42
[mk-app] #4346 + #4282 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4331
[mk-app] #4347 = #4331 #4346
[mk-proof] #4348 rewrite #4347
[instance] 0x0 #4347
[end-of-instance]
[mk-app] #4349 >= #4346 #55
[mk-app] #4350 = #4332 #4349
[mk-proof] #4351 monotonicity #4348 #4350
[attach-meaning] #4311 arith (- 42)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4282 arith 42
[mk-app] #4352 <= #122 #4282
[inst-discovered] theory-solving 0x0 arith# ; #4349
[mk-app] #4353 = #4349 #4352
[mk-proof] #4354 rewrite #4353
[instance] 0x0 #4353
[end-of-instance]
[mk-app] #4355 = #4332 #4352
[mk-proof] #4356 trans #4351 #4354 #4355
[mk-app] #4357 or #4343 #4352 #4338
[mk-app] #4358 = #4339 #4357
[mk-proof] #4359 monotonicity #4345 #4356 #4358
[mk-app] #4360 or #313 #4343 #4352 #4338
[mk-app] #4361 or #313 #4339
[mk-proof] #4362 quant-inst #4361
[mk-app] #4363 or #313 #4357
[mk-app] #4364 = #4361 #4363
[mk-proof] #4365 monotonicity #4359 #4364
[mk-app] #4366 = #4363 #4360
[mk-proof] #4367 rewrite #4366
[mk-app] #4368 = #4361 #4360
[mk-proof] #4369 trans #4365 #4367 #4368
[mk-proof] #4370 mp #4362 #4369 #4360
[instance] 0x1240aec68 #4362 ; 84
[assign] #4340 justification -1: p416
[assign] (not #4352) justification -1: (not p5)
[attach-enode] #4333 84
[attach-enode] #4334 84
[attach-enode] #4335 84
[attach-enode] #4336 84
[attach-enode] #4337 84
[assign] #4338 justification -1: p3 p426 (not p427)
[end-of-instance]
[assign] #4327 clause p424 (not p423)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 42::Int idx))))) -42::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 42::Int idx))))) -42::Int)) 

[assign] #4328 clause p425 (not p423)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 42::Int idx))))) -42::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 42::Int idx))))) -42::Int)) 

[mk-app] #4371 = #4238 #4333
[attach-meaning] #82 arith (- 1)
[mk-app] #4372 * #82 #4333
[mk-app] #4373 + #4238 #4372
[mk-app] #4374 <= #4373 #55
[mk-app] #4375 >= #4373 #55
[assign] #4371 justification -1: p422
[attach-enode] #4371 0
[attach-enode] #4372 0
[attach-enode] #4373 0
[assign] #4374 justification -1: p429
[assign] #4375 justification -1: p429
[new-match] 0x1240b4f90 #49 #37 #4283 #60 ; #4334 (#4286 #4286)
[mk-app] #4376 + #33 #4283
[mk-app] #4377 slot #60 #4376
[mk-app] #4378 = #4334 #4377
[mk-app] #4379 Int
[attach-meaning] #4379 arith 43
[mk-app] #4380 + #4379 #102
[inst-discovered] theory-solving 0x0 arith# ; #4376
[mk-app] #4381 = #4376 #4380
[mk-proof] #4382 rewrite #4381
[instance] 0x0 #4381
[end-of-instance]
[mk-app] #4383 slot #60 #4380
[mk-app] #4384 = #4377 #4383
[mk-proof] #4385 monotonicity #4382 #4384
[mk-app] #4386 = #4334 #4383
[mk-app] #4387 = #4378 #4386
[mk-proof] #4388 monotonicity #4385 #4387
[mk-app] #4389 or #293 #4386
[mk-app] #4390 or #293 #4378
[mk-proof] #4391 quant-inst #4390
[mk-app] #4392 = #4390 #4389
[mk-proof] #4393 monotonicity #4388 #4392
[mk-app] #4394 = #4389 #4389
[mk-proof] #4395 rewrite #4394
[mk-proof] #4396 trans #4393 #4395 #4392
[mk-proof] #4397 mp #4391 #4396 #4389
[instance] 0x1240b4f90 #4391 ; 85
[attach-enode] #4379 85
[attach-enode] #4380 85
[attach-enode] #4383 85
[attach-enode] #4386 85
[assign] #4386 justification -1: p2
[end-of-instance]
[eq-expl] #4380 root
[new-match] 0x1240b52f0 #209 #29 #4380 #60 ; #4383
[eq-expl] #4334 lit #4386 ; #4383
[eq-expl] #4383 root
[new-match] 0x1240b5328 #96 #67 #4380 ; #4335 (#59 #59) (#4334 #4383) (#60 #60)
[mk-app] #4398 slot_inverse #60 #4383
[mk-app] #4399 * #82 #4398
[mk-app] #4400 + #4380 #4399
[mk-app] #4401 = #4400 #55
[mk-app] #4402 + #4379 #102 #4399
[inst-discovered] theory-solving 0x0 arith# ; #4400
[mk-app] #4403 = #4400 #4402
[mk-proof] #4404 rewrite #4403
[instance] 0x0 #4403
[end-of-instance]
[mk-app] #4405 = #4402 #55
[mk-app] #4406 = #4401 #4405
[mk-proof] #4407 monotonicity #4404 #4406
[mk-app] #4408 Int
[attach-meaning] #4408 arith (- 43)
[mk-app] #4409 + #102 #4399
[mk-app] #4410 = #4409 #4408
[inst-discovered] theory-solving 0x0 arith# ; #4405
[mk-app] #4411 = #4405 #4410
[mk-proof] #4412 rewrite #4411
[instance] 0x0 #4411
[end-of-instance]
[mk-app] #4413 = #4401 #4410
[mk-proof] #4414 trans #4407 #4412 #4413
[mk-app] #4415 or #285 #4410
[mk-app] #4416 or #285 #4401
[mk-proof] #4417 quant-inst #4416
[mk-app] #4418 = #4416 #4415
[mk-proof] #4419 monotonicity #4414 #4418
[mk-app] #4420 = #4415 #4415
[mk-proof] #4421 rewrite #4420
[mk-proof] #4422 trans #4419 #4421 #4418
[mk-proof] #4423 mp #4417 #4422 #4415
[instance] 0x1240b52f0 #4417 ; 86
[attach-enode] #4398 86
[attach-enode] #4399 86
[attach-enode] #4409 86
[attach-enode] #4408 86
[attach-enode] #4410 86
[mk-app] #4424 <= #4409 #4408
[mk-app] #4425 >= #4409 #4408
[assign] #4410 justification -1: p1
[end-of-instance]
[mk-app] #4426 >= #4380 #55
[mk-app] #4427 not #4426
[mk-app] #4428 + #4380 #83
[mk-app] #4429 >= #4428 #55
[mk-app] #4430 lookup #59 #4383
[mk-app] #4431 next #4383
[mk-app] #4432 lookup #59 #4431
[mk-app] #4433 * #82 #4432
[mk-app] #4434 + #4430 #4433
[mk-app] #4435 <= #4434 #55
[mk-app] #4436 or #4427 #4429 #4435
[attach-meaning] #4408 arith (- 43)
[mk-app] #4437 >= #102 #4408
[inst-discovered] theory-solving 0x0 arith# ; #4426
[mk-app] #4438 = #4426 #4437
[mk-proof] #4439 rewrite #4438
[instance] 0x0 #4438
[end-of-instance]
[mk-app] #4440 not #4437
[mk-app] #4441 = #4427 #4440
[mk-proof] #4442 monotonicity #4439 #4441
[attach-meaning] #4379 arith 43
[mk-app] #4443 + #4379 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4428
[mk-app] #4444 = #4428 #4443
[mk-proof] #4445 rewrite #4444
[instance] 0x0 #4444
[end-of-instance]
[mk-app] #4446 >= #4443 #55
[mk-app] #4447 = #4429 #4446
[mk-proof] #4448 monotonicity #4445 #4447
[attach-meaning] #4408 arith (- 43)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4379 arith 43
[mk-app] #4449 <= #122 #4379
[inst-discovered] theory-solving 0x0 arith# ; #4446
[mk-app] #4450 = #4446 #4449
[mk-proof] #4451 rewrite #4450
[instance] 0x0 #4450
[end-of-instance]
[mk-app] #4452 = #4429 #4449
[mk-proof] #4453 trans #4448 #4451 #4452
[mk-app] #4454 or #4440 #4449 #4435
[mk-app] #4455 = #4436 #4454
[mk-proof] #4456 monotonicity #4442 #4453 #4455
[mk-app] #4457 or #313 #4440 #4449 #4435
[mk-app] #4458 or #313 #4436
[mk-proof] #4459 quant-inst #4458
[mk-app] #4460 or #313 #4454
[mk-app] #4461 = #4458 #4460
[mk-proof] #4462 monotonicity #4456 #4461
[mk-app] #4463 = #4460 #4457
[mk-proof] #4464 rewrite #4463
[mk-app] #4465 = #4458 #4457
[mk-proof] #4466 trans #4462 #4464 #4465
[mk-proof] #4467 mp #4459 #4466 #4457
[instance] 0x1240b5328 #4459 ; 86
[assign] #4437 justification -1: p426
[assign] (not #4449) justification -1: (not p5)
[attach-enode] #4430 86
[attach-enode] #4431 86
[attach-enode] #4432 86
[attach-enode] #4433 86
[attach-enode] #4434 86
[assign] #4435 justification -1: p3 p436 (not p437)
[end-of-instance]
[assign] #4424 clause p434 (not p433)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 43::Int idx))))) -43::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 43::Int idx))))) -43::Int)) 

[assign] #4425 clause p435 (not p433)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 43::Int idx))))) -43::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 43::Int idx))))) -43::Int)) 

[mk-app] #4468 = #4335 #4430
[attach-meaning] #82 arith (- 1)
[mk-app] #4469 * #82 #4430
[mk-app] #4470 + #4335 #4469
[mk-app] #4471 <= #4470 #55
[mk-app] #4472 >= #4470 #55
[assign] #4468 justification -1: p432
[attach-enode] #4468 0
[attach-enode] #4469 0
[attach-enode] #4470 0
[assign] #4471 justification -1: p439
[assign] #4472 justification -1: p439
[new-match] 0x1240b5ff8 #49 #37 #4380 #60 ; #4431 (#4383 #4383)
[mk-app] #4473 + #33 #4380
[mk-app] #4474 slot #60 #4473
[mk-app] #4475 = #4431 #4474
[mk-app] #4476 Int
[attach-meaning] #4476 arith 44
[mk-app] #4477 + #4476 #102
[inst-discovered] theory-solving 0x0 arith# ; #4473
[mk-app] #4478 = #4473 #4477
[mk-proof] #4479 rewrite #4478
[instance] 0x0 #4478
[end-of-instance]
[mk-app] #4480 slot #60 #4477
[mk-app] #4481 = #4474 #4480
[mk-proof] #4482 monotonicity #4479 #4481
[mk-app] #4483 = #4431 #4480
[mk-app] #4484 = #4475 #4483
[mk-proof] #4485 monotonicity #4482 #4484
[mk-app] #4486 or #293 #4483
[mk-app] #4487 or #293 #4475
[mk-proof] #4488 quant-inst #4487
[mk-app] #4489 = #4487 #4486
[mk-proof] #4490 monotonicity #4485 #4489
[mk-app] #4491 = #4486 #4486
[mk-proof] #4492 rewrite #4491
[mk-proof] #4493 trans #4490 #4492 #4489
[mk-proof] #4494 mp #4488 #4493 #4486
[instance] 0x1240b5ff8 #4488 ; 87
[attach-enode] #4476 87
[attach-enode] #4477 87
[attach-enode] #4480 87
[attach-enode] #4483 87
[assign] #4483 justification -1: p2
[end-of-instance]
[eq-expl] #4477 root
[new-match] 0x1240b6358 #209 #29 #4477 #60 ; #4480
[eq-expl] #4431 lit #4483 ; #4480
[eq-expl] #4480 root
[new-match] 0x1240b6390 #96 #67 #4477 ; #4432 (#59 #59) (#4431 #4480) (#60 #60)
[mk-app] #4495 slot_inverse #60 #4480
[mk-app] #4496 * #82 #4495
[mk-app] #4497 + #4477 #4496
[mk-app] #4498 = #4497 #55
[mk-app] #4499 + #4476 #102 #4496
[inst-discovered] theory-solving 0x0 arith# ; #4497
[mk-app] #4500 = #4497 #4499
[mk-proof] #4501 rewrite #4500
[instance] 0x0 #4500
[end-of-instance]
[mk-app] #4502 = #4499 #55
[mk-app] #4503 = #4498 #4502
[mk-proof] #4504 monotonicity #4501 #4503
[mk-app] #4505 Int
[attach-meaning] #4505 arith (- 44)
[mk-app] #4506 + #102 #4496
[mk-app] #4507 = #4506 #4505
[inst-discovered] theory-solving 0x0 arith# ; #4502
[mk-app] #4508 = #4502 #4507
[mk-proof] #4509 rewrite #4508
[instance] 0x0 #4508
[end-of-instance]
[mk-app] #4510 = #4498 #4507
[mk-proof] #4511 trans #4504 #4509 #4510
[mk-app] #4512 or #285 #4507
[mk-app] #4513 or #285 #4498
[mk-proof] #4514 quant-inst #4513
[mk-app] #4515 = #4513 #4512
[mk-proof] #4516 monotonicity #4511 #4515
[mk-app] #4517 = #4512 #4512
[mk-proof] #4518 rewrite #4517
[mk-proof] #4519 trans #4516 #4518 #4515
[mk-proof] #4520 mp #4514 #4519 #4512
[instance] 0x1240b6358 #4514 ; 88
[attach-enode] #4495 88
[attach-enode] #4496 88
[attach-enode] #4506 88
[attach-enode] #4505 88
[attach-enode] #4507 88
[mk-app] #4521 <= #4506 #4505
[mk-app] #4522 >= #4506 #4505
[assign] #4507 justification -1: p1
[end-of-instance]
[mk-app] #4523 >= #4477 #55
[mk-app] #4524 not #4523
[mk-app] #4525 + #4477 #83
[mk-app] #4526 >= #4525 #55
[mk-app] #4527 lookup #59 #4480
[mk-app] #4528 next #4480
[mk-app] #4529 lookup #59 #4528
[mk-app] #4530 * #82 #4529
[mk-app] #4531 + #4527 #4530
[mk-app] #4532 <= #4531 #55
[mk-app] #4533 or #4524 #4526 #4532
[attach-meaning] #4505 arith (- 44)
[mk-app] #4534 >= #102 #4505
[inst-discovered] theory-solving 0x0 arith# ; #4523
[mk-app] #4535 = #4523 #4534
[mk-proof] #4536 rewrite #4535
[instance] 0x0 #4535
[end-of-instance]
[mk-app] #4537 not #4534
[mk-app] #4538 = #4524 #4537
[mk-proof] #4539 monotonicity #4536 #4538
[attach-meaning] #4476 arith 44
[mk-app] #4540 + #4476 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4525
[mk-app] #4541 = #4525 #4540
[mk-proof] #4542 rewrite #4541
[instance] 0x0 #4541
[end-of-instance]
[mk-app] #4543 >= #4540 #55
[mk-app] #4544 = #4526 #4543
[mk-proof] #4545 monotonicity #4542 #4544
[attach-meaning] #4505 arith (- 44)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4476 arith 44
[mk-app] #4546 <= #122 #4476
[inst-discovered] theory-solving 0x0 arith# ; #4543
[mk-app] #4547 = #4543 #4546
[mk-proof] #4548 rewrite #4547
[instance] 0x0 #4547
[end-of-instance]
[mk-app] #4549 = #4526 #4546
[mk-proof] #4550 trans #4545 #4548 #4549
[mk-app] #4551 or #4537 #4546 #4532
[mk-app] #4552 = #4533 #4551
[mk-proof] #4553 monotonicity #4539 #4550 #4552
[mk-app] #4554 or #313 #4537 #4546 #4532
[mk-app] #4555 or #313 #4533
[mk-proof] #4556 quant-inst #4555
[mk-app] #4557 or #313 #4551
[mk-app] #4558 = #4555 #4557
[mk-proof] #4559 monotonicity #4553 #4558
[mk-app] #4560 = #4557 #4554
[mk-proof] #4561 rewrite #4560
[mk-app] #4562 = #4555 #4554
[mk-proof] #4563 trans #4559 #4561 #4562
[mk-proof] #4564 mp #4556 #4563 #4554
[instance] 0x1240b6390 #4556 ; 88
[assign] #4534 justification -1: p436
[assign] (not #4546) justification -1: (not p5)
[attach-enode] #4527 88
[attach-enode] #4528 88
[attach-enode] #4529 88
[attach-enode] #4530 88
[attach-enode] #4531 88
[assign] #4532 justification -1: p3 p446 (not p447)
[end-of-instance]
[assign] #4521 clause p444 (not p443)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 44::Int idx))))) -44::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 44::Int idx))))) -44::Int)) 

[assign] #4522 clause p445 (not p443)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 44::Int idx))))) -44::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 44::Int idx))))) -44::Int)) 

[mk-app] #4565 = #4432 #4527
[attach-meaning] #82 arith (- 1)
[mk-app] #4566 * #82 #4527
[mk-app] #4567 + #4432 #4566
[mk-app] #4568 <= #4567 #55
[mk-app] #4569 >= #4567 #55
[assign] #4565 justification -1: p442
[attach-enode] #4565 0
[attach-enode] #4566 0
[attach-enode] #4567 0
[assign] #4568 justification -1: p449
[assign] #4569 justification -1: p449
[new-match] 0x1240bd8b0 #49 #37 #4477 #60 ; #4528 (#4480 #4480)
[mk-app] #4570 + #33 #4477
[mk-app] #4571 slot #60 #4570
[mk-app] #4572 = #4528 #4571
[mk-app] #4573 Int
[attach-meaning] #4573 arith 45
[mk-app] #4574 + #4573 #102
[inst-discovered] theory-solving 0x0 arith# ; #4570
[mk-app] #4575 = #4570 #4574
[mk-proof] #4576 rewrite #4575
[instance] 0x0 #4575
[end-of-instance]
[mk-app] #4577 slot #60 #4574
[mk-app] #4578 = #4571 #4577
[mk-proof] #4579 monotonicity #4576 #4578
[mk-app] #4580 = #4528 #4577
[mk-app] #4581 = #4572 #4580
[mk-proof] #4582 monotonicity #4579 #4581
[mk-app] #4583 or #293 #4580
[mk-app] #4584 or #293 #4572
[mk-proof] #4585 quant-inst #4584
[mk-app] #4586 = #4584 #4583
[mk-proof] #4587 monotonicity #4582 #4586
[mk-app] #4588 = #4583 #4583
[mk-proof] #4589 rewrite #4588
[mk-proof] #4590 trans #4587 #4589 #4586
[mk-proof] #4591 mp #4585 #4590 #4583
[instance] 0x1240bd8b0 #4585 ; 89
[attach-enode] #4573 89
[attach-enode] #4574 89
[attach-enode] #4577 89
[attach-enode] #4580 89
[assign] #4580 justification -1: p2
[end-of-instance]
[eq-expl] #4574 root
[new-match] 0x1240bdc10 #209 #29 #4574 #60 ; #4577
[eq-expl] #4528 lit #4580 ; #4577
[eq-expl] #4577 root
[new-match] 0x1240bdc48 #96 #67 #4574 ; #4529 (#59 #59) (#4528 #4577) (#60 #60)
[mk-app] #4592 slot_inverse #60 #4577
[mk-app] #4593 * #82 #4592
[mk-app] #4594 + #4574 #4593
[mk-app] #4595 = #4594 #55
[mk-app] #4596 + #4573 #102 #4593
[inst-discovered] theory-solving 0x0 arith# ; #4594
[mk-app] #4597 = #4594 #4596
[mk-proof] #4598 rewrite #4597
[instance] 0x0 #4597
[end-of-instance]
[mk-app] #4599 = #4596 #55
[mk-app] #4600 = #4595 #4599
[mk-proof] #4601 monotonicity #4598 #4600
[mk-app] #4602 Int
[attach-meaning] #4602 arith (- 45)
[mk-app] #4603 + #102 #4593
[mk-app] #4604 = #4603 #4602
[inst-discovered] theory-solving 0x0 arith# ; #4599
[mk-app] #4605 = #4599 #4604
[mk-proof] #4606 rewrite #4605
[instance] 0x0 #4605
[end-of-instance]
[mk-app] #4607 = #4595 #4604
[mk-proof] #4608 trans #4601 #4606 #4607
[mk-app] #4609 or #285 #4604
[mk-app] #4610 or #285 #4595
[mk-proof] #4611 quant-inst #4610
[mk-app] #4612 = #4610 #4609
[mk-proof] #4613 monotonicity #4608 #4612
[mk-app] #4614 = #4609 #4609
[mk-proof] #4615 rewrite #4614
[mk-proof] #4616 trans #4613 #4615 #4612
[mk-proof] #4617 mp #4611 #4616 #4609
[instance] 0x1240bdc10 #4611 ; 90
[attach-enode] #4592 90
[attach-enode] #4593 90
[attach-enode] #4603 90
[attach-enode] #4602 90
[attach-enode] #4604 90
[mk-app] #4618 <= #4603 #4602
[mk-app] #4619 >= #4603 #4602
[assign] #4604 justification -1: p1
[end-of-instance]
[mk-app] #4620 >= #4574 #55
[mk-app] #4621 not #4620
[mk-app] #4622 + #4574 #83
[mk-app] #4623 >= #4622 #55
[mk-app] #4624 lookup #59 #4577
[mk-app] #4625 next #4577
[mk-app] #4626 lookup #59 #4625
[mk-app] #4627 * #82 #4626
[mk-app] #4628 + #4624 #4627
[mk-app] #4629 <= #4628 #55
[mk-app] #4630 or #4621 #4623 #4629
[attach-meaning] #4602 arith (- 45)
[mk-app] #4631 >= #102 #4602
[inst-discovered] theory-solving 0x0 arith# ; #4620
[mk-app] #4632 = #4620 #4631
[mk-proof] #4633 rewrite #4632
[instance] 0x0 #4632
[end-of-instance]
[mk-app] #4634 not #4631
[mk-app] #4635 = #4621 #4634
[mk-proof] #4636 monotonicity #4633 #4635
[attach-meaning] #4573 arith 45
[mk-app] #4637 + #4573 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4622
[mk-app] #4638 = #4622 #4637
[mk-proof] #4639 rewrite #4638
[instance] 0x0 #4638
[end-of-instance]
[mk-app] #4640 >= #4637 #55
[mk-app] #4641 = #4623 #4640
[mk-proof] #4642 monotonicity #4639 #4641
[attach-meaning] #4602 arith (- 45)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4573 arith 45
[mk-app] #4643 <= #122 #4573
[inst-discovered] theory-solving 0x0 arith# ; #4640
[mk-app] #4644 = #4640 #4643
[mk-proof] #4645 rewrite #4644
[instance] 0x0 #4644
[end-of-instance]
[mk-app] #4646 = #4623 #4643
[mk-proof] #4647 trans #4642 #4645 #4646
[mk-app] #4648 or #4634 #4643 #4629
[mk-app] #4649 = #4630 #4648
[mk-proof] #4650 monotonicity #4636 #4647 #4649
[mk-app] #4651 or #313 #4634 #4643 #4629
[mk-app] #4652 or #313 #4630
[mk-proof] #4653 quant-inst #4652
[mk-app] #4654 or #313 #4648
[mk-app] #4655 = #4652 #4654
[mk-proof] #4656 monotonicity #4650 #4655
[mk-app] #4657 = #4654 #4651
[mk-proof] #4658 rewrite #4657
[mk-app] #4659 = #4652 #4651
[mk-proof] #4660 trans #4656 #4658 #4659
[mk-proof] #4661 mp #4653 #4660 #4651
[instance] 0x1240bdc48 #4653 ; 90
[assign] #4631 justification -1: p446
[assign] (not #4643) justification -1: (not p5)
[attach-enode] #4624 90
[attach-enode] #4625 90
[attach-enode] #4626 90
[attach-enode] #4627 90
[attach-enode] #4628 90
[assign] #4629 justification -1: p3 p456 (not p457)
[end-of-instance]
[assign] #4618 clause p454 (not p453)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 45::Int idx))))) -45::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 45::Int idx))))) -45::Int)) 

[assign] #4619 clause p455 (not p453)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 45::Int idx))))) -45::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 45::Int idx))))) -45::Int)) 

[mk-app] #4662 = #4529 #4624
[attach-meaning] #82 arith (- 1)
[mk-app] #4663 * #82 #4624
[mk-app] #4664 + #4529 #4663
[mk-app] #4665 <= #4664 #55
[mk-app] #4666 >= #4664 #55
[assign] #4662 justification -1: p452
[attach-enode] #4662 0
[attach-enode] #4663 0
[attach-enode] #4664 0
[assign] #4665 justification -1: p459
[assign] #4666 justification -1: p459
[new-match] 0x1240be918 #49 #37 #4574 #60 ; #4625 (#4577 #4577)
[mk-app] #4667 + #33 #4574
[mk-app] #4668 slot #60 #4667
[mk-app] #4669 = #4625 #4668
[mk-app] #4670 Int
[attach-meaning] #4670 arith 46
[mk-app] #4671 + #4670 #102
[inst-discovered] theory-solving 0x0 arith# ; #4667
[mk-app] #4672 = #4667 #4671
[mk-proof] #4673 rewrite #4672
[instance] 0x0 #4672
[end-of-instance]
[mk-app] #4674 slot #60 #4671
[mk-app] #4675 = #4668 #4674
[mk-proof] #4676 monotonicity #4673 #4675
[mk-app] #4677 = #4625 #4674
[mk-app] #4678 = #4669 #4677
[mk-proof] #4679 monotonicity #4676 #4678
[mk-app] #4680 or #293 #4677
[mk-app] #4681 or #293 #4669
[mk-proof] #4682 quant-inst #4681
[mk-app] #4683 = #4681 #4680
[mk-proof] #4684 monotonicity #4679 #4683
[mk-app] #4685 = #4680 #4680
[mk-proof] #4686 rewrite #4685
[mk-proof] #4687 trans #4684 #4686 #4683
[mk-proof] #4688 mp #4682 #4687 #4680
[instance] 0x1240be918 #4682 ; 91
[attach-enode] #4670 91
[attach-enode] #4671 91
[attach-enode] #4674 91
[attach-enode] #4677 91
[assign] #4677 justification -1: p2
[end-of-instance]
[eq-expl] #4671 root
[new-match] 0x1240bec78 #209 #29 #4671 #60 ; #4674
[eq-expl] #4625 lit #4677 ; #4674
[eq-expl] #4674 root
[new-match] 0x1240becb0 #96 #67 #4671 ; #4626 (#59 #59) (#4625 #4674) (#60 #60)
[mk-app] #4689 slot_inverse #60 #4674
[mk-app] #4690 * #82 #4689
[mk-app] #4691 + #4671 #4690
[mk-app] #4692 = #4691 #55
[mk-app] #4693 + #4670 #102 #4690
[inst-discovered] theory-solving 0x0 arith# ; #4691
[mk-app] #4694 = #4691 #4693
[mk-proof] #4695 rewrite #4694
[instance] 0x0 #4694
[end-of-instance]
[mk-app] #4696 = #4693 #55
[mk-app] #4697 = #4692 #4696
[mk-proof] #4698 monotonicity #4695 #4697
[mk-app] #4699 Int
[attach-meaning] #4699 arith (- 46)
[mk-app] #4700 + #102 #4690
[mk-app] #4701 = #4700 #4699
[inst-discovered] theory-solving 0x0 arith# ; #4696
[mk-app] #4702 = #4696 #4701
[mk-proof] #4703 rewrite #4702
[instance] 0x0 #4702
[end-of-instance]
[mk-app] #4704 = #4692 #4701
[mk-proof] #4705 trans #4698 #4703 #4704
[mk-app] #4706 or #285 #4701
[mk-app] #4707 or #285 #4692
[mk-proof] #4708 quant-inst #4707
[mk-app] #4709 = #4707 #4706
[mk-proof] #4710 monotonicity #4705 #4709
[mk-app] #4711 = #4706 #4706
[mk-proof] #4712 rewrite #4711
[mk-proof] #4713 trans #4710 #4712 #4709
[mk-proof] #4714 mp #4708 #4713 #4706
[instance] 0x1240bec78 #4708 ; 92
[attach-enode] #4689 92
[attach-enode] #4690 92
[attach-enode] #4700 92
[attach-enode] #4699 92
[attach-enode] #4701 92
[mk-app] #4715 <= #4700 #4699
[mk-app] #4716 >= #4700 #4699
[assign] #4701 justification -1: p1
[end-of-instance]
[mk-app] #4717 >= #4671 #55
[mk-app] #4718 not #4717
[mk-app] #4719 + #4671 #83
[mk-app] #4720 >= #4719 #55
[mk-app] #4721 lookup #59 #4674
[mk-app] #4722 next #4674
[mk-app] #4723 lookup #59 #4722
[mk-app] #4724 * #82 #4723
[mk-app] #4725 + #4721 #4724
[mk-app] #4726 <= #4725 #55
[mk-app] #4727 or #4718 #4720 #4726
[attach-meaning] #4699 arith (- 46)
[mk-app] #4728 >= #102 #4699
[inst-discovered] theory-solving 0x0 arith# ; #4717
[mk-app] #4729 = #4717 #4728
[mk-proof] #4730 rewrite #4729
[instance] 0x0 #4729
[end-of-instance]
[mk-app] #4731 not #4728
[mk-app] #4732 = #4718 #4731
[mk-proof] #4733 monotonicity #4730 #4732
[attach-meaning] #4670 arith 46
[mk-app] #4734 + #4670 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4719
[mk-app] #4735 = #4719 #4734
[mk-proof] #4736 rewrite #4735
[instance] 0x0 #4735
[end-of-instance]
[mk-app] #4737 >= #4734 #55
[mk-app] #4738 = #4720 #4737
[mk-proof] #4739 monotonicity #4736 #4738
[attach-meaning] #4699 arith (- 46)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4670 arith 46
[mk-app] #4740 <= #122 #4670
[inst-discovered] theory-solving 0x0 arith# ; #4737
[mk-app] #4741 = #4737 #4740
[mk-proof] #4742 rewrite #4741
[instance] 0x0 #4741
[end-of-instance]
[mk-app] #4743 = #4720 #4740
[mk-proof] #4744 trans #4739 #4742 #4743
[mk-app] #4745 or #4731 #4740 #4726
[mk-app] #4746 = #4727 #4745
[mk-proof] #4747 monotonicity #4733 #4744 #4746
[mk-app] #4748 or #313 #4731 #4740 #4726
[mk-app] #4749 or #313 #4727
[mk-proof] #4750 quant-inst #4749
[mk-app] #4751 or #313 #4745
[mk-app] #4752 = #4749 #4751
[mk-proof] #4753 monotonicity #4747 #4752
[mk-app] #4754 = #4751 #4748
[mk-proof] #4755 rewrite #4754
[mk-app] #4756 = #4749 #4748
[mk-proof] #4757 trans #4753 #4755 #4756
[mk-proof] #4758 mp #4750 #4757 #4748
[instance] 0x1240becb0 #4750 ; 92
[assign] #4728 justification -1: p456
[assign] (not #4740) justification -1: (not p5)
[attach-enode] #4721 92
[attach-enode] #4722 92
[attach-enode] #4723 92
[attach-enode] #4724 92
[attach-enode] #4725 92
[assign] #4726 justification -1: p3 p466 (not p467)
[end-of-instance]
[assign] #4715 clause p464 (not p463)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 46::Int idx))))) -46::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 46::Int idx))))) -46::Int)) 

[assign] #4716 clause p465 (not p463)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 46::Int idx))))) -46::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 46::Int idx))))) -46::Int)) 

[mk-app] #4759 = #4626 #4721
[attach-meaning] #82 arith (- 1)
[mk-app] #4760 * #82 #4721
[mk-app] #4761 + #4626 #4760
[mk-app] #4762 <= #4761 #55
[mk-app] #4763 >= #4761 #55
[assign] #4759 justification -1: p462
[attach-enode] #4759 0
[attach-enode] #4760 0
[attach-enode] #4761 0
[assign] #4762 justification -1: p469
[assign] #4763 justification -1: p469
[new-match] 0x1240c3fa8 #49 #37 #4671 #60 ; #4722 (#4674 #4674)
[mk-app] #4764 + #33 #4671
[mk-app] #4765 slot #60 #4764
[mk-app] #4766 = #4722 #4765
[mk-app] #4767 Int
[attach-meaning] #4767 arith 47
[mk-app] #4768 + #4767 #102
[inst-discovered] theory-solving 0x0 arith# ; #4764
[mk-app] #4769 = #4764 #4768
[mk-proof] #4770 rewrite #4769
[instance] 0x0 #4769
[end-of-instance]
[mk-app] #4771 slot #60 #4768
[mk-app] #4772 = #4765 #4771
[mk-proof] #4773 monotonicity #4770 #4772
[mk-app] #4774 = #4722 #4771
[mk-app] #4775 = #4766 #4774
[mk-proof] #4776 monotonicity #4773 #4775
[mk-app] #4777 or #293 #4774
[mk-app] #4778 or #293 #4766
[mk-proof] #4779 quant-inst #4778
[mk-app] #4780 = #4778 #4777
[mk-proof] #4781 monotonicity #4776 #4780
[mk-app] #4782 = #4777 #4777
[mk-proof] #4783 rewrite #4782
[mk-proof] #4784 trans #4781 #4783 #4780
[mk-proof] #4785 mp #4779 #4784 #4777
[instance] 0x1240c3fa8 #4779 ; 93
[attach-enode] #4767 93
[attach-enode] #4768 93
[attach-enode] #4771 93
[attach-enode] #4774 93
[assign] #4774 justification -1: p2
[end-of-instance]
[eq-expl] #4768 root
[new-match] 0x1240c4308 #209 #29 #4768 #60 ; #4771
[eq-expl] #4722 lit #4774 ; #4771
[eq-expl] #4771 root
[new-match] 0x1240c4340 #96 #67 #4768 ; #4723 (#59 #59) (#4722 #4771) (#60 #60)
[mk-app] #4786 slot_inverse #60 #4771
[mk-app] #4787 * #82 #4786
[mk-app] #4788 + #4768 #4787
[mk-app] #4789 = #4788 #55
[mk-app] #4790 + #4767 #102 #4787
[inst-discovered] theory-solving 0x0 arith# ; #4788
[mk-app] #4791 = #4788 #4790
[mk-proof] #4792 rewrite #4791
[instance] 0x0 #4791
[end-of-instance]
[mk-app] #4793 = #4790 #55
[mk-app] #4794 = #4789 #4793
[mk-proof] #4795 monotonicity #4792 #4794
[mk-app] #4796 Int
[attach-meaning] #4796 arith (- 47)
[mk-app] #4797 + #102 #4787
[mk-app] #4798 = #4797 #4796
[inst-discovered] theory-solving 0x0 arith# ; #4793
[mk-app] #4799 = #4793 #4798
[mk-proof] #4800 rewrite #4799
[instance] 0x0 #4799
[end-of-instance]
[mk-app] #4801 = #4789 #4798
[mk-proof] #4802 trans #4795 #4800 #4801
[mk-app] #4803 or #285 #4798
[mk-app] #4804 or #285 #4789
[mk-proof] #4805 quant-inst #4804
[mk-app] #4806 = #4804 #4803
[mk-proof] #4807 monotonicity #4802 #4806
[mk-app] #4808 = #4803 #4803
[mk-proof] #4809 rewrite #4808
[mk-proof] #4810 trans #4807 #4809 #4806
[mk-proof] #4811 mp #4805 #4810 #4803
[instance] 0x1240c4308 #4805 ; 94
[attach-enode] #4786 94
[attach-enode] #4787 94
[attach-enode] #4797 94
[attach-enode] #4796 94
[attach-enode] #4798 94
[mk-app] #4812 <= #4797 #4796
[mk-app] #4813 >= #4797 #4796
[assign] #4798 justification -1: p1
[end-of-instance]
[mk-app] #4814 >= #4768 #55
[mk-app] #4815 not #4814
[mk-app] #4816 + #4768 #83
[mk-app] #4817 >= #4816 #55
[mk-app] #4818 lookup #59 #4771
[mk-app] #4819 next #4771
[mk-app] #4820 lookup #59 #4819
[mk-app] #4821 * #82 #4820
[mk-app] #4822 + #4818 #4821
[mk-app] #4823 <= #4822 #55
[mk-app] #4824 or #4815 #4817 #4823
[attach-meaning] #4796 arith (- 47)
[mk-app] #4825 >= #102 #4796
[inst-discovered] theory-solving 0x0 arith# ; #4814
[mk-app] #4826 = #4814 #4825
[mk-proof] #4827 rewrite #4826
[instance] 0x0 #4826
[end-of-instance]
[mk-app] #4828 not #4825
[mk-app] #4829 = #4815 #4828
[mk-proof] #4830 monotonicity #4827 #4829
[attach-meaning] #4767 arith 47
[mk-app] #4831 + #4767 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4816
[mk-app] #4832 = #4816 #4831
[mk-proof] #4833 rewrite #4832
[instance] 0x0 #4832
[end-of-instance]
[mk-app] #4834 >= #4831 #55
[mk-app] #4835 = #4817 #4834
[mk-proof] #4836 monotonicity #4833 #4835
[attach-meaning] #4796 arith (- 47)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4767 arith 47
[mk-app] #4837 <= #122 #4767
[inst-discovered] theory-solving 0x0 arith# ; #4834
[mk-app] #4838 = #4834 #4837
[mk-proof] #4839 rewrite #4838
[instance] 0x0 #4838
[end-of-instance]
[mk-app] #4840 = #4817 #4837
[mk-proof] #4841 trans #4836 #4839 #4840
[mk-app] #4842 or #4828 #4837 #4823
[mk-app] #4843 = #4824 #4842
[mk-proof] #4844 monotonicity #4830 #4841 #4843
[mk-app] #4845 or #313 #4828 #4837 #4823
[mk-app] #4846 or #313 #4824
[mk-proof] #4847 quant-inst #4846
[mk-app] #4848 or #313 #4842
[mk-app] #4849 = #4846 #4848
[mk-proof] #4850 monotonicity #4844 #4849
[mk-app] #4851 = #4848 #4845
[mk-proof] #4852 rewrite #4851
[mk-app] #4853 = #4846 #4845
[mk-proof] #4854 trans #4850 #4852 #4853
[mk-proof] #4855 mp #4847 #4854 #4845
[instance] 0x1240c4340 #4847 ; 94
[assign] #4825 justification -1: p466
[assign] (not #4837) justification -1: (not p5)
[attach-enode] #4818 94
[attach-enode] #4819 94
[attach-enode] #4820 94
[attach-enode] #4821 94
[attach-enode] #4822 94
[assign] #4823 justification -1: p3 p476 (not p477)
[end-of-instance]
[assign] #4812 clause p474 (not p473)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 47::Int idx))))) -47::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 47::Int idx))))) -47::Int)) 

[assign] #4813 clause p475 (not p473)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 47::Int idx))))) -47::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 47::Int idx))))) -47::Int)) 

[mk-app] #4856 = #4723 #4818
[attach-meaning] #82 arith (- 1)
[mk-app] #4857 * #82 #4818
[mk-app] #4858 + #4723 #4857
[mk-app] #4859 <= #4858 #55
[mk-app] #4860 >= #4858 #55
[assign] #4856 justification -1: p472
[attach-enode] #4856 0
[attach-enode] #4857 0
[attach-enode] #4858 0
[assign] #4859 justification -1: p479
[assign] #4860 justification -1: p479
[new-match] 0x1240c5010 #49 #37 #4768 #60 ; #4819 (#4771 #4771)
[mk-app] #4861 + #33 #4768
[mk-app] #4862 slot #60 #4861
[mk-app] #4863 = #4819 #4862
[mk-app] #4864 Int
[attach-meaning] #4864 arith 48
[mk-app] #4865 + #4864 #102
[inst-discovered] theory-solving 0x0 arith# ; #4861
[mk-app] #4866 = #4861 #4865
[mk-proof] #4867 rewrite #4866
[instance] 0x0 #4866
[end-of-instance]
[mk-app] #4868 slot #60 #4865
[mk-app] #4869 = #4862 #4868
[mk-proof] #4870 monotonicity #4867 #4869
[mk-app] #4871 = #4819 #4868
[mk-app] #4872 = #4863 #4871
[mk-proof] #4873 monotonicity #4870 #4872
[mk-app] #4874 or #293 #4871
[mk-app] #4875 or #293 #4863
[mk-proof] #4876 quant-inst #4875
[mk-app] #4877 = #4875 #4874
[mk-proof] #4878 monotonicity #4873 #4877
[mk-app] #4879 = #4874 #4874
[mk-proof] #4880 rewrite #4879
[mk-proof] #4881 trans #4878 #4880 #4877
[mk-proof] #4882 mp #4876 #4881 #4874
[instance] 0x1240c5010 #4876 ; 95
[attach-enode] #4864 95
[attach-enode] #4865 95
[attach-enode] #4868 95
[attach-enode] #4871 95
[assign] #4871 justification -1: p2
[end-of-instance]
[eq-expl] #4865 root
[new-match] 0x1240c5370 #209 #29 #4865 #60 ; #4868
[eq-expl] #4819 lit #4871 ; #4868
[eq-expl] #4868 root
[new-match] 0x1240c53a8 #96 #67 #4865 ; #4820 (#59 #59) (#4819 #4868) (#60 #60)
[mk-app] #4883 slot_inverse #60 #4868
[mk-app] #4884 * #82 #4883
[mk-app] #4885 + #4865 #4884
[mk-app] #4886 = #4885 #55
[mk-app] #4887 + #4864 #102 #4884
[inst-discovered] theory-solving 0x0 arith# ; #4885
[mk-app] #4888 = #4885 #4887
[mk-proof] #4889 rewrite #4888
[instance] 0x0 #4888
[end-of-instance]
[mk-app] #4890 = #4887 #55
[mk-app] #4891 = #4886 #4890
[mk-proof] #4892 monotonicity #4889 #4891
[mk-app] #4893 Int
[attach-meaning] #4893 arith (- 48)
[mk-app] #4894 + #102 #4884
[mk-app] #4895 = #4894 #4893
[inst-discovered] theory-solving 0x0 arith# ; #4890
[mk-app] #4896 = #4890 #4895
[mk-proof] #4897 rewrite #4896
[instance] 0x0 #4896
[end-of-instance]
[mk-app] #4898 = #4886 #4895
[mk-proof] #4899 trans #4892 #4897 #4898
[mk-app] #4900 or #285 #4895
[mk-app] #4901 or #285 #4886
[mk-proof] #4902 quant-inst #4901
[mk-app] #4903 = #4901 #4900
[mk-proof] #4904 monotonicity #4899 #4903
[mk-app] #4905 = #4900 #4900
[mk-proof] #4906 rewrite #4905
[mk-proof] #4907 trans #4904 #4906 #4903
[mk-proof] #4908 mp #4902 #4907 #4900
[instance] 0x1240c5370 #4902 ; 96
[attach-enode] #4883 96
[attach-enode] #4884 96
[attach-enode] #4894 96
[attach-enode] #4893 96
[attach-enode] #4895 96
[mk-app] #4909 <= #4894 #4893
[mk-app] #4910 >= #4894 #4893
[assign] #4895 justification -1: p1
[end-of-instance]
[mk-app] #4911 >= #4865 #55
[mk-app] #4912 not #4911
[mk-app] #4913 + #4865 #83
[mk-app] #4914 >= #4913 #55
[mk-app] #4915 lookup #59 #4868
[mk-app] #4916 next #4868
[mk-app] #4917 lookup #59 #4916
[mk-app] #4918 * #82 #4917
[mk-app] #4919 + #4915 #4918
[mk-app] #4920 <= #4919 #55
[mk-app] #4921 or #4912 #4914 #4920
[attach-meaning] #4893 arith (- 48)
[mk-app] #4922 >= #102 #4893
[inst-discovered] theory-solving 0x0 arith# ; #4911
[mk-app] #4923 = #4911 #4922
[mk-proof] #4924 rewrite #4923
[instance] 0x0 #4923
[end-of-instance]
[mk-app] #4925 not #4922
[mk-app] #4926 = #4912 #4925
[mk-proof] #4927 monotonicity #4924 #4926
[attach-meaning] #4864 arith 48
[mk-app] #4928 + #4864 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #4913
[mk-app] #4929 = #4913 #4928
[mk-proof] #4930 rewrite #4929
[instance] 0x0 #4929
[end-of-instance]
[mk-app] #4931 >= #4928 #55
[mk-app] #4932 = #4914 #4931
[mk-proof] #4933 monotonicity #4930 #4932
[attach-meaning] #4893 arith (- 48)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4864 arith 48
[mk-app] #4934 <= #122 #4864
[inst-discovered] theory-solving 0x0 arith# ; #4931
[mk-app] #4935 = #4931 #4934
[mk-proof] #4936 rewrite #4935
[instance] 0x0 #4935
[end-of-instance]
[mk-app] #4937 = #4914 #4934
[mk-proof] #4938 trans #4933 #4936 #4937
[mk-app] #4939 or #4925 #4934 #4920
[mk-app] #4940 = #4921 #4939
[mk-proof] #4941 monotonicity #4927 #4938 #4940
[mk-app] #4942 or #313 #4925 #4934 #4920
[mk-app] #4943 or #313 #4921
[mk-proof] #4944 quant-inst #4943
[mk-app] #4945 or #313 #4939
[mk-app] #4946 = #4943 #4945
[mk-proof] #4947 monotonicity #4941 #4946
[mk-app] #4948 = #4945 #4942
[mk-proof] #4949 rewrite #4948
[mk-app] #4950 = #4943 #4942
[mk-proof] #4951 trans #4947 #4949 #4950
[mk-proof] #4952 mp #4944 #4951 #4942
[instance] 0x1240c53a8 #4944 ; 96
[assign] #4922 justification -1: p476
[assign] (not #4934) justification -1: (not p5)
[attach-enode] #4915 96
[attach-enode] #4916 96
[attach-enode] #4917 96
[attach-enode] #4918 96
[attach-enode] #4919 96
[assign] #4920 justification -1: p3 p486 (not p487)
[end-of-instance]
[assign] #4909 clause p484 (not p483)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 48::Int idx))))) -48::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 48::Int idx))))) -48::Int)) 

[assign] #4910 clause p485 (not p483)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 48::Int idx))))) -48::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 48::Int idx))))) -48::Int)) 

[mk-app] #4953 = #4820 #4915
[attach-meaning] #82 arith (- 1)
[mk-app] #4954 * #82 #4915
[mk-app] #4955 + #4820 #4954
[mk-app] #4956 <= #4955 #55
[mk-app] #4957 >= #4955 #55
[assign] #4953 justification -1: p482
[attach-enode] #4953 0
[attach-enode] #4954 0
[attach-enode] #4955 0
[assign] #4956 justification -1: p489
[assign] #4957 justification -1: p489
[new-match] 0x1240cde98 #49 #37 #4865 #60 ; #4916 (#4868 #4868)
[mk-app] #4958 + #33 #4865
[mk-app] #4959 slot #60 #4958
[mk-app] #4960 = #4916 #4959
[mk-app] #4961 Int
[attach-meaning] #4961 arith 49
[mk-app] #4962 + #4961 #102
[inst-discovered] theory-solving 0x0 arith# ; #4958
[mk-app] #4963 = #4958 #4962
[mk-proof] #4964 rewrite #4963
[instance] 0x0 #4963
[end-of-instance]
[mk-app] #4965 slot #60 #4962
[mk-app] #4966 = #4959 #4965
[mk-proof] #4967 monotonicity #4964 #4966
[mk-app] #4968 = #4916 #4965
[mk-app] #4969 = #4960 #4968
[mk-proof] #4970 monotonicity #4967 #4969
[mk-app] #4971 or #293 #4968
[mk-app] #4972 or #293 #4960
[mk-proof] #4973 quant-inst #4972
[mk-app] #4974 = #4972 #4971
[mk-proof] #4975 monotonicity #4970 #4974
[mk-app] #4976 = #4971 #4971
[mk-proof] #4977 rewrite #4976
[mk-proof] #4978 trans #4975 #4977 #4974
[mk-proof] #4979 mp #4973 #4978 #4971
[instance] 0x1240cde98 #4973 ; 97
[attach-enode] #4961 97
[attach-enode] #4962 97
[attach-enode] #4965 97
[attach-enode] #4968 97
[assign] #4968 justification -1: p2
[end-of-instance]
[eq-expl] #4962 root
[new-match] 0x1240ce1f8 #209 #29 #4962 #60 ; #4965
[eq-expl] #4916 lit #4968 ; #4965
[eq-expl] #4965 root
[new-match] 0x1240ce230 #96 #67 #4962 ; #4917 (#59 #59) (#4916 #4965) (#60 #60)
[mk-app] #4980 slot_inverse #60 #4965
[mk-app] #4981 * #82 #4980
[mk-app] #4982 + #4962 #4981
[mk-app] #4983 = #4982 #55
[mk-app] #4984 + #4961 #102 #4981
[inst-discovered] theory-solving 0x0 arith# ; #4982
[mk-app] #4985 = #4982 #4984
[mk-proof] #4986 rewrite #4985
[instance] 0x0 #4985
[end-of-instance]
[mk-app] #4987 = #4984 #55
[mk-app] #4988 = #4983 #4987
[mk-proof] #4989 monotonicity #4986 #4988
[mk-app] #4990 Int
[attach-meaning] #4990 arith (- 49)
[mk-app] #4991 + #102 #4981
[mk-app] #4992 = #4991 #4990
[inst-discovered] theory-solving 0x0 arith# ; #4987
[mk-app] #4993 = #4987 #4992
[mk-proof] #4994 rewrite #4993
[instance] 0x0 #4993
[end-of-instance]
[mk-app] #4995 = #4983 #4992
[mk-proof] #4996 trans #4989 #4994 #4995
[mk-app] #4997 or #285 #4992
[mk-app] #4998 or #285 #4983
[mk-proof] #4999 quant-inst #4998
[mk-app] #5000 = #4998 #4997
[mk-proof] #5001 monotonicity #4996 #5000
[mk-app] #5002 = #4997 #4997
[mk-proof] #5003 rewrite #5002
[mk-proof] #5004 trans #5001 #5003 #5000
[mk-proof] #5005 mp #4999 #5004 #4997
[instance] 0x1240ce1f8 #4999 ; 98
[attach-enode] #4980 98
[attach-enode] #4981 98
[attach-enode] #4991 98
[attach-enode] #4990 98
[attach-enode] #4992 98
[mk-app] #5006 <= #4991 #4990
[mk-app] #5007 >= #4991 #4990
[assign] #4992 justification -1: p1
[end-of-instance]
[mk-app] #5008 >= #4962 #55
[mk-app] #5009 not #5008
[mk-app] #5010 + #4962 #83
[mk-app] #5011 >= #5010 #55
[mk-app] #5012 lookup #59 #4965
[mk-app] #5013 next #4965
[mk-app] #5014 lookup #59 #5013
[mk-app] #5015 * #82 #5014
[mk-app] #5016 + #5012 #5015
[mk-app] #5017 <= #5016 #55
[mk-app] #5018 or #5009 #5011 #5017
[attach-meaning] #4990 arith (- 49)
[mk-app] #5019 >= #102 #4990
[inst-discovered] theory-solving 0x0 arith# ; #5008
[mk-app] #5020 = #5008 #5019
[mk-proof] #5021 rewrite #5020
[instance] 0x0 #5020
[end-of-instance]
[mk-app] #5022 not #5019
[mk-app] #5023 = #5009 #5022
[mk-proof] #5024 monotonicity #5021 #5023
[attach-meaning] #4961 arith 49
[mk-app] #5025 + #4961 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #5010
[mk-app] #5026 = #5010 #5025
[mk-proof] #5027 rewrite #5026
[instance] 0x0 #5026
[end-of-instance]
[mk-app] #5028 >= #5025 #55
[mk-app] #5029 = #5011 #5028
[mk-proof] #5030 monotonicity #5027 #5029
[attach-meaning] #4990 arith (- 49)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #4961 arith 49
[mk-app] #5031 <= #122 #4961
[inst-discovered] theory-solving 0x0 arith# ; #5028
[mk-app] #5032 = #5028 #5031
[mk-proof] #5033 rewrite #5032
[instance] 0x0 #5032
[end-of-instance]
[mk-app] #5034 = #5011 #5031
[mk-proof] #5035 trans #5030 #5033 #5034
[mk-app] #5036 or #5022 #5031 #5017
[mk-app] #5037 = #5018 #5036
[mk-proof] #5038 monotonicity #5024 #5035 #5037
[mk-app] #5039 or #313 #5022 #5031 #5017
[mk-app] #5040 or #313 #5018
[mk-proof] #5041 quant-inst #5040
[mk-app] #5042 or #313 #5036
[mk-app] #5043 = #5040 #5042
[mk-proof] #5044 monotonicity #5038 #5043
[mk-app] #5045 = #5042 #5039
[mk-proof] #5046 rewrite #5045
[mk-app] #5047 = #5040 #5039
[mk-proof] #5048 trans #5044 #5046 #5047
[mk-proof] #5049 mp #5041 #5048 #5039
[instance] 0x1240ce230 #5041 ; 98
[assign] #5019 justification -1: p486
[assign] (not #5031) justification -1: (not p5)
[attach-enode] #5012 98
[attach-enode] #5013 98
[attach-enode] #5014 98
[attach-enode] #5015 98
[attach-enode] #5016 98
[assign] #5017 justification -1: p3 p496 (not p497)
[end-of-instance]
[assign] #5006 clause p494 (not p493)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 49::Int idx))))) -49::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 49::Int idx))))) -49::Int)) 

[assign] #5007 clause p495 (not p493)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 49::Int idx))))) -49::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 49::Int idx))))) -49::Int)) 

[mk-app] #5050 = #4917 #5012
[attach-meaning] #82 arith (- 1)
[mk-app] #5051 * #82 #5012
[mk-app] #5052 + #4917 #5051
[mk-app] #5053 <= #5052 #55
[mk-app] #5054 >= #5052 #55
[assign] #5050 justification -1: p492
[attach-enode] #5050 0
[attach-enode] #5051 0
[attach-enode] #5052 0
[assign] #5053 justification -1: p499
[assign] #5054 justification -1: p499
[new-match] 0x1240cef00 #49 #37 #4962 #60 ; #5013 (#4965 #4965)
[mk-app] #5055 + #33 #4962
[mk-app] #5056 slot #60 #5055
[mk-app] #5057 = #5013 #5056
[mk-app] #5058 Int
[attach-meaning] #5058 arith 50
[mk-app] #5059 + #5058 #102
[inst-discovered] theory-solving 0x0 arith# ; #5055
[mk-app] #5060 = #5055 #5059
[mk-proof] #5061 rewrite #5060
[instance] 0x0 #5060
[end-of-instance]
[mk-app] #5062 slot #60 #5059
[mk-app] #5063 = #5056 #5062
[mk-proof] #5064 monotonicity #5061 #5063
[mk-app] #5065 = #5013 #5062
[mk-app] #5066 = #5057 #5065
[mk-proof] #5067 monotonicity #5064 #5066
[mk-app] #5068 or #293 #5065
[mk-app] #5069 or #293 #5057
[mk-proof] #5070 quant-inst #5069
[mk-app] #5071 = #5069 #5068
[mk-proof] #5072 monotonicity #5067 #5071
[mk-app] #5073 = #5068 #5068
[mk-proof] #5074 rewrite #5073
[mk-proof] #5075 trans #5072 #5074 #5071
[mk-proof] #5076 mp #5070 #5075 #5068
[instance] 0x1240cef00 #5070 ; 99
[attach-enode] #5058 99
[attach-enode] #5059 99
[attach-enode] #5062 99
[attach-enode] #5065 99
[assign] #5065 justification -1: p2
[end-of-instance]
[eq-expl] #5059 root
[new-match] 0x1240cf260 #209 #29 #5059 #60 ; #5062
[eq-expl] #5013 lit #5065 ; #5062
[eq-expl] #5062 root
[new-match] 0x1240cf298 #96 #67 #5059 ; #5014 (#59 #59) (#5013 #5062) (#60 #60)
[mk-app] #5077 slot_inverse #60 #5062
[mk-app] #5078 * #82 #5077
[mk-app] #5079 + #5059 #5078
[mk-app] #5080 = #5079 #55
[mk-app] #5081 + #5058 #102 #5078
[inst-discovered] theory-solving 0x0 arith# ; #5079
[mk-app] #5082 = #5079 #5081
[mk-proof] #5083 rewrite #5082
[instance] 0x0 #5082
[end-of-instance]
[mk-app] #5084 = #5081 #55
[mk-app] #5085 = #5080 #5084
[mk-proof] #5086 monotonicity #5083 #5085
[mk-app] #5087 Int
[attach-meaning] #5087 arith (- 50)
[mk-app] #5088 + #102 #5078
[mk-app] #5089 = #5088 #5087
[inst-discovered] theory-solving 0x0 arith# ; #5084
[mk-app] #5090 = #5084 #5089
[mk-proof] #5091 rewrite #5090
[instance] 0x0 #5090
[end-of-instance]
[mk-app] #5092 = #5080 #5089
[mk-proof] #5093 trans #5086 #5091 #5092
[mk-app] #5094 or #285 #5089
[mk-app] #5095 or #285 #5080
[mk-proof] #5096 quant-inst #5095
[mk-app] #5097 = #5095 #5094
[mk-proof] #5098 monotonicity #5093 #5097
[mk-app] #5099 = #5094 #5094
[mk-proof] #5100 rewrite #5099
[mk-proof] #5101 trans #5098 #5100 #5097
[mk-proof] #5102 mp #5096 #5101 #5094
[instance] 0x1240cf260 #5096 ; 100
[attach-enode] #5077 100
[attach-enode] #5078 100
[attach-enode] #5088 100
[attach-enode] #5087 100
[attach-enode] #5089 100
[mk-app] #5103 <= #5088 #5087
[mk-app] #5104 >= #5088 #5087
[assign] #5089 justification -1: p1
[end-of-instance]
[mk-app] #5105 >= #5059 #55
[mk-app] #5106 not #5105
[mk-app] #5107 + #5059 #83
[mk-app] #5108 >= #5107 #55
[mk-app] #5109 lookup #59 #5062
[mk-app] #5110 next #5062
[mk-app] #5111 lookup #59 #5110
[mk-app] #5112 * #82 #5111
[mk-app] #5113 + #5109 #5112
[mk-app] #5114 <= #5113 #55
[mk-app] #5115 or #5106 #5108 #5114
[attach-meaning] #5087 arith (- 50)
[mk-app] #5116 >= #102 #5087
[inst-discovered] theory-solving 0x0 arith# ; #5105
[mk-app] #5117 = #5105 #5116
[mk-proof] #5118 rewrite #5117
[instance] 0x0 #5117
[end-of-instance]
[mk-app] #5119 not #5116
[mk-app] #5120 = #5106 #5119
[mk-proof] #5121 monotonicity #5118 #5120
[attach-meaning] #5058 arith 50
[mk-app] #5122 + #5058 #83 #102
[inst-discovered] theory-solving 0x0 arith# ; #5107
[mk-app] #5123 = #5107 #5122
[mk-proof] #5124 rewrite #5123
[instance] 0x0 #5123
[end-of-instance]
[mk-app] #5125 >= #5122 #55
[mk-app] #5126 = #5108 #5125
[mk-proof] #5127 monotonicity #5124 #5126
[attach-meaning] #5087 arith (- 50)
[attach-meaning] #82 arith (- 1)
[attach-meaning] #5058 arith 50
[mk-app] #5128 <= #122 #5058
[inst-discovered] theory-solving 0x0 arith# ; #5125
[mk-app] #5129 = #5125 #5128
[mk-proof] #5130 rewrite #5129
[instance] 0x0 #5129
[end-of-instance]
[mk-app] #5131 = #5108 #5128
[mk-proof] #5132 trans #5127 #5130 #5131
[mk-app] #5133 or #5119 #5128 #5114
[mk-app] #5134 = #5115 #5133
[mk-proof] #5135 monotonicity #5121 #5132 #5134
[mk-app] #5136 or #313 #5119 #5128 #5114
[mk-app] #5137 or #313 #5115
[mk-proof] #5138 quant-inst #5137
[mk-app] #5139 or #313 #5133
[mk-app] #5140 = #5137 #5139
[mk-proof] #5141 monotonicity #5135 #5140
[mk-app] #5142 = #5139 #5136
[mk-proof] #5143 rewrite #5142
[mk-app] #5144 = #5137 #5136
[mk-proof] #5145 trans #5141 #5143 #5144
[mk-proof] #5146 mp #5138 #5145 #5136
[instance] 0x1240cf298 #5138 ; 100
[assign] #5116 justification -1: p496
[assign] (not #5128) justification -1: (not p5)
[attach-enode] #5109 100
[attach-enode] #5110 100
[attach-enode] #5111 100
[attach-enode] #5112 100
[attach-enode] #5113 100
[assign] #5114 justification -1: p3 p506 (not p507)
[end-of-instance]
[assign] #5103 clause p504 (not p503)
  (<= (+ idx (* -1::Int (slot_inverse s (slot s (+ 50::Int idx))))) -50::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 50::Int idx))))) -50::Int)) 

[assign] #5104 clause p505 (not p503)
  (>= (+ idx (* -1::Int (slot_inverse s (slot s (+ 50::Int idx))))) -50::Int) 
  (not (= (+ idx (* -1::Int (slot_inverse s (slot s (+ 50::Int idx))))) -50::Int)) 

[mk-app] #5147 = #5014 #5109
[attach-meaning] #82 arith (- 1)
[mk-app] #5148 * #82 #5109
[mk-app] #5149 + #5014 #5148
[mk-app] #5150 <= #5149 #55
[mk-app] #5151 >= #5149 #55
[assign] #5147 justification -1: p502
[attach-enode] #5147 0
[attach-enode] #5148 0
[attach-enode] #5149 0
[assign] #5150 justification -1: p509
[assign] #5151 justification -1: p509
[new-match] 0x124059978 #49 #37 #5059 #60 ; #5110 (#5062 #5062)
[mk-app] #5152 Int
[attach-meaning] #5152 arith 101
[attach-meaning] #82 arith (- 1)
[attach-meaning] #5152 arith 101
[mk-app] #5153 Heap!val!0
[mk-app] #5154 Slice!val!0
[mk-app] #5155 Address!val!0
[mk-app] #5156 Address!val!1
[mk-app] #5157 Address!val!2
[attach-meaning] #431 arith (- 2)
[mk-app] #5158 Address!val!3
[attach-meaning] #528 arith (- 3)
[mk-app] #5159 Address!val!4
[attach-meaning] #625 arith (- 4)
[mk-app] #5160 Address!val!5
[attach-meaning] #722 arith (- 5)
[mk-app] #5161 Address!val!6
[attach-meaning] #819 arith (- 6)
[mk-app] #5162 Address!val!7
[attach-meaning] #916 arith (- 7)
[mk-app] #5163 Address!val!8
[attach-meaning] #1013 arith (- 8)
[mk-app] #5164 Address!val!9
[attach-meaning] #1110 arith (- 9)
[mk-app] #5165 Address!val!10
[attach-meaning] #1207 arith (- 10)
[mk-app] #5166 Address!val!11
[attach-meaning] #1304 arith (- 11)
[mk-app] #5167 Address!val!12
[attach-meaning] #1401 arith (- 12)
[mk-app] #5168 Address!val!13
[attach-meaning] #1498 arith (- 13)
[mk-app] #5169 Address!val!14
[attach-meaning] #1595 arith (- 14)
[mk-app] #5170 Address!val!15
[attach-meaning] #1692 arith (- 15)
[attach-meaning] #1760 arith 16
[attach-meaning] #1760 arith 16
[mk-app] #5171 Address!val!16
[attach-meaning] #1789 arith (- 16)
[attach-meaning] #1857 arith 17
[attach-meaning] #1857 arith 17
[mk-app] #5172 Address!val!17
[attach-meaning] #1886 arith (- 17)
[attach-meaning] #1954 arith 18
[attach-meaning] #1954 arith 18
[mk-app] #5173 Address!val!18
[attach-meaning] #1983 arith (- 18)
[attach-meaning] #2051 arith 19
[attach-meaning] #2051 arith 19
[mk-app] #5174 Address!val!19
[attach-meaning] #2080 arith (- 19)
[attach-meaning] #2148 arith 20
[attach-meaning] #2148 arith 20
[mk-app] #5175 Address!val!20
[attach-meaning] #2177 arith (- 20)
[attach-meaning] #2245 arith 21
[attach-meaning] #2245 arith 21
[mk-app] #5176 Address!val!21
[attach-meaning] #2274 arith (- 21)
[attach-meaning] #2342 arith 22
[attach-meaning] #2342 arith 22
[mk-app] #5177 Address!val!22
[attach-meaning] #2371 arith (- 22)
[attach-meaning] #2439 arith 23
[attach-meaning] #2439 arith 23
[mk-app] #5178 Address!val!23
[attach-meaning] #2468 arith (- 23)
[attach-meaning] #2536 arith 24
[attach-meaning] #2536 arith 24
[mk-app] #5179 Address!val!24
[attach-meaning] #2565 arith (- 24)
[attach-meaning] #2633 arith 25
[attach-meaning] #2633 arith 25
[mk-app] #5180 Address!val!25
[attach-meaning] #2662 arith (- 25)
[attach-meaning] #2730 arith 26
[attach-meaning] #2730 arith 26
[mk-app] #5181 Address!val!26
[attach-meaning] #2759 arith (- 26)
[attach-meaning] #2827 arith 27
[attach-meaning] #2827 arith 27
[mk-app] #5182 Address!val!27
[attach-meaning] #2856 arith (- 27)
[attach-meaning] #2924 arith 28
[attach-meaning] #2924 arith 28
[mk-app] #5183 Address!val!28
[attach-meaning] #2953 arith (- 28)
[attach-meaning] #3021 arith 29
[attach-meaning] #3021 arith 29
[mk-app] #5184 Address!val!29
[attach-meaning] #3050 arith (- 29)
[attach-meaning] #3118 arith 30
[attach-meaning] #3118 arith 30
[mk-app] #5185 Address!val!30
[attach-meaning] #3147 arith (- 30)
[attach-meaning] #3215 arith 31
[attach-meaning] #3215 arith 31
[mk-app] #5186 Address!val!31
[attach-meaning] #3244 arith (- 31)
[attach-meaning] #3312 arith 32
[attach-meaning] #3312 arith 32
[mk-app] #5187 Address!val!32
[attach-meaning] #3341 arith (- 32)
[attach-meaning] #3409 arith 33
[attach-meaning] #3409 arith 33
[mk-app] #5188 Address!val!33
[attach-meaning] #3438 arith (- 33)
[attach-meaning] #3506 arith 34
[attach-meaning] #3506 arith 34
[mk-app] #5189 Address!val!34
[attach-meaning] #3535 arith (- 34)
[attach-meaning] #3603 arith 35
[attach-meaning] #3603 arith 35
[mk-app] #5190 Address!val!35
[attach-meaning] #3632 arith (- 35)
[attach-meaning] #3700 arith 36
[attach-meaning] #3700 arith 36
[mk-app] #5191 Address!val!36
[attach-meaning] #3729 arith (- 36)
[attach-meaning] #3797 arith 37
[attach-meaning] #3797 arith 37
[mk-app] #5192 Address!val!37
[attach-meaning] #3826 arith (- 37)
[attach-meaning] #3894 arith 38
[attach-meaning] #3894 arith 38
[mk-app] #5193 Address!val!38
[attach-meaning] #3923 arith (- 38)
[attach-meaning] #3991 arith 39
[attach-meaning] #3991 arith 39
[mk-app] #5194 Address!val!39
[attach-meaning] #4020 arith (- 39)
[attach-meaning] #4088 arith 40
[attach-meaning] #4088 arith 40
[mk-app] #5195 Address!val!40
[attach-meaning] #4117 arith (- 40)
[attach-meaning] #4185 arith 41
[attach-meaning] #4185 arith 41
[mk-app] #5196 Address!val!41
[attach-meaning] #4214 arith (- 41)
[attach-meaning] #4282 arith 42
[attach-meaning] #4282 arith 42
[mk-app] #5197 Address!val!42
[attach-meaning] #4311 arith (- 42)
[attach-meaning] #4379 arith 43
[attach-meaning] #4379 arith 43
[mk-app] #5198 Address!val!43
[attach-meaning] #4408 arith (- 43)
[attach-meaning] #4476 arith 44
[attach-meaning] #4476 arith 44
[mk-app] #5199 Address!val!44
[attach-meaning] #4505 arith (- 44)
[attach-meaning] #4573 arith 45
[attach-meaning] #4573 arith 45
[mk-app] #5200 Address!val!45
[attach-meaning] #4602 arith (- 45)
[attach-meaning] #4670 arith 46
[attach-meaning] #4670 arith 46
[mk-app] #5201 Address!val!46
[attach-meaning] #4699 arith (- 46)
[attach-meaning] #4767 arith 47
[attach-meaning] #4767 arith 47
[mk-app] #5202 Address!val!47
[attach-meaning] #4796 arith (- 47)
[attach-meaning] #4864 arith 48
[attach-meaning] #4864 arith 48
[mk-app] #5203 Address!val!48
[attach-meaning] #4893 arith (- 48)
[attach-meaning] #4961 arith 49
[attach-meaning] #4961 arith 49
[mk-app] #5204 Address!val!49
[attach-meaning] #4990 arith (- 49)
[attach-meaning] #5058 arith 50
[attach-meaning] #5058 arith 50
[mk-app] #5205 Address!val!50
[attach-meaning] #5087 arith (- 50)
[mk-app] #5206 Address!val!51
[attach-meaning] #1760 arith 16
[attach-meaning] #1857 arith 17
[attach-meaning] #1954 arith 18
[attach-meaning] #2051 arith 19
[attach-meaning] #2148 arith 20
[attach-meaning] #2245 arith 21
[attach-meaning] #2342 arith 22
[attach-meaning] #2439 arith 23
[attach-meaning] #2536 arith 24
[attach-meaning] #2633 arith 25
[attach-meaning] #2730 arith 26
[attach-meaning] #2827 arith 27
[attach-meaning] #2924 arith 28
[attach-meaning] #3021 arith 29
[attach-meaning] #3118 arith 30
[attach-meaning] #3215 arith 31
[attach-meaning] #3312 arith 32
[attach-meaning] #3409 arith 33
[attach-meaning] #3506 arith 34
[attach-meaning] #3603 arith 35
[attach-meaning] #3700 arith 36
[attach-meaning] #3797 arith 37
[attach-meaning] #3894 arith 38
[attach-meaning] #3991 arith 39
[attach-meaning] #4088 arith 40
[attach-meaning] #4185 arith 41
[attach-meaning] #4282 arith 42
[attach-meaning] #4379 arith 43
[attach-meaning] #4476 arith 44
[attach-meaning] #4573 arith 45
[attach-meaning] #4670 arith 46
[attach-meaning] #4767 arith 47
[attach-meaning] #4864 arith 48
[attach-meaning] #4961 arith 49
[attach-meaning] #5058 arith 50
[mk-app] #5207 Int
[attach-meaning] #5207 arith 51
[mk-app] #5208 Int
[attach-meaning] #5208 arith 52
[mk-app] #5209 Int
[attach-meaning] #5209 arith 53
[mk-app] #5210 Int
[attach-meaning] #5210 arith 54
[mk-app] #5211 Int
[attach-meaning] #5211 arith 55
[mk-app] #5212 Int
[attach-meaning] #5212 arith 56
[mk-app] #5213 Int
[attach-meaning] #5213 arith 57
[mk-app] #5214 Int
[attach-meaning] #5214 arith 58
[mk-app] #5215 Int
[attach-meaning] #5215 arith 59
[mk-app] #5216 Int
[attach-meaning] #5216 arith 60
[mk-app] #5217 Int
[attach-meaning] #5217 arith 61
[mk-app] #5218 Int
[attach-meaning] #5218 arith 62
[mk-app] #5219 Int
[attach-meaning] #5219 arith 63
[mk-app] #5220 Int
[attach-meaning] #5220 arith 64
[mk-app] #5221 Int
[attach-meaning] #5221 arith 65
[mk-app] #5222 Int
[attach-meaning] #5222 arith 66
[mk-app] #5223 Int
[attach-meaning] #5223 arith 67
[mk-app] #5224 Int
[attach-meaning] #5224 arith 68
[mk-app] #5225 Int
[attach-meaning] #5225 arith 69
[mk-app] #5226 Int
[attach-meaning] #5226 arith 70
[mk-app] #5227 Int
[attach-meaning] #5227 arith 71
[mk-app] #5228 Int
[attach-meaning] #5228 arith 72
[mk-app] #5229 Int
[attach-meaning] #5229 arith 73
[mk-app] #5230 Int
[attach-meaning] #5230 arith 74
[mk-app] #5231 Int
[attach-meaning] #5231 arith 75
[mk-app] #5232 Int
[attach-meaning] #5232 arith 76
[mk-app] #5233 Int
[attach-meaning] #5233 arith 77
[mk-app] #5234 Int
[attach-meaning] #5234 arith 78
[mk-app] #5235 Int
[attach-meaning] #5235 arith 79
[mk-app] #5236 Int
[attach-meaning] #5236 arith 80
[mk-app] #5237 Int
[attach-meaning] #5237 arith 81
[mk-app] #5238 Int
[attach-meaning] #5238 arith 82
[mk-app] #5239 Int
[attach-meaning] #5239 arith 83
[mk-app] #5240 Int
[attach-meaning] #5240 arith 84
[mk-app] #5241 Int
[attach-meaning] #5241 arith 85
[mk-app] #5242 Int
[attach-meaning] #5242 arith 86
[mk-app] #5243 Int
[attach-meaning] #5243 arith 87
[mk-app] #5244 Int
[attach-meaning] #5244 arith 88
[mk-app] #5245 Int
[attach-meaning] #5245 arith 89
[mk-app] #5246 Int
[attach-meaning] #5246 arith 90
[mk-app] #5247 Int
[attach-meaning] #5247 arith 91
[mk-app] #5248 Int
[attach-meaning] #5248 arith 92
[mk-app] #5249 Int
[attach-meaning] #5249 arith 93
[mk-app] #5250 Int
[attach-meaning] #5250 arith 94
[mk-app] #5251 Int
[attach-meaning] #5251 arith 95
[mk-app] #5252 Int
[attach-meaning] #5252 arith 96
[mk-app] #5253 Int
[attach-meaning] #5253 arith 97
[mk-app] #5254 Int
[attach-meaning] #5254 arith 98
[mk-app] #5255 Int
[attach-meaning] #5255 arith 99
[attach-meaning] #104 arith 100
[attach-meaning] #5152 arith 101
[mk-app] #5256 Int
[attach-meaning] #5256 arith 102
[mk-app] #5257 Int
[attach-meaning] #5257 arith 103
[mk-app] #5258 Int
[attach-meaning] #5258 arith 104
[mk-app] #5259 Int
[attach-meaning] #5259 arith 105
[mk-app] #5260 Int
[attach-meaning] #5260 arith 106
[mk-app] #5261 Int
[attach-meaning] #5261 arith 107
[mk-app] #5262 Int
[attach-meaning] #5262 arith 108
[mk-app] #5263 Int
[attach-meaning] #5263 arith 109
[mk-app] #5264 Int
[attach-meaning] #5264 arith 110
[mk-app] #5265 Int
[attach-meaning] #5265 arith 111
[mk-app] #5266 Int
[attach-meaning] #5266 arith 112
[mk-app] #5267 Int
[attach-meaning] #5267 arith 113
[mk-app] #5268 Int
[attach-meaning] #5268 arith 114
[mk-app] #5269 Int
[attach-meaning] #5269 arith 115
[mk-app] #5270 Int
[attach-meaning] #5270 arith 116
[mk-app] #5271 Int
[attach-meaning] #5271 arith 117
[mk-app] #5272 Int
[attach-meaning] #5272 arith 118
[mk-app] #5273 Int
[attach-meaning] #5273 arith 119
[mk-app] #5274 Int
[attach-meaning] #5274 arith 120
[mk-app] #5275 Int
[attach-meaning] #5275 arith 121
[mk-app] #5276 Int
[attach-meaning] #5276 arith 122
[mk-app] #5277 Int
[attach-meaning] #5277 arith 123
[mk-app] #5278 Int
[attach-meaning] #5278 arith 124
[mk-app] #5279 Int
[attach-meaning] #5279 arith 125
[mk-app] #5280 Int
[attach-meaning] #5280 arith 126
[mk-app] #5281 Int
[attach-meaning] #5281 arith 127
[mk-app] #5282 Int
[attach-meaning] #5282 arith 128
[mk-app] #5283 Int
[attach-meaning] #5283 arith 129
[mk-app] #5284 Int
[attach-meaning] #5284 arith 130
[mk-app] #5285 Int
[attach-meaning] #5285 arith 131
[mk-app] #5286 Int
[attach-meaning] #5286 arith 132
[mk-app] #5287 Int
[attach-meaning] #5287 arith 133
[mk-app] #5288 Int
[attach-meaning] #5288 arith 134
[mk-app] #5289 Int
[attach-meaning] #5289 arith 135
[mk-app] #5290 Int
[attach-meaning] #5290 arith 136
[mk-app] #5291 Int
[attach-meaning] #5291 arith 137
[mk-app] #5292 Int
[attach-meaning] #5292 arith 138
[mk-app] #5293 Int
[attach-meaning] #5293 arith 139
[mk-app] #5294 Int
[attach-meaning] #5294 arith 140
[mk-app] #5295 Int
[attach-meaning] #5295 arith 141
[mk-app] #5296 Int
[attach-meaning] #5296 arith 142
[mk-app] #5297 Int
[attach-meaning] #5297 arith 143
[mk-app] #5298 Int
[attach-meaning] #5298 arith 144
[mk-app] #5299 Int
[attach-meaning] #5299 arith 145
[mk-app] #5300 Int
[attach-meaning] #5300 arith 146
[mk-app] #5301 Int
[attach-meaning] #5301 arith 147
[mk-app] #5302 Int
[attach-meaning] #5302 arith 148
[mk-app] #5303 Int
[attach-meaning] #5303 arith 149
[mk-app] #5304 Int
[attach-meaning] #5304 arith 150
[mk-app] #5305 Int
[attach-meaning] #5305 arith 151
[mk-app] #5306 Int
[attach-meaning] #5306 arith 152
[mk-app] #5307 Int
[attach-meaning] #5307 arith 153
[mk-app] #5308 Int
[attach-meaning] #5308 arith 154
[mk-app] #5309 Int
[attach-meaning] #5309 arith 155
[mk-app] #5310 Int
[attach-meaning] #5310 arith 156
[mk-app] #5311 Int
[attach-meaning] #5311 arith 157
[mk-app] #5312 Int
[attach-meaning] #5312 arith 158
[mk-app] #5313 Int
[attach-meaning] #5313 arith 159
[mk-app] #5314 Int
[attach-meaning] #5314 arith 160
[mk-app] #5315 Int
[attach-meaning] #5315 arith 161
[mk-app] #5316 Int
[attach-meaning] #5316 arith 162
[mk-app] #5317 Int
[attach-meaning] #5317 arith 163
[mk-app] #5318 Int
[attach-meaning] #5318 arith 164
[mk-app] #5319 Int
[attach-meaning] #5319 arith 165
[mk-app] #5320 Int
[attach-meaning] #5320 arith 166
[mk-app] #5321 Int
[attach-meaning] #5321 arith 167
[mk-app] #5322 Int
[attach-meaning] #5322 arith 168
[mk-app] #5323 Int
[attach-meaning] #5323 arith 169
[mk-app] #5324 Int
[attach-meaning] #5324 arith 170
[mk-app] #5325 Int
[attach-meaning] #5325 arith 171
[mk-app] #5326 Int
[attach-meaning] #5326 arith 172
[mk-app] #5327 Int
[attach-meaning] #5327 arith 173
[mk-app] #5328 Int
[attach-meaning] #5328 arith 174
[mk-app] #5329 Int
[attach-meaning] #5329 arith 175
[mk-app] #5330 Int
[attach-meaning] #5330 arith 176
[mk-app] #5331 Int
[attach-meaning] #5331 arith 177
[mk-app] #5332 Int
[attach-meaning] #5332 arith 178
[mk-app] #5333 Int
[attach-meaning] #5333 arith 179
[mk-app] #5334 Int
[attach-meaning] #5334 arith 180
[mk-app] #5335 Int
[attach-meaning] #5335 arith 181
[mk-app] #5336 Int
[attach-meaning] #5336 arith 182
[mk-app] #5337 Int
[attach-meaning] #5337 arith 183
[mk-app] #5338 Int
[attach-meaning] #5338 arith 184
[mk-app] #5339 Int
[attach-meaning] #5339 arith 185
[mk-app] #5340 Int
[attach-meaning] #5340 arith 186
[mk-app] #5341 Int
[attach-meaning] #5341 arith 187
[mk-app] #5342 Int
[attach-meaning] #5342 arith 188
[mk-app] #5343 Int
[attach-meaning] #5343 arith 189
[mk-app] #5344 Int
[attach-meaning] #5344 arith 190
[mk-app] #5345 Int
[attach-meaning] #5345 arith 191
[mk-app] #5346 Int
[attach-meaning] #5346 arith 192
[mk-app] #5347 Int
[attach-meaning] #5347 arith 193
[mk-app] #5348 Int
[attach-meaning] #5348 arith 194
[mk-app] #5349 Int
[attach-meaning] #5349 arith 195
[mk-app] #5350 Int
[attach-meaning] #5350 arith 196
[mk-app] #5351 Int
[attach-meaning] #5351 arith 197
[mk-app] #5352 Int
[attach-meaning] #5352 arith 198
[mk-app] #5353 Int
[attach-meaning] #5353 arith 199
[mk-app] #5354 Int
[attach-meaning] #5354 arith 200
[mk-app] #5355 Int
[attach-meaning] #5355 arith 201
[mk-app] #5356 Int
[attach-meaning] #5356 arith 202
[mk-app] #5357 Int
[attach-meaning] #5357 arith 203
[mk-app] #5358 Int
[attach-meaning] #5358 arith 204
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[attach-meaning] #6 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[eof]
